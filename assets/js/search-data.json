{
  
    
        "post0": {
            "title": "~MY WORLD TIMEZONE API~",
            "content": "earf . import requests url = &quot;https://world-time2.p.rapidapi.com/timezone&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;0317f96beemsh35e5d75a42dbab7p1d5d30jsn35808d9ea4d2&quot;, &quot;X-RapidAPI-Host&quot;: &quot;world-time2.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) import requests url = &quot;https://world-time2.p.rapidapi.com/timezone&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;0317f96beemsh35e5d75a42dbab7p1d5d30jsn35808d9ea4d2&quot;, &quot;X-RapidAPI-Host&quot;: &quot;world-time2.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.json) json = response.json() . [&#34;Africa/Abidjan&#34;,&#34;Africa/Accra&#34;,&#34;Africa/Algiers&#34;,&#34;Africa/Bissau&#34;,&#34;Africa/Cairo&#34;,&#34;Africa/Casablanca&#34;,&#34;Africa/Ceuta&#34;,&#34;Africa/El_Aaiun&#34;,&#34;Africa/Johannesburg&#34;,&#34;Africa/Juba&#34;,&#34;Africa/Khartoum&#34;,&#34;Africa/Lagos&#34;,&#34;Africa/Maputo&#34;,&#34;Africa/Monrovia&#34;,&#34;Africa/Nairobi&#34;,&#34;Africa/Ndjamena&#34;,&#34;Africa/Sao_Tome&#34;,&#34;Africa/Tripoli&#34;,&#34;Africa/Tunis&#34;,&#34;Africa/Windhoek&#34;,&#34;America/Adak&#34;,&#34;America/Anchorage&#34;,&#34;America/Araguaina&#34;,&#34;America/Argentina/Buenos_Aires&#34;,&#34;America/Argentina/Catamarca&#34;,&#34;America/Argentina/Cordoba&#34;,&#34;America/Argentina/Jujuy&#34;,&#34;America/Argentina/La_Rioja&#34;,&#34;America/Argentina/Mendoza&#34;,&#34;America/Argentina/Rio_Gallegos&#34;,&#34;America/Argentina/Salta&#34;,&#34;America/Argentina/San_Juan&#34;,&#34;America/Argentina/San_Luis&#34;,&#34;America/Argentina/Tucuman&#34;,&#34;America/Argentina/Ushuaia&#34;,&#34;America/Asuncion&#34;,&#34;America/Atikokan&#34;,&#34;America/Bahia&#34;,&#34;America/Bahia_Banderas&#34;,&#34;America/Barbados&#34;,&#34;America/Belem&#34;,&#34;America/Belize&#34;,&#34;America/Blanc-Sablon&#34;,&#34;America/Boa_Vista&#34;,&#34;America/Bogota&#34;,&#34;America/Boise&#34;,&#34;America/Cambridge_Bay&#34;,&#34;America/Campo_Grande&#34;,&#34;America/Cancun&#34;,&#34;America/Caracas&#34;,&#34;America/Cayenne&#34;,&#34;America/Chicago&#34;,&#34;America/Chihuahua&#34;,&#34;America/Costa_Rica&#34;,&#34;America/Creston&#34;,&#34;America/Cuiaba&#34;,&#34;America/Curacao&#34;,&#34;America/Danmarkshavn&#34;,&#34;America/Dawson&#34;,&#34;America/Dawson_Creek&#34;,&#34;America/Denver&#34;,&#34;America/Detroit&#34;,&#34;America/Edmonton&#34;,&#34;America/Eirunepe&#34;,&#34;America/El_Salvador&#34;,&#34;America/Fort_Nelson&#34;,&#34;America/Fortaleza&#34;,&#34;America/Glace_Bay&#34;,&#34;America/Goose_Bay&#34;,&#34;America/Grand_Turk&#34;,&#34;America/Guatemala&#34;,&#34;America/Guayaquil&#34;,&#34;America/Guyana&#34;,&#34;America/Halifax&#34;,&#34;America/Havana&#34;,&#34;America/Hermosillo&#34;,&#34;America/Indiana/Indianapolis&#34;,&#34;America/Indiana/Knox&#34;,&#34;America/Indiana/Marengo&#34;,&#34;America/Indiana/Petersburg&#34;,&#34;America/Indiana/Tell_City&#34;,&#34;America/Indiana/Vevay&#34;,&#34;America/Indiana/Vincennes&#34;,&#34;America/Indiana/Winamac&#34;,&#34;America/Inuvik&#34;,&#34;America/Iqaluit&#34;,&#34;America/Jamaica&#34;,&#34;America/Juneau&#34;,&#34;America/Kentucky/Louisville&#34;,&#34;America/Kentucky/Monticello&#34;,&#34;America/La_Paz&#34;,&#34;America/Lima&#34;,&#34;America/Los_Angeles&#34;,&#34;America/Maceio&#34;,&#34;America/Managua&#34;,&#34;America/Manaus&#34;,&#34;America/Martinique&#34;,&#34;America/Matamoros&#34;,&#34;America/Mazatlan&#34;,&#34;America/Menominee&#34;,&#34;America/Merida&#34;,&#34;America/Metlakatla&#34;,&#34;America/Mexico_City&#34;,&#34;America/Miquelon&#34;,&#34;America/Moncton&#34;,&#34;America/Monterrey&#34;,&#34;America/Montevideo&#34;,&#34;America/Nassau&#34;,&#34;America/New_York&#34;,&#34;America/Nipigon&#34;,&#34;America/Nome&#34;,&#34;America/Noronha&#34;,&#34;America/North_Dakota/Beulah&#34;,&#34;America/North_Dakota/Center&#34;,&#34;America/North_Dakota/New_Salem&#34;,&#34;America/Nuuk&#34;,&#34;America/Ojinaga&#34;,&#34;America/Panama&#34;,&#34;America/Pangnirtung&#34;,&#34;America/Paramaribo&#34;,&#34;America/Phoenix&#34;,&#34;America/Port-au-Prince&#34;,&#34;America/Port_of_Spain&#34;,&#34;America/Porto_Velho&#34;,&#34;America/Puerto_Rico&#34;,&#34;America/Punta_Arenas&#34;,&#34;America/Rainy_River&#34;,&#34;America/Rankin_Inlet&#34;,&#34;America/Recife&#34;,&#34;America/Regina&#34;,&#34;America/Resolute&#34;,&#34;America/Rio_Branco&#34;,&#34;America/Santarem&#34;,&#34;America/Santiago&#34;,&#34;America/Santo_Domingo&#34;,&#34;America/Sao_Paulo&#34;,&#34;America/Scoresbysund&#34;,&#34;America/Sitka&#34;,&#34;America/St_Johns&#34;,&#34;America/Swift_Current&#34;,&#34;America/Tegucigalpa&#34;,&#34;America/Thule&#34;,&#34;America/Thunder_Bay&#34;,&#34;America/Tijuana&#34;,&#34;America/Toronto&#34;,&#34;America/Vancouver&#34;,&#34;America/Whitehorse&#34;,&#34;America/Winnipeg&#34;,&#34;America/Yakutat&#34;,&#34;America/Yellowknife&#34;,&#34;Antarctica/Casey&#34;,&#34;Antarctica/Davis&#34;,&#34;Antarctica/DumontDUrville&#34;,&#34;Antarctica/Macquarie&#34;,&#34;Antarctica/Mawson&#34;,&#34;Antarctica/Palmer&#34;,&#34;Antarctica/Rothera&#34;,&#34;Antarctica/Syowa&#34;,&#34;Antarctica/Troll&#34;,&#34;Antarctica/Vostok&#34;,&#34;Asia/Almaty&#34;,&#34;Asia/Amman&#34;,&#34;Asia/Anadyr&#34;,&#34;Asia/Aqtau&#34;,&#34;Asia/Aqtobe&#34;,&#34;Asia/Ashgabat&#34;,&#34;Asia/Atyrau&#34;,&#34;Asia/Baghdad&#34;,&#34;Asia/Baku&#34;,&#34;Asia/Bangkok&#34;,&#34;Asia/Barnaul&#34;,&#34;Asia/Beirut&#34;,&#34;Asia/Bishkek&#34;,&#34;Asia/Brunei&#34;,&#34;Asia/Chita&#34;,&#34;Asia/Choibalsan&#34;,&#34;Asia/Colombo&#34;,&#34;Asia/Damascus&#34;,&#34;Asia/Dhaka&#34;,&#34;Asia/Dili&#34;,&#34;Asia/Dubai&#34;,&#34;Asia/Dushanbe&#34;,&#34;Asia/Famagusta&#34;,&#34;Asia/Gaza&#34;,&#34;Asia/Hebron&#34;,&#34;Asia/Ho_Chi_Minh&#34;,&#34;Asia/Hong_Kong&#34;,&#34;Asia/Hovd&#34;,&#34;Asia/Irkutsk&#34;,&#34;Asia/Jakarta&#34;,&#34;Asia/Jayapura&#34;,&#34;Asia/Jerusalem&#34;,&#34;Asia/Kabul&#34;,&#34;Asia/Kamchatka&#34;,&#34;Asia/Karachi&#34;,&#34;Asia/Kathmandu&#34;,&#34;Asia/Khandyga&#34;,&#34;Asia/Kolkata&#34;,&#34;Asia/Krasnoyarsk&#34;,&#34;Asia/Kuala_Lumpur&#34;,&#34;Asia/Kuching&#34;,&#34;Asia/Macau&#34;,&#34;Asia/Magadan&#34;,&#34;Asia/Makassar&#34;,&#34;Asia/Manila&#34;,&#34;Asia/Nicosia&#34;,&#34;Asia/Novokuznetsk&#34;,&#34;Asia/Novosibirsk&#34;,&#34;Asia/Omsk&#34;,&#34;Asia/Oral&#34;,&#34;Asia/Pontianak&#34;,&#34;Asia/Pyongyang&#34;,&#34;Asia/Qatar&#34;,&#34;Asia/Qostanay&#34;,&#34;Asia/Qyzylorda&#34;,&#34;Asia/Riyadh&#34;,&#34;Asia/Sakhalin&#34;,&#34;Asia/Samarkand&#34;,&#34;Asia/Seoul&#34;,&#34;Asia/Shanghai&#34;,&#34;Asia/Singapore&#34;,&#34;Asia/Srednekolymsk&#34;,&#34;Asia/Taipei&#34;,&#34;Asia/Tashkent&#34;,&#34;Asia/Tbilisi&#34;,&#34;Asia/Tehran&#34;,&#34;Asia/Thimphu&#34;,&#34;Asia/Tokyo&#34;,&#34;Asia/Tomsk&#34;,&#34;Asia/Ulaanbaatar&#34;,&#34;Asia/Urumqi&#34;,&#34;Asia/Ust-Nera&#34;,&#34;Asia/Vladivostok&#34;,&#34;Asia/Yakutsk&#34;,&#34;Asia/Yangon&#34;,&#34;Asia/Yekaterinburg&#34;,&#34;Asia/Yerevan&#34;,&#34;Atlantic/Azores&#34;,&#34;Atlantic/Bermuda&#34;,&#34;Atlantic/Canary&#34;,&#34;Atlantic/Cape_Verde&#34;,&#34;Atlantic/Faroe&#34;,&#34;Atlantic/Madeira&#34;,&#34;Atlantic/Reykjavik&#34;,&#34;Atlantic/South_Georgia&#34;,&#34;Atlantic/Stanley&#34;,&#34;Australia/Adelaide&#34;,&#34;Australia/Brisbane&#34;,&#34;Australia/Broken_Hill&#34;,&#34;Australia/Darwin&#34;,&#34;Australia/Eucla&#34;,&#34;Australia/Hobart&#34;,&#34;Australia/Lindeman&#34;,&#34;Australia/Lord_Howe&#34;,&#34;Australia/Melbourne&#34;,&#34;Australia/Perth&#34;,&#34;Australia/Sydney&#34;,&#34;CET&#34;,&#34;CST6CDT&#34;,&#34;EET&#34;,&#34;EST&#34;,&#34;EST5EDT&#34;,&#34;Etc/GMT&#34;,&#34;Etc/GMT+1&#34;,&#34;Etc/GMT+10&#34;,&#34;Etc/GMT+11&#34;,&#34;Etc/GMT+12&#34;,&#34;Etc/GMT+2&#34;,&#34;Etc/GMT+3&#34;,&#34;Etc/GMT+4&#34;,&#34;Etc/GMT+5&#34;,&#34;Etc/GMT+6&#34;,&#34;Etc/GMT+7&#34;,&#34;Etc/GMT+8&#34;,&#34;Etc/GMT+9&#34;,&#34;Etc/GMT-1&#34;,&#34;Etc/GMT-10&#34;,&#34;Etc/GMT-11&#34;,&#34;Etc/GMT-12&#34;,&#34;Etc/GMT-13&#34;,&#34;Etc/GMT-14&#34;,&#34;Etc/GMT-2&#34;,&#34;Etc/GMT-3&#34;,&#34;Etc/GMT-4&#34;,&#34;Etc/GMT-5&#34;,&#34;Etc/GMT-6&#34;,&#34;Etc/GMT-7&#34;,&#34;Etc/GMT-8&#34;,&#34;Etc/GMT-9&#34;,&#34;Etc/UTC&#34;,&#34;Europe/Amsterdam&#34;,&#34;Europe/Andorra&#34;,&#34;Europe/Astrakhan&#34;,&#34;Europe/Athens&#34;,&#34;Europe/Belgrade&#34;,&#34;Europe/Berlin&#34;,&#34;Europe/Brussels&#34;,&#34;Europe/Bucharest&#34;,&#34;Europe/Budapest&#34;,&#34;Europe/Chisinau&#34;,&#34;Europe/Copenhagen&#34;,&#34;Europe/Dublin&#34;,&#34;Europe/Gibraltar&#34;,&#34;Europe/Helsinki&#34;,&#34;Europe/Istanbul&#34;,&#34;Europe/Kaliningrad&#34;,&#34;Europe/Kiev&#34;,&#34;Europe/Kirov&#34;,&#34;Europe/Lisbon&#34;,&#34;Europe/London&#34;,&#34;Europe/Luxembourg&#34;,&#34;Europe/Madrid&#34;,&#34;Europe/Malta&#34;,&#34;Europe/Minsk&#34;,&#34;Europe/Monaco&#34;,&#34;Europe/Moscow&#34;,&#34;Europe/Oslo&#34;,&#34;Europe/Paris&#34;,&#34;Europe/Prague&#34;,&#34;Europe/Riga&#34;,&#34;Europe/Rome&#34;,&#34;Europe/Samara&#34;,&#34;Europe/Saratov&#34;,&#34;Europe/Simferopol&#34;,&#34;Europe/Sofia&#34;,&#34;Europe/Stockholm&#34;,&#34;Europe/Tallinn&#34;,&#34;Europe/Tirane&#34;,&#34;Europe/Ulyanovsk&#34;,&#34;Europe/Uzhgorod&#34;,&#34;Europe/Vienna&#34;,&#34;Europe/Vilnius&#34;,&#34;Europe/Volgograd&#34;,&#34;Europe/Warsaw&#34;,&#34;Europe/Zaporozhye&#34;,&#34;Europe/Zurich&#34;,&#34;HST&#34;,&#34;Indian/Chagos&#34;,&#34;Indian/Christmas&#34;,&#34;Indian/Cocos&#34;,&#34;Indian/Kerguelen&#34;,&#34;Indian/Mahe&#34;,&#34;Indian/Maldives&#34;,&#34;Indian/Mauritius&#34;,&#34;Indian/Reunion&#34;,&#34;MET&#34;,&#34;MST&#34;,&#34;MST7MDT&#34;,&#34;PST8PDT&#34;,&#34;Pacific/Apia&#34;,&#34;Pacific/Auckland&#34;,&#34;Pacific/Bougainville&#34;,&#34;Pacific/Chatham&#34;,&#34;Pacific/Chuuk&#34;,&#34;Pacific/Easter&#34;,&#34;Pacific/Efate&#34;,&#34;Pacific/Enderbury&#34;,&#34;Pacific/Fakaofo&#34;,&#34;Pacific/Fiji&#34;,&#34;Pacific/Funafuti&#34;,&#34;Pacific/Galapagos&#34;,&#34;Pacific/Gambier&#34;,&#34;Pacific/Guadalcanal&#34;,&#34;Pacific/Guam&#34;,&#34;Pacific/Honolulu&#34;,&#34;Pacific/Kiritimati&#34;,&#34;Pacific/Kosrae&#34;,&#34;Pacific/Kwajalein&#34;,&#34;Pacific/Majuro&#34;,&#34;Pacific/Marquesas&#34;,&#34;Pacific/Nauru&#34;,&#34;Pacific/Niue&#34;,&#34;Pacific/Norfolk&#34;,&#34;Pacific/Noumea&#34;,&#34;Pacific/Pago_Pago&#34;,&#34;Pacific/Palau&#34;,&#34;Pacific/Pitcairn&#34;,&#34;Pacific/Pohnpei&#34;,&#34;Pacific/Port_Moresby&#34;,&#34;Pacific/Rarotonga&#34;,&#34;Pacific/Tahiti&#34;,&#34;Pacific/Tarawa&#34;,&#34;Pacific/Tongatapu&#34;,&#34;Pacific/Wake&#34;,&#34;Pacific/Wallis&#34;,&#34;WET&#34;] &lt;bound method Response.json of &lt;Response [200]&gt;&gt; . try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;list&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? [&#39;Africa/Abidjan&#39;, &#39;Africa/Accra&#39;, &#39;Africa/Algiers&#39;, &#39;Africa/Bissau&#39;, &#39;Africa/Cairo&#39;, &#39;Africa/Casablanca&#39;, &#39;Africa/Ceuta&#39;, &#39;Africa/El_Aaiun&#39;, &#39;Africa/Johannesburg&#39;, &#39;Africa/Juba&#39;, &#39;Africa/Khartoum&#39;, &#39;Africa/Lagos&#39;, &#39;Africa/Maputo&#39;, &#39;Africa/Monrovia&#39;, &#39;Africa/Nairobi&#39;, &#39;Africa/Ndjamena&#39;, &#39;Africa/Sao_Tome&#39;, &#39;Africa/Tripoli&#39;, &#39;Africa/Tunis&#39;, &#39;Africa/Windhoek&#39;, &#39;America/Adak&#39;, &#39;America/Anchorage&#39;, &#39;America/Araguaina&#39;, &#39;America/Argentina/Buenos_Aires&#39;, &#39;America/Argentina/Catamarca&#39;, &#39;America/Argentina/Cordoba&#39;, &#39;America/Argentina/Jujuy&#39;, &#39;America/Argentina/La_Rioja&#39;, &#39;America/Argentina/Mendoza&#39;, &#39;America/Argentina/Rio_Gallegos&#39;, &#39;America/Argentina/Salta&#39;, &#39;America/Argentina/San_Juan&#39;, &#39;America/Argentina/San_Luis&#39;, &#39;America/Argentina/Tucuman&#39;, &#39;America/Argentina/Ushuaia&#39;, &#39;America/Asuncion&#39;, &#39;America/Atikokan&#39;, &#39;America/Bahia&#39;, &#39;America/Bahia_Banderas&#39;, &#39;America/Barbados&#39;, &#39;America/Belem&#39;, &#39;America/Belize&#39;, &#39;America/Blanc-Sablon&#39;, &#39;America/Boa_Vista&#39;, &#39;America/Bogota&#39;, &#39;America/Boise&#39;, &#39;America/Cambridge_Bay&#39;, &#39;America/Campo_Grande&#39;, &#39;America/Cancun&#39;, &#39;America/Caracas&#39;, &#39;America/Cayenne&#39;, &#39;America/Chicago&#39;, &#39;America/Chihuahua&#39;, &#39;America/Costa_Rica&#39;, &#39;America/Creston&#39;, &#39;America/Cuiaba&#39;, &#39;America/Curacao&#39;, &#39;America/Danmarkshavn&#39;, &#39;America/Dawson&#39;, &#39;America/Dawson_Creek&#39;, &#39;America/Denver&#39;, &#39;America/Detroit&#39;, &#39;America/Edmonton&#39;, &#39;America/Eirunepe&#39;, &#39;America/El_Salvador&#39;, &#39;America/Fort_Nelson&#39;, &#39;America/Fortaleza&#39;, &#39;America/Glace_Bay&#39;, &#39;America/Goose_Bay&#39;, &#39;America/Grand_Turk&#39;, &#39;America/Guatemala&#39;, &#39;America/Guayaquil&#39;, &#39;America/Guyana&#39;, &#39;America/Halifax&#39;, &#39;America/Havana&#39;, &#39;America/Hermosillo&#39;, &#39;America/Indiana/Indianapolis&#39;, &#39;America/Indiana/Knox&#39;, &#39;America/Indiana/Marengo&#39;, &#39;America/Indiana/Petersburg&#39;, &#39;America/Indiana/Tell_City&#39;, &#39;America/Indiana/Vevay&#39;, &#39;America/Indiana/Vincennes&#39;, &#39;America/Indiana/Winamac&#39;, &#39;America/Inuvik&#39;, &#39;America/Iqaluit&#39;, &#39;America/Jamaica&#39;, &#39;America/Juneau&#39;, &#39;America/Kentucky/Louisville&#39;, &#39;America/Kentucky/Monticello&#39;, &#39;America/La_Paz&#39;, &#39;America/Lima&#39;, &#39;America/Los_Angeles&#39;, &#39;America/Maceio&#39;, &#39;America/Managua&#39;, &#39;America/Manaus&#39;, &#39;America/Martinique&#39;, &#39;America/Matamoros&#39;, &#39;America/Mazatlan&#39;, &#39;America/Menominee&#39;, &#39;America/Merida&#39;, &#39;America/Metlakatla&#39;, &#39;America/Mexico_City&#39;, &#39;America/Miquelon&#39;, &#39;America/Moncton&#39;, &#39;America/Monterrey&#39;, &#39;America/Montevideo&#39;, &#39;America/Nassau&#39;, &#39;America/New_York&#39;, &#39;America/Nipigon&#39;, &#39;America/Nome&#39;, &#39;America/Noronha&#39;, &#39;America/North_Dakota/Beulah&#39;, &#39;America/North_Dakota/Center&#39;, &#39;America/North_Dakota/New_Salem&#39;, &#39;America/Nuuk&#39;, &#39;America/Ojinaga&#39;, &#39;America/Panama&#39;, &#39;America/Pangnirtung&#39;, &#39;America/Paramaribo&#39;, &#39;America/Phoenix&#39;, &#39;America/Port-au-Prince&#39;, &#39;America/Port_of_Spain&#39;, &#39;America/Porto_Velho&#39;, &#39;America/Puerto_Rico&#39;, &#39;America/Punta_Arenas&#39;, &#39;America/Rainy_River&#39;, &#39;America/Rankin_Inlet&#39;, &#39;America/Recife&#39;, &#39;America/Regina&#39;, &#39;America/Resolute&#39;, &#39;America/Rio_Branco&#39;, &#39;America/Santarem&#39;, &#39;America/Santiago&#39;, &#39;America/Santo_Domingo&#39;, &#39;America/Sao_Paulo&#39;, &#39;America/Scoresbysund&#39;, &#39;America/Sitka&#39;, &#39;America/St_Johns&#39;, &#39;America/Swift_Current&#39;, &#39;America/Tegucigalpa&#39;, &#39;America/Thule&#39;, &#39;America/Thunder_Bay&#39;, &#39;America/Tijuana&#39;, &#39;America/Toronto&#39;, &#39;America/Vancouver&#39;, &#39;America/Whitehorse&#39;, &#39;America/Winnipeg&#39;, &#39;America/Yakutat&#39;, &#39;America/Yellowknife&#39;, &#39;Antarctica/Casey&#39;, &#39;Antarctica/Davis&#39;, &#39;Antarctica/DumontDUrville&#39;, &#39;Antarctica/Macquarie&#39;, &#39;Antarctica/Mawson&#39;, &#39;Antarctica/Palmer&#39;, &#39;Antarctica/Rothera&#39;, &#39;Antarctica/Syowa&#39;, &#39;Antarctica/Troll&#39;, &#39;Antarctica/Vostok&#39;, &#39;Asia/Almaty&#39;, &#39;Asia/Amman&#39;, &#39;Asia/Anadyr&#39;, &#39;Asia/Aqtau&#39;, &#39;Asia/Aqtobe&#39;, &#39;Asia/Ashgabat&#39;, &#39;Asia/Atyrau&#39;, &#39;Asia/Baghdad&#39;, &#39;Asia/Baku&#39;, &#39;Asia/Bangkok&#39;, &#39;Asia/Barnaul&#39;, &#39;Asia/Beirut&#39;, &#39;Asia/Bishkek&#39;, &#39;Asia/Brunei&#39;, &#39;Asia/Chita&#39;, &#39;Asia/Choibalsan&#39;, &#39;Asia/Colombo&#39;, &#39;Asia/Damascus&#39;, &#39;Asia/Dhaka&#39;, &#39;Asia/Dili&#39;, &#39;Asia/Dubai&#39;, &#39;Asia/Dushanbe&#39;, &#39;Asia/Famagusta&#39;, &#39;Asia/Gaza&#39;, &#39;Asia/Hebron&#39;, &#39;Asia/Ho_Chi_Minh&#39;, &#39;Asia/Hong_Kong&#39;, &#39;Asia/Hovd&#39;, &#39;Asia/Irkutsk&#39;, &#39;Asia/Jakarta&#39;, &#39;Asia/Jayapura&#39;, &#39;Asia/Jerusalem&#39;, &#39;Asia/Kabul&#39;, &#39;Asia/Kamchatka&#39;, &#39;Asia/Karachi&#39;, &#39;Asia/Kathmandu&#39;, &#39;Asia/Khandyga&#39;, &#39;Asia/Kolkata&#39;, &#39;Asia/Krasnoyarsk&#39;, &#39;Asia/Kuala_Lumpur&#39;, &#39;Asia/Kuching&#39;, &#39;Asia/Macau&#39;, &#39;Asia/Magadan&#39;, &#39;Asia/Makassar&#39;, &#39;Asia/Manila&#39;, &#39;Asia/Nicosia&#39;, &#39;Asia/Novokuznetsk&#39;, &#39;Asia/Novosibirsk&#39;, &#39;Asia/Omsk&#39;, &#39;Asia/Oral&#39;, &#39;Asia/Pontianak&#39;, &#39;Asia/Pyongyang&#39;, &#39;Asia/Qatar&#39;, &#39;Asia/Qostanay&#39;, &#39;Asia/Qyzylorda&#39;, &#39;Asia/Riyadh&#39;, &#39;Asia/Sakhalin&#39;, &#39;Asia/Samarkand&#39;, &#39;Asia/Seoul&#39;, &#39;Asia/Shanghai&#39;, &#39;Asia/Singapore&#39;, &#39;Asia/Srednekolymsk&#39;, &#39;Asia/Taipei&#39;, &#39;Asia/Tashkent&#39;, &#39;Asia/Tbilisi&#39;, &#39;Asia/Tehran&#39;, &#39;Asia/Thimphu&#39;, &#39;Asia/Tokyo&#39;, &#39;Asia/Tomsk&#39;, &#39;Asia/Ulaanbaatar&#39;, &#39;Asia/Urumqi&#39;, &#39;Asia/Ust-Nera&#39;, &#39;Asia/Vladivostok&#39;, &#39;Asia/Yakutsk&#39;, &#39;Asia/Yangon&#39;, &#39;Asia/Yekaterinburg&#39;, &#39;Asia/Yerevan&#39;, &#39;Atlantic/Azores&#39;, &#39;Atlantic/Bermuda&#39;, &#39;Atlantic/Canary&#39;, &#39;Atlantic/Cape_Verde&#39;, &#39;Atlantic/Faroe&#39;, &#39;Atlantic/Madeira&#39;, &#39;Atlantic/Reykjavik&#39;, &#39;Atlantic/South_Georgia&#39;, &#39;Atlantic/Stanley&#39;, &#39;Australia/Adelaide&#39;, &#39;Australia/Brisbane&#39;, &#39;Australia/Broken_Hill&#39;, &#39;Australia/Darwin&#39;, &#39;Australia/Eucla&#39;, &#39;Australia/Hobart&#39;, &#39;Australia/Lindeman&#39;, &#39;Australia/Lord_Howe&#39;, &#39;Australia/Melbourne&#39;, &#39;Australia/Perth&#39;, &#39;Australia/Sydney&#39;, &#39;CET&#39;, &#39;CST6CDT&#39;, &#39;EET&#39;, &#39;EST&#39;, &#39;EST5EDT&#39;, &#39;Etc/GMT&#39;, &#39;Etc/GMT+1&#39;, &#39;Etc/GMT+10&#39;, &#39;Etc/GMT+11&#39;, &#39;Etc/GMT+12&#39;, &#39;Etc/GMT+2&#39;, &#39;Etc/GMT+3&#39;, &#39;Etc/GMT+4&#39;, &#39;Etc/GMT+5&#39;, &#39;Etc/GMT+6&#39;, &#39;Etc/GMT+7&#39;, &#39;Etc/GMT+8&#39;, &#39;Etc/GMT+9&#39;, &#39;Etc/GMT-1&#39;, &#39;Etc/GMT-10&#39;, &#39;Etc/GMT-11&#39;, &#39;Etc/GMT-12&#39;, &#39;Etc/GMT-13&#39;, &#39;Etc/GMT-14&#39;, &#39;Etc/GMT-2&#39;, &#39;Etc/GMT-3&#39;, &#39;Etc/GMT-4&#39;, &#39;Etc/GMT-5&#39;, &#39;Etc/GMT-6&#39;, &#39;Etc/GMT-7&#39;, &#39;Etc/GMT-8&#39;, &#39;Etc/GMT-9&#39;, &#39;Etc/UTC&#39;, &#39;Europe/Amsterdam&#39;, &#39;Europe/Andorra&#39;, &#39;Europe/Astrakhan&#39;, &#39;Europe/Athens&#39;, &#39;Europe/Belgrade&#39;, &#39;Europe/Berlin&#39;, &#39;Europe/Brussels&#39;, &#39;Europe/Bucharest&#39;, &#39;Europe/Budapest&#39;, &#39;Europe/Chisinau&#39;, &#39;Europe/Copenhagen&#39;, &#39;Europe/Dublin&#39;, &#39;Europe/Gibraltar&#39;, &#39;Europe/Helsinki&#39;, &#39;Europe/Istanbul&#39;, &#39;Europe/Kaliningrad&#39;, &#39;Europe/Kiev&#39;, &#39;Europe/Kirov&#39;, &#39;Europe/Lisbon&#39;, &#39;Europe/London&#39;, &#39;Europe/Luxembourg&#39;, &#39;Europe/Madrid&#39;, &#39;Europe/Malta&#39;, &#39;Europe/Minsk&#39;, &#39;Europe/Monaco&#39;, &#39;Europe/Moscow&#39;, &#39;Europe/Oslo&#39;, &#39;Europe/Paris&#39;, &#39;Europe/Prague&#39;, &#39;Europe/Riga&#39;, &#39;Europe/Rome&#39;, &#39;Europe/Samara&#39;, &#39;Europe/Saratov&#39;, &#39;Europe/Simferopol&#39;, &#39;Europe/Sofia&#39;, &#39;Europe/Stockholm&#39;, &#39;Europe/Tallinn&#39;, &#39;Europe/Tirane&#39;, &#39;Europe/Ulyanovsk&#39;, &#39;Europe/Uzhgorod&#39;, &#39;Europe/Vienna&#39;, &#39;Europe/Vilnius&#39;, &#39;Europe/Volgograd&#39;, &#39;Europe/Warsaw&#39;, &#39;Europe/Zaporozhye&#39;, &#39;Europe/Zurich&#39;, &#39;HST&#39;, &#39;Indian/Chagos&#39;, &#39;Indian/Christmas&#39;, &#39;Indian/Cocos&#39;, &#39;Indian/Kerguelen&#39;, &#39;Indian/Mahe&#39;, &#39;Indian/Maldives&#39;, &#39;Indian/Mauritius&#39;, &#39;Indian/Reunion&#39;, &#39;MET&#39;, &#39;MST&#39;, &#39;MST7MDT&#39;, &#39;PST8PDT&#39;, &#39;Pacific/Apia&#39;, &#39;Pacific/Auckland&#39;, &#39;Pacific/Bougainville&#39;, &#39;Pacific/Chatham&#39;, &#39;Pacific/Chuuk&#39;, &#39;Pacific/Easter&#39;, &#39;Pacific/Efate&#39;, &#39;Pacific/Enderbury&#39;, &#39;Pacific/Fakaofo&#39;, &#39;Pacific/Fiji&#39;, &#39;Pacific/Funafuti&#39;, &#39;Pacific/Galapagos&#39;, &#39;Pacific/Gambier&#39;, &#39;Pacific/Guadalcanal&#39;, &#39;Pacific/Guam&#39;, &#39;Pacific/Honolulu&#39;, &#39;Pacific/Kiritimati&#39;, &#39;Pacific/Kosrae&#39;, &#39;Pacific/Kwajalein&#39;, &#39;Pacific/Majuro&#39;, &#39;Pacific/Marquesas&#39;, &#39;Pacific/Nauru&#39;, &#39;Pacific/Niue&#39;, &#39;Pacific/Norfolk&#39;, &#39;Pacific/Noumea&#39;, &#39;Pacific/Pago_Pago&#39;, &#39;Pacific/Palau&#39;, &#39;Pacific/Pitcairn&#39;, &#39;Pacific/Pohnpei&#39;, &#39;Pacific/Port_Moresby&#39;, &#39;Pacific/Rarotonga&#39;, &#39;Pacific/Tahiti&#39;, &#39;Pacific/Tarawa&#39;, &#39;Pacific/Tongatapu&#39;, &#39;Pacific/Wake&#39;, &#39;Pacific/Wallis&#39;, &#39;WET&#39;] .",
            "url": "https://orlando-c.github.io/que-pro/2022/10/10/API.html",
            "relUrl": "/2022/10/10/API.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i+1) + &quot; letter in the alphabet&quot;) i += 1 . The letter a is the 1 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count+1) + &quot; letter in the alphabet&quot;) count += 1 . The letter a is the 1 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt; 101: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [0, 0, 2, 4, 5, 6, 8, 10, 10, 12, 14, 15, 16, 18, 20, 20, 22, 24, 25, 26, 28, 30, 30, 32, 34, 35, 36, 38, 40, 40, 42, 44, 45, 46, 48, 50, 50, 52, 54, 55, 56, 58, 60, 60, 62, 64, 65, 66, 68, 70, 70, 72, 74, 75, 76, 78, 80, 80, 82, 84, 85, 86, 88, 90, 90, 92, 94, 95, 96, 98] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;borger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) fail = True for tempItem in menu: if(item == tempItem): total += menu[item] fail = False #code should add the price of the menu items selected by the user print(total) . Menu borger $3.99 fries $1.99 drink $0.99 3.99 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://orlando-c.github.io/que-pro/2022/10/03/AP-error_testing.html",
            "relUrl": "/2022/10/03/AP-error_testing.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Dbq Overview",
            "content": "AP World History How to Write a DBQ . Paragraph #1: Introduction . Contextualization- 4 sentences with last sentence connecting to topic of essay. Must be within approx. 50 years of essay time period. . | Thesis- explicit, makes an argument, answers all parts of prompt . | . Paragraphs #2-3 (&amp; possibly 4): Body Paragraphs – Each paragraph must have . Topic sentence with a clear argument (x, y, or z of thesis) . | Summary, explanation, and HIPA sentences (ALL 7 documents must be used in your essay) . Summary sentences must begin with the name of the author or title of the document and end with the number of the document in parentheses. Example: According to Alessandra Strozzi, Francesco di Messer Tanagli is willing to marry off his daughter to her exiled son, because she has a small dowry and he has a lot of children (Doc. 1). . | HIPA sentences must start with the type of HIPA underlined (see examples below). . Historical Context - How is the document’s historical context relevant to an argument that addresses the prompt? Must include a specific event before the document was created and an explanation about how the event supports your argument. Example: The historical context of the letter is during the Renaissance parents often arranged marriages for their children to increase the power and wealth of their family, which is exactly what Strozzi is trying to do by arranging a marriage between her son and the daughter of Francesco di Messer Tanagli. . | Intended Audience/Purpose (MUST BE COMPLETED TOGETHER) - How are the document’s purpose and audience relevant to an argument that addresses the prompt? Must include an action that the author wants a specific group of people to do. Caution! Just using the verbs “tell”, “show, or “inform” is not enough to capture the action the author wants the audience to take. Example: The intended audience of the letter is Strozzi’s son with the purpose of encouraging him to accept the marriage she has arranged with Tanagli. . | Author’s Point of View - How is the document’s author’s pov relevant to an argument that addresses the prompt? Must include an aspect of the author’s identity (gender, race/ethnicity, class, profession, nationality, religion and an explanation about how that characteristic supports your argument. Example: The author’s point of view is Strozzi is a mother who wants her son to marry a wife who will advance his position in society and therefore increase the position of the whole family. . | . | . | Outside evidence (2 pieces of outside evidence per essay) . Outside evidence must be at least 2 sentences and the last sentence must end with “outside evidence” in parentheses. . | Example: Royal women were expected to marry whomever their families chose in order to form alliances and increase their country’s power. Isabelle and Ferdinand of Spain married their daughter Catherine of Aragon to Henry VIII, king of England, in order to form an alliance between their two countries and therefore increase the power of Spain (Outside Evidence). . | . | . Last Paragraph: Conclusion . Rewrite thesis to reflect the arguments of your essay* (if you have time) . | Additional Contextualization* (if you have time) . | . College Board DBQ Rubric (7 pts) . Thesis/Claim (1 pt) - Responds to the prompt with a historically defensible thesis/claim that establishes a line of reasoning. CANNOT merely restate or rephrase the prompt. May be multiple sentences. . | Contextualization (1 pt) - Describes broader historical events, developments, or processes that occur before, during, or continue after the time frame of the question. Must be more than a mere phrase or reference. . | Evidence (2 pts) - . | 1 pt. Uses the content of at least three documents to address the topic of the prompt. Simple quotes of the documents will NOT earn credit. . 2 pts. Supports an argument in response to the prompt using at least six documents. Simple quotes of the documents will NOT earn credit. . Reasoning &amp; Analysis (2 pts) - . | 1 pt. For at least three documents, explains how or why the document’s historical context, intended audience, purpose, or author’s point of view is relevant to an argument. . 2 pts. Demonstrates a complex understanding of the historical development that is the focus of the prompt, using evidence to corroborate, qualify or modify an argument that addresses the question. This understanding must be part of the argument, not merely a phrase or reference. . Below is the scoring sheet AP graders use to grade your DBQ. . A. Thesis 0 1 . B. Contextualization | | 0 1 | | | | | | | | . C. Evidence . Content Use (at least 3) . | Support Argument (at least 6) . | Evidence Beyond the Documents . | . | Doc 1 | Doc 2 | Doc 3 | Doc 4 | Doc 5 | Doc 6 | Doc 7 | 0 1 . 0 1 . 0 1 . | | . | | | | | | | | | | . | | | | | | | | | | . | | | | | | | | | | . D. Analysis &amp; Reasoning . Sourcing (at least 3) . | Complexity . | . | Doc 1 | Doc 2 | Doc 3 | Doc 4 | Doc 5 | Doc 6 | Doc 7 | 0 1 . 0 1 . | | . | | | | | | | | | | . | | | | | | | | | | .",
            "url": "https://orlando-c.github.io/que-pro/2022/09/29/DBQ-Overview.html",
            "relUrl": "/2022/09/29/DBQ-Overview.html",
            "date": " • Sep 29, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Title",
            "content": "$(document).ready(function() { var magic8ball = {}; magic8ball.listOfAnswers = [&quot;No&quot;, &quot;Yes&quot;, &quot;I don&#39;t think so...&quot;, &quot;Theres a chance&quot;, &quot;Maybe &quot;, &quot;Of course!&quot;, &quot;Indubitably&quot;, &quot;In your dreams.&quot;]; var question = window.prompt(&quot;What is your question?&quot;); document.write(&quot;You wrote&quot; + question); var randomNumber = Math.random(); var randomNumberForListOfAnswers = randomNumber * this.listOfAnswers.length; var randomIndex = Math.floor(randomNumberForListOfAnswers); var answer = this.listOfAnswers[randomIndex]; $(&quot;#answer&quot;).text(answer); }); .",
            "url": "https://orlando-c.github.io/que-pro/2022/09/26/The-Magic-8ball.html",
            "relUrl": "/2022/09/26/The-Magic-8ball.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Week 5 Assignment Scrum Board",
            "content": "To Do Work In Progress Completed Deployed Reviewed . - | Adding page to flask portfolio | - | - | Agile Methodology Poster | . !pwd from IPython.display import Image Image(url=&quot;images/af.jpg&quot;, width=864, height=1152) . /home/theca/vscode/que-pro/_notebooks .",
            "url": "https://orlando-c.github.io/que-pro/python/markdown/week-5/apcsp/2022/09/24/Agile-Methodology.html",
            "relUrl": "/python/markdown/week-5/apcsp/2022/09/24/Agile-Methodology.html",
            "date": " • Sep 24, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Javascript Moment",
            "content": "Weekly | Games | Java Demo | Timezone API | . . function game(name, genre, year, players) { this.name = name; this.genre = genre; this.year = year; this.players = players; this.role = &quot;&quot;; } game.prototype.setRole = function(role) { this.role = role; } game.prototype.toJSON = function() { const obj = {name: this.name, genre: this.genre, year: this.year, players: this.players, role: this.role}; const json = JSON.stringify(obj); return json; } var movies = new game(&quot;Uncharted&quot;, &quot;Action&quot;, &quot;2022&quot;, &quot;n/a&quot;); logItType(movies); logItType(movies.toJSON()); movies.setRole(&quot;Movie&quot;); logItType(movies); logItType(movies.toJSON()); . evalmachine.&lt;anonymous&gt;:20 logItType(movies); ^ ReferenceError: logItType is not defined at evalmachine.&lt;anonymous&gt;:20:1 at ContextifyScript.Script.runInThisContext (vm.js:25:33) at Object.runInThisContext (vm.js:97:38) at run ([eval]:1020:15) at onRunRequest ([eval]:864:18) at onMessage ([eval]:828:13) at emitTwo (events.js:106:13) at process.emit (events.js:191:7) at process.nextTick (internal/child_process.js:758:12) at _combinedTickCallback (internal/process/next_tick.js:73:7) . var games = [ new game(&quot;Minecraft&quot;, &quot;Sandbox&quot;, &quot;2011&quot;, &quot;141 Million&quot;), new game(&quot;R6S&quot;, &quot;FPS&quot;, &quot;2015&quot;, &quot;70 Million&quot;), new game(&quot;Fortnite&quot;, &quot;3rd Person BR&quot;, &quot;2017&quot;, &quot;270 Million&quot;), new game(&quot;Apex&quot;, &quot;1st Person BR&quot;, &quot;2019&quot;, &quot;~100 Million&quot;), new game(&quot;Roblox&quot;, &quot;Sandbox&quot;, &quot;2006&quot;, &quot;230 Million&quot;), new game(&quot;Pokemon Go&quot;, &quot;Augmented Reality&quot;, &quot;2016&quot;, &quot;632 Million&quot;), new game(&quot;Halo Infinite&quot;, &quot;FPS&quot;, &quot;2021&quot;, &quot;20 Million&quot;), new game(&quot;Terraria&quot;, &quot;Sandbox&quot;, &quot;2011&quot;, &quot;~66 Million&quot;), ] function Theatre(movies, games){ movies.setRole(&quot;Movie&quot;); this.movies = movies; this.theatre = [movies]; this.games = games; this.games.forEach(game =&gt; { game.setRole(&quot;Game&quot;); this.theatre.push(game); }); this.json = []; this.theatre.forEach(game =&gt; this.json.push(game.toJSON())); } compsci = new Theatre(movies, games); logItType(compsci.theatre); logItType(compsci.theatre[0].name); logItType(compsci.json[0]); logItType(JSON.parse(compsci.json[0])); . Classroom.prototype._toHtml = function() { var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; ); var body = &quot;&quot;; body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Genre&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Year&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Players&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; for (var row of compsci.classroom) { body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.genre + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.year + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.players + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; } return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; $$.html(compsci._toHtml()); .",
            "url": "https://orlando-c.github.io/que-pro/2022/09/22/Javascript-Test.html",
            "relUrl": "/2022/09/22/Javascript-Test.html",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Title",
            "content": "Main Ideas Purpose Implementation . Program Purpose | So I can preview changes to my fastpages and flask portfolio without having to commit | Follow instructions to create local host and also be able to sync fastpages and flask portfolio | . Procedural Abstraction | When you make changes in your repositories in VsCode or Github, the changes are near instantaneous | Followed the instructions to achieve maximum available opportunity | . Testing | Make sure both operations are fully functional | Run through all tests and prepare the operations for week 4 recording and are ready to go for next week! | . Extra | This week was also focused on mental health and taking breaks to better help ourselves | This week I tried multiple ways to relax and also do extra homework on the weekend to relieve myself | . print(&quot;I do this because i dont like .md formatting&quot;) .",
            "url": "https://orlando-c.github.io/que-pro/2022/09/20/Week-4-Reflection.html",
            "relUrl": "/2022/09/20/Week-4-Reflection.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Ap World Visiting Cities On The Silk Roads",
            "content": "AP World History . Visiting Cities Along the Silk Roads . Instructions: You will travel the Silk Road by visiting cities on the trading routes. Look at the objects and pictures at the locations you chose to visit, read the description in the speaker notes, and answer the questions below. . ALEPPO . Bazar . 1) What is a bazar? . Large covered area with hundreds of stalls for marketers and traders to trade or sell their items. . 2) Why is Aleppo’s bazar prominent? How did it contribute to cultural exchange along the Silk Roads? . Aleppo’s bazar was massive and was able to hold more than 1000 stalls for marketers and traders. It was within the crossroads of multiple paths and trails where traders would come in and out through. . | Citadel . 1) Describe the significance of the location of Aleppo’s citadel. . Aleppo’s ancient city home was the citadel which was their representation of religion and also served as a place of religious trade for others. . 2) How has Aleppo’s citadel contributed to the economic development of the city? . The city grew massively due to the economic growth that occurred because of all the trade incoming. . | . MECCA &amp; JEDDAH . Drawing of Jeddah . 1) List two factors that made Jeddah an important city along the Silk Roads. . Jeddah was a port city and grew massively because of the amount of trade increasing wealth in the city. . 2) How did Jeddah’s proximity to Mecca impact trade in the city? . Many religious aspects affected the city and may have limited or extended trade to others . | Zamzam Water Flasks . 1) What does the difference in the style of these two flasks represent? . The flasks were used to bring holy water. The flasks were sometimes a softer material (more likely leather) or sometimes made of porcelain. . | . MOSUL . Coin . 1) Describe the two sides of the coin – what do you see on both sides? . One side has the face of Mosul, the leader at the time and the other, writing that could possibly be religious. . 2) Do you think that encountering different currencies posed a challenge for people trading along the Silk Road? Why or why not? . Possibly yes because there weren’t exact exchange rates and also the coins had different values themselves leading to more disorganization and division . | The Blacas Ewer . 1) What products was Mosul famous for producing? . Crude oil, fine metalwork, and textile production. . 2) What was the effect on rising and declining empires and dynasties on various cities along the Silk Roads? . The rise of states lead to more trade between states and more ideas to states as well. . | . KHOTAN . Khotanese Princess . 1) What was the influence of Khotanese jade? . Made Khotan an important stop on the silk roads because of the fine Jade and large trade. . 2) What is one cultural expression of Khotanese jade seen in this picture? . Scholarship and education of China. . | Sutra of the Wise and the Foolish . 1) How did the movement of Buddhism impact Khotan? . Buddhism was first introduced to China in Khotan and spread from there with new ideologies and teachings. . 2) Name one way that Buddhism spread. . Buddhism spread through trade or trade/religious hubs where teachings or sayings were spread. . | . QUANZHOU . Ancient Map of Maritime Silk Roads . 1) Name two things this ancient map tells us about the Silk Road. . The map tells us where the Silk Roads transitioned into ports and into the Sea Roads further expanding the map of trade. . 2) Why was Quanzhou important to the Silk Road? . Quanzhou had multiple ports and paths leading into the city and served as a central hub for trade. . | Religious . 1) With the continuous flow of travelers, how did the Silk Road influence Quanzhou? . Quanzhou was heavily influenced by the roads because they received a lot of trade and gradually became more diverse and wealthier. . | .",
            "url": "https://orlando-c.github.io/que-pro/2022/09/20/AP-World-Visiting-Cities-on-the-Silk-Roads.html",
            "relUrl": "/2022/09/20/AP-World-Visiting-Cities-on-the-Silk-Roads.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Cinderella Comparison Chart",
            "content": "  . First &amp; Last Name: Period: | . Cinderella Story Comparison Graphic Organizer . What lessons or morals are demonstrated in this version of Cinderella? Share at least two. What does this culture value? (What are the beliefs of this culture?) . Share at least two. . What might be some symbols in this story? AND What could they represent? Share at least two. Taking a deeper dive: Research credible sources and find out if the culture in this region/area THEN AND/OR NOW has the same lessons/morals, values/beliefs, and/or symbols/representations. Share if they are the same or how they are now different. Site source (can paste the URL) - Take your time and look at multiple sources. Look at .edu sites, .gov sites - tourism sites or historical sites. Use Google Advanced Search to help you. . Version #1 . “Yeh Shen” . Chinese Cinderella Story . | Whatever comes around goes around . | Don’t judge a book by its cover . | Inner beauty matches outer beauty . | . | Multiple wives . | Animals or animals with spirits . | Values old people and their wisdom . | . | Fish bones : Fairy godmother . | Dagger : Death . | Tears in the pond : Love . | Golden shoe . | Old Man : Wisdom . | . | During the tang dynasty . | Patriarchy . | Women beauty standards . | Men were above women . | China respects others for thousands of years . | . https://carnegieendowment.org/2013/11/21/china-s-traditional-cultural-values-and-national-identity-pub-53613 . | . Version #2 . “The Golden Sandal” . A Middle Eastern Cinderella Story . | Don’t judge a book by . | . its cover . Treat others how you want to be treated . | Karma . | Kindness goes a long way . | . | King marries one woman . | . Weddings/Henna . | Woman stays home . | Belief in a god . | Mother is valued and gives blessing . | Fine clothing . | . | Red Fish : Fairy godmother . | . Perfume : Karma . | . Fine Clothing : Her dress . | . Rooster : Maha’s savior . | . Golden Sandals : Purity . | . | Men worked/ruled kingdoms - Patriarchy . | Middle East - Arab / Muslim Culture . | Massive culture (land and philosophical wise) . | Woman are valued more than other cultures and civilizations . | Represent family and culture . | . https://www.osti.gov/biblio/5537055 . | . Version #3: . “Mufaro’s Beautiful Daughters” . African Cinderella Story . | Treat others how you want to be treated . | Stay close to earth/be humble . | Don’t envy others . | Don’t be selfish . | What comes around goes around . | . | Wedding party . | Wedding Feast . | Family and relationships . | . | Sunflower seeds/Yams : Kindness . | Mysterious Woman/Spirit : Karma . | . King/Crossing river : Test of purity . | . Fine clothing : Dress . | . First light of dawn : New day/Change . | . | African Folktale . | 5 points -&gt; crown . | Textiles can be forms of communication . | Belief in spirits and traditions . | Different art, traditions, and religions . | No person is more beautiful or ugly . | . https://journals.co.za/doi/epdf/10.10520/EJC189182 . | . Version #4 . “Rough Faced Girl” . American Indigenous Story . | Be truthful to yourself . | Don&#39;t be selfish or envious of others. . | . Don&#39;t judge a book by its cover . | . Lying gets you nowhere . | . | Marriage . | Truthfulness . | . Nature . | . Clothing of animal skins . | . People of truth/kind heart . | . Beauty and appreciation of nature . | . | Wigwam : Divinity or knowledge . | . Fire and scars : . | . Invisible man’s bow : Truth . | . Moccasins, broken shells, buckskin: Family . | . Stars : Truth or Wisdom . | . Invisible man : Purity . | . | Worship and value nature and purity . | Theres a lot of diversity between tribes including traditions and stories . | Many different stories between tribes . | Trying to keep beliefs and traditions alive today due to cultural decline . | . https://www.proquest.com/docview/2589646780/868CEEA2DE404EE6PQ/3?accountid=134741 . | . Version #5 . Story Name Here . | Love and respect everyone . | Don’t judge a book by its cover . | Don&#39;t be jealous or envious of others success . | . | Hardships of families and work . | Love for family . | Respect for others . | . | Nopales : Love . | Malvina : Deception or lies . | Manton : Family heritage or caring . | Mama : Purity or respect for others. . | Mud Bricks : Hardships of life . | . | Food is integral to Mexican culture . | Family is important and you should love and care for them . | Mexican culture really focuses on tradition and love especially for each other and taking care of others. Doing things out of the goodwill of your heart. . | . https://www.donquijote.org/mexican-culture/ . | .",
            "url": "https://orlando-c.github.io/que-pro/2022/09/19/Cinderella-Comparison-Chart.html",
            "relUrl": "/2022/09/19/Cinderella-Comparison-Chart.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Apcsp Plan For Flask Portfolio Group Project",
            "content": "APCSP Plan for Flask Portfolio Group Project . Ideas Planning Execution . Show demonstration of how local server can be used . | . Show changes to both github repository and flask repository . | . | Keep video longer than 59 seconds . | . Use ideas in a formative way of sampling . | . Show changes that you made to fastpages . | . Show work done to complete flask . | . | Edit video to ensure minimum is reached . | . - Make sure to include ideas . Follow planning instructions to ensure maximum points are achieved . | . | .",
            "url": "https://orlando-c.github.io/que-pro/2022/09/19/APCSP-Plan-for-Flask-Portfolio-Group-Project.html",
            "relUrl": "/2022/09/19/APCSP-Plan-for-Flask-Portfolio-Group-Project.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Back To School Night Schedule",
            "content": "Period Classroom Teacher . 1 | L114 | Volger | . 2 | B123 | Cole | . 3 | R303 | Friedemann | . 4 | G113 | James | . 5 | A101 | Yeung | . print(&quot;hola&quot;) .",
            "url": "https://orlando-c.github.io/que-pro/backtoschoolnight/2022/09/12/back-to-skool-nite.html",
            "relUrl": "/backtoschoolnight/2022/09/12/back-to-skool-nite.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Clash Royale in App Lab!",
            "content": "Before . Gather ideas for what I&#39;m going to make and how | Get all resources needed (images, references, etc) | Mess around and watch tutorials to get used to java | . During . Using limited knowledge, I used simple terms to get the job done efficiently and with the least amount of confusion | Use varying aspects of Code.Org and try to implement interesting ways to change up my clash quiz | Added a timer like the real game where you have to finish the quiz before the timer ends or you choose the wrong option | . Reflection . Main Ideas Purpose Implementation . Program Purpose | For the user to enjoy my fun and easy quiz | The quiz is heavily relied on user interaction and how their choices affect them | . Data Abstraction | Count points (crowns) for player and timer | Resemblance of game | . Complexity | Objective is to keep it simple | Just mainly code reliant on buttons and repeated code to keep it simple and reduce complex load | . Procedural Abstraction | Once you finish the match, you are taken to a reward screen | Reward screen reveals a new card that you can use in game | . Algorithm Implementation | Using a timer | The timer goes through a loop function to count down from 3 minuites when &quot;Battle!&quot; is clicked | . Testing | Make sure quiz is fully functional | Run through all variables and options within the quiz to verify everything is operational and ready to go! | . The link to my quiz! | . Clash Royale App Lab Quiz . Code is below | . var startTime; var isRunning = false; onEvent (&quot;startquiz&quot;, &quot;click&quot;, function() { if (!isRunning) { isRunning = true; startTime = getTime(); timedLoop(1000, function() { var currentTime = getTime(); var elapsedTime = currentTime - startTime; elapsedTime = Math.round(elapsedTime/1000); setText(&quot;timer&quot;, &quot;Time: &quot; - elapsedTime + 180); }); } }); onEvent(&quot;returnhomeend&quot;, &quot;click&quot;, function() { isRunning = false; stopTimedLoop(); }); var crowns; onEvent(&quot;startquiz&quot;, &quot;click&quot;, function( ) { crowns = 0; setScreen(&quot;giantquestion&quot;); }); onEvent(&quot;radio_buttonG!&quot;, &quot;click&quot;, function( ) { showElement(&quot;nextS&quot;); }); onEvent(&quot;radio_buttonG2&quot;, &quot;click&quot;, function( ) { setScreen(&quot;theend&quot;); }); onEvent(&quot;returnhomeend&quot;, &quot;click&quot;, function( ) { setScreen(&quot;homescreen&quot;); }); onEvent(&quot;claimreward1&quot;, &quot;click&quot;, function( ) { setScreen(&quot;noreward&quot;); }); onEvent(&quot;returnhome&quot;, &quot;click&quot;, function( ) { setScreen(&quot;homescreen&quot;); }); onEvent(&quot;nextS&quot;, &quot;click&quot;, function( ) { setScreen(&quot;successgiantattack&quot;); hideElement(&quot;nextS&quot;); showElement(&quot;nextskarmy&quot;); }); onEvent(&quot;nextskarmy&quot;, &quot;click&quot;, function( ) { setScreen(&quot;skarmyquestion&quot;); hideElement(&quot;nextskarmy&quot;); }); onEvent(&quot;radio_buttonS1&quot;, &quot;click&quot;, function( ) { setScreen(&quot;theend&quot;); }); onEvent(&quot;radio_buttonS2&quot;, &quot;click&quot;, function( ) { showElement(&quot;NextAttack&quot;); }); onEvent(&quot;returnhomeend&quot;, &quot;click&quot;, function( ) { setScreen(&quot;homescreen&quot;); }); onEvent(&quot;NextAttack&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackquestion&quot;); }); onEvent(&quot;Left&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleft&quot;); }); onEvent(&quot;RIGHT&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackright&quot;); }); onEvent(&quot;attackgiantleft&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftgiant&quot;); }); onEvent(&quot;attackgoblinleft&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftgoblin&quot;); }); onEvent(&quot;attackmusketeerleft&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftmusketeer&quot;); }); onEvent(&quot;attackskarmyleft&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftskarmy&quot;); }); onEvent(&quot;attacksparkyleft&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftsparky&quot;); }); onEvent(&quot;giantright&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightgiant&quot;); }); onEvent(&quot;wizardright&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightwizard&quot;); }); onEvent(&quot;musketeerright&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightmusketeer&quot;); }); onEvent(&quot;righthogrider&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrighthogrider&quot;); }); onEvent(&quot;goblinright&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightgoblin&quot;); }); onEvent(&quot;nextleftgiant&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attacksucessboth&quot;); crowns = 3; }); onEvent(&quot;nextleftgoblin&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftdefeat&quot;); crowns = 0; }); onEvent(&quot;nextleftmusketeer&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftdefeat&quot;); crowns = 0; }); onEvent(&quot;nextleftskarmy&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftsuccess&quot;); crowns = 1; }); onEvent(&quot;nextleftsparky&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attacksucessboth&quot;); crowns = 3; }); onEvent(&quot;attackrightgiant&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attacksucessboth&quot;); crowns = 3; }); onEvent(&quot;attackrightgoblin&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightdefeat&quot;); crowns = 0; }); onEvent(&quot;attackrighthogrider&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightsuccess&quot;); crowns = 1; }); onEvent(&quot;attackrightmusketeer&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightdefeat&quot;); crowns = 0; }); onEvent(&quot;attackrightwizard&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightsuccess&quot;); crowns = 1; }); onEvent(&quot;returnhomeleft&quot;, &quot;click&quot;, function( ) { setScreen(&quot;homescreen&quot;); }); onEvent(&quot;returnhomeright&quot;, &quot;click&quot;, function( ) { setScreen(&quot;homescreen&quot;); }); onEvent(&quot;nextleftgiant&quot;, &quot;click&quot;, function( ) { setScreen(&quot;homescreen&quot;); }); onEvent(&quot;nextwinscreen&quot;, &quot;click&quot;, function( ) { setScreen(&quot;winscreen&quot;); }); onEvent(&quot;nextwinscreenright&quot;, &quot;click&quot;, function( ) { setScreen(&quot;winscreen&quot;); }); onEvent(&quot;nextwinscreenleft&quot;, &quot;click&quot;, function( ) { setScreen(&quot;winscreen&quot;); }); onEvent(&quot;nextwinscreen&quot;, &quot;click&quot;, function( ) { setText(&quot;crownlabel&quot;, crowns + &quot;crowns&quot;); }); onEvent(&quot;nextwinscreenright&quot;, &quot;click&quot;, function( ) { setText(&quot;crownlabel&quot;, crowns + &quot;crowns&quot;); }); onEvent(&quot;nextwinscreenleft&quot;, &quot;click&quot;, function( ) { setText(&quot;crownlabel&quot;, crowns + &quot;crowns&quot;); }); onEvent(&quot;returnhomewin&quot;, &quot;click&quot;, function( ) { setScreen(&quot;fakehome&quot;); }); onEvent(&quot;claimrealreward&quot;, &quot;click&quot;, function( ) { setScreen(&quot;golem&quot;); }); .",
            "url": "https://orlando-c.github.io/que-pro/java/week-3/apcsp/2022/09/12/applab.html",
            "relUrl": "/java/week-3/apcsp/2022/09/12/applab.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Week 3 Assignment Scrum Board",
            "content": "Waitlist Ideas In Progress Complete . void | Finance (idea description below) | Brainstorming and Ideas | void | . Idea (inspired by my dad) . Goal: Use data from up to 10 years of history to predict 1-12 months worth of data | . Design . Input data for 3-10 years | Find trends and evaluate depending on month and event | Use data to predict finances for that month or year | . print(&quot;What is my purpose? - To find trends in finances&quot;) . What is my purpose - To find trends in finances .",
            "url": "https://orlando-c.github.io/que-pro/python/markdown/week-3/apcsp/2022/09/12/Scrum-Board.html",
            "relUrl": "/python/markdown/week-3/apcsp/2022/09/12/Scrum-Board.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Question to Database",
            "content": "from tokenize import Ignore questions = [ &quot;What is your favorite type of dog? (Please use capitals and accurate spelling - ex. Huskey) &quot;] answer = input print (questions) guess = (input()) print (guess) print(&quot;Thank you for answering the question! Your response will be saved in a database for me to look over!&quot;) . [&#39;What is your favorite type of dog? (Please use capitals and accurate spelling - ex. Huskey) &#39;] German Shepard Thank you for answering the question! Your response will be saved in a database for me to look over! . name = (guess) print(&quot;dog&quot;, name, type(name)) print() . NameError Traceback (most recent call last) /root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb Cell 3 in &lt;cell line: 1&gt;() -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W2sdnNjb2RlLXJlbW90ZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; name = (guess) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W2sdnNjb2RlLXJlbW90ZQ%3D%3D?line=1&#39;&gt;2&lt;/a&gt; print(&#34;dog&#34;, name, type(name)) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W2sdnNjb2RlLXJlbW90ZQ%3D%3D?line=3&#39;&gt;4&lt;/a&gt; print() NameError: name &#39;guess&#39; is not defined . InfoDb = [] InfoDb.append({ &quot;Favorite Dog&quot;: (guess)}) print (InfoDb) . [{&#39;Favorite Dog&#39;: &#39;German Shepard&#39;}] . def print_data(d_rec): print(d_rec[&quot;Favorite Dog&quot;]) def for_loop(): #only if there are more than one answer print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output . NameError Traceback (most recent call last) /root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb Cell 5 in &lt;cell line: 9&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W4sdnNjb2RlLXJlbW90ZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; for record in InfoDb: &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W4sdnNjb2RlLXJlbW90ZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; print_data(record) -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W4sdnNjb2RlLXJlbW90ZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; for_loop() /root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb Cell 5 in for_loop() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W4sdnNjb2RlLXJlbW90ZQ%3D%3D?line=3&#39;&gt;4&lt;/a&gt; def for_loop(): #only if there are more than one answer &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W4sdnNjb2RlLXJlbW90ZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; print(&#34;For loop output n&#34;) -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W4sdnNjb2RlLXJlbW90ZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; for record in InfoDb: &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W4sdnNjb2RlLXJlbW90ZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; print_data(record) NameError: name &#39;InfoDb&#39; is not defined .",
            "url": "https://orlando-c.github.io/que-pro/2022/08/30/Please-Give-Me-Your-Info.html",
            "relUrl": "/2022/08/30/Please-Give-Me-Your-Info.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "World History Religions Key",
            "content": "Fill in something for each box. If the religion does not have that category, write NONE. . Christianity Islam Hinduism Buddhism . Basic Info./ Stats | 2.38 billion people . 31% of the world population . Found mainly in Europe, Russia, North America, South America, Central America, parts of Africa, the Philippines, and much of Oceania . | 1.8 billion followers . 25% of the world . Found mainly in the middle East, central Asia, and Northern Africa . | Around 1 billion followers . | Mainly in India . | About 15% of the world population . | 95% of Hindus in India . | . | ~506 million followers . ~6.6% of the population . South/Southeast Asia . | . A. . Rituals and Sacred Objects . | Cross, Baptism, Praying, Angels | Prayer rugs, praying 5 times a day, sacred Kaaba (house of Allah) | Life cycle rituals . death and ancestor rituals . | initiation . | . Sacred Objects - banana tree, mango leaves, gold . | sacred objects: white parasol, conch shell, treasure vase, victory banner, dharma wheel, pair of golden fish, endless knot, lotus flowers . rituals: mantras, chanting, meditation, gift-giving . | . B. Divinity (God/ Gods) | Holy Trinity - . One God, Holy Spirit, and Jesus . | The one and only god AllahAllah, a forgiving god. | worship single deity, “Brahman”, still recognize other gods/goddesses | Buddha is a wise teacher and model, but not divine | . C. Scrip- . tures . | The Holy Bible, the old testament and the new testament . | . | The Quran is the holy book of Islam. | The Vedas . Rigveda, Yajurveda, Samaveda, and the Atharvaveda . The Upanishads . | Sutras: sayings of the Buddha compiled . Tripitaka: . Sutta Pitaka: words and speech of the Buddha . Vinaya Pitaka: rules for monks . Abhidhamma Pitaka: analytical writings . | . D. . Salva- . tion . | Repenting of sins and keeping faith to God to get to Heaven in the afterlife . Jesus provides salvation for those who follow the Bible’s teaching and a Christian lifestyle. . | The Mercy of god Merits salvation is you ask for forgiveness | strive to reach “‘moksha”, salvation-ends cycle of rebirth-absolute goal | Achieve enlightenment (Nirvana) to remove malice/evil after death. | . E. . Good and Evil . | Good; going to church/reading the bible/not commiting sins . Bad; Commiting sin, not reading the bible, not going to church. Good things include being holy, kind to all, and praying. (Things The Bible tell you to do) . Bad things include commiting sins, not having faith, and doing things against The Bible will lead you to hell in the afterlife. . | People themselves should know the difference between good and evil. | Abide by dharma (a moral code) strive to achieve dharma, a code of living with good conduct . | . | Treat others with compassion . Follow the Eightfold Path and the 5 moral precepts . | . Confucianism Taoism Sikhism Judaism Animism . Basic Info./ Stats | 6.1 million . 0.09% World Population . Found in Korea, Japan, Vietnam . | ~8.7 million followers . ~0.11% world population . ~Mainly in China and Taiwan . | ~25 million followers worldwide . ~0.3% of the world&#39;s population . ~ Punjab Region . | ~14.8 million worldwide followers . ~0.2% of the population . Two most major countries are the United States and Israel . Found primarily in Israel and U.S. . | ~9-240 million followers . ~0.1-3% of world population . | . Founded in Central Africa and Southeast Asia . ~Located in Central Africa, Southeast Asia, and tribal societies around the world . | . A. . Rituals and Sacred Objects . | Ancestor worship through sacrifices, ceremonies, and celebrations. Pots filled with sacred wine used in rituals. | | . sacred site: Mount Laojun . symbol: yin and yang . rituals: chanting, playing instruments, and dancing . | ~Kara (steel bracelet) . ~ Kirpan (small sword) . ~ Khanda (Sikh symbol) . ~ . | The Torah . The Ark . The Eternal Light . Bar and Bat MItzvahs . Yom Kippur . Rosh Hashanah . Sukkot . | Ceremonies were performed by shamans to please good spirits to protect people and provide them with food, shelter, and fertility as well as ward off evil spirits. . Sacred objects included various spiritual places and spirits. . | . B. Divinity (God/ Gods) | No Confucian gods but Confucius doesn’t deny the existance of Gods.. Ancestors worshiped as spirits/deities. | Tao: universe, creation, aka “the nameless” . Many deities representing all human activities, spirits, etc. . | Wakeguru - god that creates all | Yahweh (God) . Monotheistic, they believe in one God, who is Yahweh. . | Animism is not monotheistic or polytheistic because animists find power in sacred objects.No god/gods but followers believed in the existence of spirits that lived in non-human entities (trees, rocks, animals, forces of nature, bodies of water). . | . | . C. Scrip- . tures . | There are 4 books . the Doctrine of the Mean, the Great Learning Mencius, and the Analects. These contain the written knowledge of Confucius. . | Tao Te Ching: “The Way and Its Power” by Laozi | Guru Granth Sahib - Contains hymns, poems, Shabads, etc. | -The Torah . | The Tanakh . | The Talmud . | The Haggadah . | Haftara . | Old testament . | 5 books of Moses . | . | Although people have written about Animism, there are no texts that followers consider sacred. | . D. . Salva- . tion . | They didn’t deny an afterlife but they also didn’t focus on one. Rather, Confucius wanted to prioritize current life and relationships. | Become aligned w/ the natural world, strive for immortality | Salvation is achieved when a devotee develops an intimate faith and relationship with God. | Salvation comes from the Lord and is given to the Jewish nation. God delivered Abraham and his descendants from sin. In order to achieve salvation from Yahweh, one must live a dedicated life to HIm, fast, worship, and celebrate appropriate holidays. | Animism doesn’t lead their followers to salvation . | This makes it harder for animism to compete with other world religions . | No notions of salvation in Animism. . | . | . E. . Good and Evil . | Believed that suffering and evil is inevitable, but should be viewed as mistakes to learn from. Confucius also believed that people should treat others with respect and kindness to avoid discord and dishonor. | values: kindness, moderation, humility . anything that flows with way of the Tao . | . No . killing . | stealing . | sexual misconduct . | false speech . | taking of intoxicants . | . | ~ 5 vices . pride . | lust . | greed . | ego . | anger . | . ~ 3 duties . Nam Japna (pray) . | Kirt Karna (work) . | Vand Chhakna (give) . | . Suffering is a test . test of courage . Evil cannot be removed by God or else humans wouldn’t have free will. . | Everyone is born with a good and evil inclination. . | Human struggle against evil is mandatory . | Rejects violence . | Must be compassionate, kind and humble . | No Hatred . | . | Since humans are equal with other animals, plants, and natural forces, followers of Animism treat these agents with respect. Not respecting the spirits results in punishment that may have to be atoned for. . | . | .",
            "url": "https://orlando-c.github.io/que-pro/2022/08/29/World-History-Religions-Key.html",
            "relUrl": "/2022/08/29/World-History-Religions-Key.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Apcsp Alumni Panel Recap",
            "content": "APCSP Alumni Panel Recap . Names of panel: Colin, Anthony, Andrew, Mable, Allison, Ditya (Sorry if any names are butchered) . | . Colin likes to 3D model, is going to UCSD for mechanical engineering, took APCSP twice. . | Suggests you keep motivation, google your problems . | . Anthony majors in CS at UCI, took APCSP and APCSA, works at code ninjas. . | Suggests Google doc -&gt; DocX, refrain form clashing egos, focus on your path. . | . Andrew liked the complexity upon entering CS, He took CSA and Intro to CS. Going to UCSD or UCLA . | Suggests focusing on your work, the theory behind CS in high school is not the same entering college. . | . Mable found it hard to find motivation in CS but knew all the job opportunities it unlocked. She ended up in aerospace engineering and cognitive science . | . Allison was more artsy and business rather than geeky, she likes web building and is majoring cognitive science at UCLA . | Suggests that starting is the hardest part, there is the temptation to bs, dont cut corners . | . Ditya is a computer science major at UCLA, she likes to make games and applies APCSA for her real life problems . | . PBL Scenarios (Problem Based Learning) . | . Colin: There are a few hands on problems where you have to use your knowledge to solve the problem . Andrew: PBL’s and Tests will be similar. PBL is involved in CS . Mable: Might be doing a lot of studying with groups. Large class sizes. Lot of time managing groups. . Takeaway: Computer Science does have some hands on learning and real life solving but more likely depends on which division you choose to take which will decide the amount of work you will be doing. . How have you applied CS in your major if you are not majoring CS . | . Colin: Write scripts, make complex calculations . Mable: Trying to program analysis and stress test. You can use many different applications. Jupyter notebooks are used for technical math . Andrew: Math courses use a lot of code for applications like graphs, vertices, etc . Allison: Good for stats, phycology, etc . Takeaway: Computer Science is expanding the world around us and makes life a whole lot easier. . For existing college students, have you had a job with a school or professor? . | . Colin: Stand out to your teachers - Internship with Northrop Grumman, wiring diagrams, visualizing flight data, cybersecurity . Anthony: Working at Code Ninjas . Mable: Internship at Northrop Grumman, Scripting for staff, flight data Andrew: Internship at LG (Javascript, html, python) . Takeaway: There are many professions and paths you can take towards building your career at a young age. . Did you ever focus on personal projects? . | . Andrew: Focus on some personal projects. Very useful for applications . Anthony: Doesnt have to be much . Takeaway: Personal projects are good on resumes and show your knowledge. . Tips to get internships . | . Have a resume . Knowing when to apply (Start looking Sept-Nov) . Referals are helpful . Join Clubs .",
            "url": "https://orlando-c.github.io/que-pro/2022/08/29/APCSP-Alumni-Panel-Recap.html",
            "relUrl": "/2022/08/29/APCSP-Alumni-Panel-Recap.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Ap World Notes",
            "content": "Confucianism (East Asia) . 6th-5th century bce: Life of Confucious 6th-3rd century bce: Lives of Laozi &amp; Zhuangzi 206 bce - 220 ce: Han dynasty establishes Confucianism as official ideaology 111 bce - 939 ce: Confucianism is introduced and established in Vietnam under Chinese rule 4th-11th century: Confucianism roots in India 7th century: Shotoku establishes Confucianism in Japan 960 - 1279: Neo-Confucianism flourishes in Song Dynasty China . Buddhism (South Asia) 8th-4th century bce: Hindu Vpanishads comply 560 - 486 bce: Life of the Buddha 1st-3rd century: Mahayana Buddhism emerges 1st-8th century: Buddhism established in China 3rd century: Bhagavad Gita compiled in final form 6th-12th century: Bhakti Movement takes place in India 10th century: Buddhism dissapears in India 1200 - 1299: Zen Buddhism in Japan . Christianity, Islam, Judaism (Middle East, West/East Europe) 9th-6th century bce: Jewish prophets (Isaiah, Jerimiah, Amos) 400 bce - 29 ce: Life of Jesus 6 - 67: Life of Saint Paul 4th century: Christianity established in Roman empire 576 - 632: Life of Muhammamad 7th century: Sunni/Shem split in Islam 750 - 900: Islam established in Persia 8th-10th century: Sufi Islam 1054: Division between Orthodox and Catholic churches .",
            "url": "https://orlando-c.github.io/que-pro/2022/08/29/AP-World-Notes.html",
            "relUrl": "/2022/08/29/AP-World-Notes.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Different Civilizations And Their Attributes (APWH)",
            "content": "questions = [ &quot;What was the name of the civilization type that primarily used animals as a food source, were stationary, and egalitarian?&quot;, &quot;What was the name of the civilization type that was focused on growing food, stationary, and also egalitarian?&quot;, &quot;What was the name of the civilization type that was found primarily in the western hemisphere, used more primative ways to get food, and does not fall into any category of social status?&quot;] answers = [ &quot;pastoral&quot;, &quot;agricultural&quot;, &quot;chief-dom&quot;] pointValues = [ 1, 1, 1] level = 0 points = 0 for question in questions: print(&quot;For &quot;, pointValues[level], &quot; points(s): &quot; + question) guess = str(input()) if(guess == answers[level]): points+=pointValues[level] print(&quot;You got it! You answered &quot; + guess +&quot; for &quot;+ str(pointValues[level]) + &quot; point(s), Your point total is &quot; +str(points) + &quot; point(s)&quot;) else: print(&quot;Wrong! You answered &quot; + guess +&quot; for &quot;+ str(pointValues[level]) + &quot; point(s), The correct response was &quot; + answers[level]+ &quot; You currently have &quot; + str(points) + &quot; point(s)&quot;) level+=1 print(&quot;These were the early types of societies and were the dawn of todays civilizations&quot;) . For 1 points(s): What was the name of the civilization type that primarily used animals as a food source, were stationary, and egalitarian? You got it! You answered pastoral for 1 point(s), Your point total is 1 point(s) For 1 points(s): What was the name of the civilization type that was focused on growing food, stationary, and also egalitarian? You got it! You answered agricultural for 1 point(s), Your point total is 2 point(s) For 1 points(s): What was the name of the civilization type that was found primarily in the western hemisphere, used more primative ways to get food, and does not fall into any category of social status? You got it! You answered chief-dom for 1 point(s), Your point total is 3 point(s) These were the early types of societies and were the dawn of todays civilizations .",
            "url": "https://orlando-c.github.io/que-pro/apwh/2022/08/29/AP-World-History-Civilizations.html",
            "relUrl": "/apwh/2022/08/29/AP-World-History-Civilizations.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Bash",
            "content": "%%bash cal date echo &quot;this is what bash can do and so much more&quot; . August 2022 Su Mo Tu We Th Fr Sa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 Sun Aug 28 22:47:14 PDT 2022 this is what bash can do and so much more . Now try to use it for classes outside of APCSP! . By taking files from my computer and exporting it to my github! . %%bash export school_dir=HOME/que-pro export project=$school_dir/que-pro export school_repo=&quot;https://gitthub.com/Orlando-C/que-pro&quot; cd ~ if [ ! -d $school_dir ] then echo &quot;Directory $school_dir does not exist loser, common L. Lemme make it $school_dir&quot; mkdir -p school fi echo &quot;Directory $school_dir exists.&quot; if [ ! -d $school ] then echo &quot;Directory $school_dir does not exists... cloning $school_repo&quot; cd $school_dir git clone $school_repo cd ~ fi echo &quot;Directory $school exists.&quot; APCSP=HOME/school/AP_Computer_Science_Principles APWH=HOME/school/AP_World_History MathInt2B=HOME/school/Integrated_2_B cd ~ if [ ! -d $APCSP ] then echo &quot;Directory $APCSP has somehow dissapeared... weird&quot; mkdir -p $APCSP fi echo &quot;Directory $APCSP has been prepared&quot; if [ ! -d $APWH ] then echo &quot;Directory $APWH has somehow dissapeared... weird&quot; fi echo &quot;Directory $APWH has been prepared&quot; if [ ! -d $MathInt2B ] then echo &quot;Directory $MathInt2B has somehow dissapeared... weird&quot; fi echo &quot;Directory $MathInt2B has been prepared&quot; . Directory HOME/que-pro does not exist loser, common L. Lemme make it HOME/que-pro Directory HOME/que-pro exists. Directory exists. Directory HOME/school/AP_Computer_Science_Principles has somehow dissapeared... weird Directory HOME/school/AP_Computer_Science_Principles has been prepared Directory HOME/school/AP_World_History has somehow dissapeared... weird Directory HOME/school/AP_World_History has been prepared Directory HOME/school/Integrated_2_B has somehow dissapeared... weird Directory HOME/school/Integrated_2_B has been prepared .",
            "url": "https://orlando-c.github.io/que-pro/bash/week-2/apcsp/2022/08/28/blog-dos.html",
            "relUrl": "/bash/week-2/apcsp/2022/08/28/blog-dos.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "A quiz (using python) on Star Wars!",
            "content": "from tokenize import Ignore print(&quot;Welcome to my quiz on Star Wars! Test your knowledge to see if you are a true Star Wars nerd! So everything runs smoothly, please answer in all lowercase. Thanks and have fun!&quot;) questions = [ &quot;Level 0: Who is Luke Skywalker&#39;s father?&quot;, &quot;Level 1: What trilogy is the Death Star primarily in?&quot;, &quot;Level 2: What is Finn&#39;s stormtrooper code name?&quot;, &quot;Level 3: Where did Anakin and Obiwan duel Darth Maul?&quot;, &quot;Level 4: What is Anakin&#39;s midi-chlorian count (aproximately)?&quot;, &quot;Level 5: Of what species is Yoda?&quot;] answers = [ &quot;anakin skywalker&quot;, &quot;original trilogy&quot;, &quot;fn-2187&quot;, &quot;naboo&quot;, &quot;27000&quot;, &quot;unknown&quot;] MidichlorianValues = [ 250, 750, 2000, 4000, 8000, 12000] #Variables level = 0 Midichlorian = 0 for question in questions: print(&quot;For &quot;, MidichlorianValues[level], &quot; Midi-Chlorian: &quot; + question) guess = str(input()) if(guess == answers[level]): Midichlorian+=MidichlorianValues[level] print(&quot;You got it! You answered &quot; + guess +&quot; for &quot;+ str(MidichlorianValues[level]) + &quot; Midi-Chlorian, Your Midi-Chlorian total is &quot; +str(Midichlorian) + &quot; Midi-Chlorian &quot;) else: print(&quot;Wrong! I find your lack of faith disturbing. You answered &quot; + guess +&quot; for &quot;+ str(MidichlorianValues[level]) + &quot; Midi-Chlorian, The correct response was &quot; + answers[level]+ &quot; You currently have &quot; + str(Midichlorian) + &quot; Midi-Chlorian&quot;) level+=1 if(level&gt;5): if(Midichlorian&gt;17000): print(&quot;The Empire wants YOU to join! You recieved a total of &quot;+str(Midichlorian) + &quot; Midi-Chlorian out of 27000 possible Midi-Chlorian&quot;) else: print(&quot;You&#39;ve been Jedi mind-tricked! You recieved a total of &quot;+str(Midichlorian) + &quot; Midi-chlorian out of 27000 possible Midi-Chlorian&quot;) else: Ignore . Welcome to my quiz on Star Wars! Test your knowledge to see if you are a true Star Wars nerd! So everything runs smoothly, please answer in all lowercase. Thanks and have fun! For 250 Midi-Chlorian: Level 0: Who is Luke Skywalker&#39;s father? You got it! You answered anakin skywalker for 250 Midi-Chlorian, Your Midi-Chlorian total is 250 Midi-Chlorian For 750 Midi-Chlorian: Level 1: What trilogy is the Death Star primarily in? You got it! You answered original trilogy for 750 Midi-Chlorian, Your Midi-Chlorian total is 1000 Midi-Chlorian For 2000 Midi-Chlorian: Level 2: What is Finn&#39;s stormtrooper code name? You got it! You answered fn-2187 for 2000 Midi-Chlorian, Your Midi-Chlorian total is 3000 Midi-Chlorian For 4000 Midi-Chlorian: Level 3: Where did Anakin and Obiwan duel Darth Maul? You got it! You answered naboo for 4000 Midi-Chlorian, Your Midi-Chlorian total is 7000 Midi-Chlorian For 8000 Midi-Chlorian: Level 4: What is Anakin&#39;s midi-chlorian count (aproximately)? You got it! You answered 27000 for 8000 Midi-Chlorian, Your Midi-Chlorian total is 15000 Midi-Chlorian For 12000 Midi-Chlorian: Level 5: Of what species is Yoda? You got it! You answered unknown for 12000 Midi-Chlorian, Your Midi-Chlorian total is 27000 Midi-Chlorian The Empire wants YOU to join! You recieved a total of 27000 Midi-Chlorian out of 27000 possible Midi-Chlorian . !pwd from IPython.display import Image Image(url=&quot;images/ineedyoustarwars.jpg&quot;, width=183, height=275) . /root/vscode/que-pro/_notebooks .",
            "url": "https://orlando-c.github.io/que-pro/python/week-2/apcsp/2022/08/28/The-Quiz.html",
            "relUrl": "/python/week-2/apcsp/2022/08/28/The-Quiz.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "How To Add Images To Markdown Posts",
            "content": "How to add an image to your posts! . Below is a simple explanation of how to add an image to your post (only md) . toc: true | badges: true | comments: true | categories: [jupyter,week-2,APCSP] | image: images/adding-an-image.png | . Markdown Preview Image (the image is the preview image lol) . First get your image, name it, put it into your “images” file, replace “adding-an-image.png” with whatever your image is called, and finally commit! . Markdown . Similar instructions as before except you will need to add this into a new markdown cell like below . .",
            "url": "https://orlando-c.github.io/que-pro/2022/08/28/How-to-add-images-to-markdown-posts.html",
            "relUrl": "/2022/08/28/How-to-add-images-to-markdown-posts.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Markdown",
            "content": "This is a test for using markdown! . Hopefully it works today. .",
            "url": "https://orlando-c.github.io/que-pro/2022/08/22/markdown.html",
            "relUrl": "/2022/08/22/markdown.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Jupyter Notebook Example",
            "content": "msg = &quot;how much wood can a woodchuck chuck if a woodchuck could chuck wood&quot; print (msg) . how much wood can a woodchuck chuck if a woodchuck could chuck wood .",
            "url": "https://orlando-c.github.io/que-pro/jupyter/week-0/apcsp/2022/08/22/jupyterv3.html",
            "relUrl": "/jupyter/week-0/apcsp/2022/08/22/jupyterv3.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . NameError Traceback (most recent call last) /root/vscode/que-pro/_notebooks/2020-02-20-test.ipynb Cell 23 in &lt;cell line: 2&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2020-02-20-test.ipynb#X31sdnNjb2RlLXJlbW90ZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; # display table with pandas -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2020-02-20-test.ipynb#X31sdnNjb2RlLXJlbW90ZQ%3D%3D?line=1&#39;&gt;2&lt;/a&gt; df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2020-02-20-test.ipynb#X31sdnNjb2RlLXJlbW90ZQ%3D%3D?line=2&#39;&gt;3&lt;/a&gt; &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() NameError: name &#39;df&#39; is not defined . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://orlando-c.github.io/que-pro/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "_other_pages",
          "content": "Links to other fastpages in group . Colin . Ethan . Jaden .",
          "url": "https://orlando-c.github.io/que-pro/amigos",
          "relUrl": "/amigos",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "_about_me",
          "content": "Blog by me obviously. . My name is Orlando Carcamo! Here is some info about me! . I like dogs, please pet your dogs | I like tea… sweet tea… Arizona tea | I play videogames on Xbox (superior console) | Fight me | I like to use legos | .",
          "url": "https://orlando-c.github.io/que-pro/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page4": {
          "title": "_schedule",
          "content": "Trimester 1 APCSP . Week Grading Homework . 0 | N/A | N/A | . 1 | N/A | N/A | . 2 | N/A | N/A | . 3 | N/A | N/A | . 4 | N/A | N/A | . 5 | N/A | N/A | . 6 | N/A | N/A | . 7 | N/A | N/A | . 8 | N/A | N/A | . 9 | N/A | N/A | . 10 | N/A | N/A | . 11 | N/A | N/A | . 12 | N/A | N/A | . Trimester 1 Class-wide Week 1 . Class Week Homework Grade &lt;/tr&gt; APWH | 1 | N/A | N/A | . Court Sports | 1 | N/A | N/A | . Math Int 2-B | 1 | N/A | N/A | . HSE 3 | 1 | N/A | N/A | . APCSP | 1 | N/A | N/A | . &lt;/table&gt; .",
          "url": "https://orlando-c.github.io/que-pro/schedule",
          "relUrl": "/schedule",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
      ,"page9": {
          "title": "_vocab",
          "content": "Different languages (primarily used) . Html (HyperText Markup Language) is the code that is used to structure a web page and its content. For example, content could be structured within a set of paragraphs, a list of bulleted points, or using images and data tables . | Python Python is a computer programming language often used to build websites and software, automate tasks, and conduct data analysis . | Bash Unix shell command language used for software development . | Javascript (JS) is a lightweight, interpreted, object-oriented language with first-class functions, and is best known as the scripting language for web pages . | .",
          "url": "https://orlando-c.github.io/que-pro/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  
  

  
  

  

  
  

  
      ,"page14": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://orlando-c.github.io/que-pro/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}