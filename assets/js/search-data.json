{
  
    
        "post0": {
            "title": "MCQ 2",
            "content": "Wrong Section Skill Reason Mistake . Q1 | 1.2 | 4.A | System of equations wrong, Result is multiplied by 3, 3 different intervals | Math conducted is wrong | . Q7 | 1.3 | 4.A | Unnecessary requirements in answer | Misinterpretation | . Q14 | 1.4 | 4.C | 7 provides correct answer, 6 and 8 both fall into incorrect categories | Math conducted is wrong | . Q16 | 4.1 | 5.A | Message doesn&#39;t have to be sent in order of packets | Unknown info | . Q20 | 2.1 | 1.D | There are enough 4bit combinations to store 8 directional data | Unknown info | . Q23 | 2.1 | 3.C | Samples are taken throughout his race and stored as data rather than selected | Thought process wrong | . Q24 | 2.1 | 2.B | Didn&#39;t know binary systems | Unknown info | . Q29 | 3.2 | 3.C | Lists can be updates easily (similar to being able to add user data and input easily) | Misinterpretation | . Q30 | 3.2 | 3.C | Keeping numbers in a list allow for code to just go through the line and determine | . Q31 | 3.2 | 3.A | myWord determines which part of the list, myChar determines character | Thought process wrong | . Q32 | 3.2 | 3.B | yourlist now prints mylist | Thought process wrong | . Q35 | 3.6 | 2.B | Forgot one answer | Missed input | . Q36 | 3.10 | 2.B | Multiply i by 2 to always get an even number | Math conducted is wrong | . Q41 | 3.1 | 4.B | R is 20, P &lt;- R | Thought process wrong | . Q43 | 3.8 | 4.B | Incorrect system of operations | Math conducted is wrong | . Q46 | 3.1 | 4.B | In the end, both outputs are set to true | Misinterpretation | . Q49 | 3.4 | 4.B | (reverse(word), word)(reverse(on), on)(noon) | Misinterpretation | .",
            "url": "https://orlando-c.github.io/que-pro/2023/03/20/MCQ-test-corrections.html",
            "relUrl": "/2023/03/20/MCQ-test-corrections.html",
            "date": " • Mar 20, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "CB outline",
            "content": "CB &quot;Pre-View&quot; . Follow CB regulations and guide to achieve a full score | . Project Work . For my project, I will be making an adventure game that uses player input to interpert their result. Alongside this I am working with backend to set up the databases for the games and login page. Another responsibility for my part is setting up the flask page onto a server so anyone can access it. | . Code Plan . My code plan is to take their input and make a program that will produce a result that is related to that input (ie the game says &quot;you are lost in the forest&quot; and you respond with &quot;move forward,&quot; the game code will try to find the closest result to what you responded with like &quot;you have found your way out of the forest&quot;) | . Video Plan . In the video I will demonstrate the game I have made which would include text entry as its main focus of input. I will go through multiple iterations of the game to demonstrate the varying options created by an API, AI, or program that I will use to generate multiple responses. | .",
            "url": "https://orlando-c.github.io/que-pro/2023/03/20/CB.html",
            "relUrl": "/2023/03/20/CB.html",
            "date": " • Mar 20, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "~MY WORLD TIMEZONE API~",
            "content": "earf . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;dec069b877msh0d9d0827664078cp1a18fajsn2afac35ae063&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . import requests url = &quot;https://world-time2.p.rapidapi.com/timezone&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;0317f96beemsh35e5d75a42dbab7p1d5d30jsn35808d9ea4d2&quot;, &quot;X-RapidAPI-Host&quot;: &quot;world-time2.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) import requests url = &quot;https://world-time2.p.rapidapi.com/timezone&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;0317f96beemsh35e5d75a42dbab7p1d5d30jsn35808d9ea4d2&quot;, &quot;X-RapidAPI-Host&quot;: &quot;world-time2.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.json) json = response.json() . [&#34;Africa/Abidjan&#34;,&#34;Africa/Accra&#34;,&#34;Africa/Algiers&#34;,&#34;Africa/Bissau&#34;,&#34;Africa/Cairo&#34;,&#34;Africa/Casablanca&#34;,&#34;Africa/Ceuta&#34;,&#34;Africa/El_Aaiun&#34;,&#34;Africa/Johannesburg&#34;,&#34;Africa/Juba&#34;,&#34;Africa/Khartoum&#34;,&#34;Africa/Lagos&#34;,&#34;Africa/Maputo&#34;,&#34;Africa/Monrovia&#34;,&#34;Africa/Nairobi&#34;,&#34;Africa/Ndjamena&#34;,&#34;Africa/Sao_Tome&#34;,&#34;Africa/Tripoli&#34;,&#34;Africa/Tunis&#34;,&#34;Africa/Windhoek&#34;,&#34;America/Adak&#34;,&#34;America/Anchorage&#34;,&#34;America/Araguaina&#34;,&#34;America/Argentina/Buenos_Aires&#34;,&#34;America/Argentina/Catamarca&#34;,&#34;America/Argentina/Cordoba&#34;,&#34;America/Argentina/Jujuy&#34;,&#34;America/Argentina/La_Rioja&#34;,&#34;America/Argentina/Mendoza&#34;,&#34;America/Argentina/Rio_Gallegos&#34;,&#34;America/Argentina/Salta&#34;,&#34;America/Argentina/San_Juan&#34;,&#34;America/Argentina/San_Luis&#34;,&#34;America/Argentina/Tucuman&#34;,&#34;America/Argentina/Ushuaia&#34;,&#34;America/Asuncion&#34;,&#34;America/Atikokan&#34;,&#34;America/Bahia&#34;,&#34;America/Bahia_Banderas&#34;,&#34;America/Barbados&#34;,&#34;America/Belem&#34;,&#34;America/Belize&#34;,&#34;America/Blanc-Sablon&#34;,&#34;America/Boa_Vista&#34;,&#34;America/Bogota&#34;,&#34;America/Boise&#34;,&#34;America/Cambridge_Bay&#34;,&#34;America/Campo_Grande&#34;,&#34;America/Cancun&#34;,&#34;America/Caracas&#34;,&#34;America/Cayenne&#34;,&#34;America/Chicago&#34;,&#34;America/Chihuahua&#34;,&#34;America/Costa_Rica&#34;,&#34;America/Creston&#34;,&#34;America/Cuiaba&#34;,&#34;America/Curacao&#34;,&#34;America/Danmarkshavn&#34;,&#34;America/Dawson&#34;,&#34;America/Dawson_Creek&#34;,&#34;America/Denver&#34;,&#34;America/Detroit&#34;,&#34;America/Edmonton&#34;,&#34;America/Eirunepe&#34;,&#34;America/El_Salvador&#34;,&#34;America/Fort_Nelson&#34;,&#34;America/Fortaleza&#34;,&#34;America/Glace_Bay&#34;,&#34;America/Goose_Bay&#34;,&#34;America/Grand_Turk&#34;,&#34;America/Guatemala&#34;,&#34;America/Guayaquil&#34;,&#34;America/Guyana&#34;,&#34;America/Halifax&#34;,&#34;America/Havana&#34;,&#34;America/Hermosillo&#34;,&#34;America/Indiana/Indianapolis&#34;,&#34;America/Indiana/Knox&#34;,&#34;America/Indiana/Marengo&#34;,&#34;America/Indiana/Petersburg&#34;,&#34;America/Indiana/Tell_City&#34;,&#34;America/Indiana/Vevay&#34;,&#34;America/Indiana/Vincennes&#34;,&#34;America/Indiana/Winamac&#34;,&#34;America/Inuvik&#34;,&#34;America/Iqaluit&#34;,&#34;America/Jamaica&#34;,&#34;America/Juneau&#34;,&#34;America/Kentucky/Louisville&#34;,&#34;America/Kentucky/Monticello&#34;,&#34;America/La_Paz&#34;,&#34;America/Lima&#34;,&#34;America/Los_Angeles&#34;,&#34;America/Maceio&#34;,&#34;America/Managua&#34;,&#34;America/Manaus&#34;,&#34;America/Martinique&#34;,&#34;America/Matamoros&#34;,&#34;America/Mazatlan&#34;,&#34;America/Menominee&#34;,&#34;America/Merida&#34;,&#34;America/Metlakatla&#34;,&#34;America/Mexico_City&#34;,&#34;America/Miquelon&#34;,&#34;America/Moncton&#34;,&#34;America/Monterrey&#34;,&#34;America/Montevideo&#34;,&#34;America/Nassau&#34;,&#34;America/New_York&#34;,&#34;America/Nipigon&#34;,&#34;America/Nome&#34;,&#34;America/Noronha&#34;,&#34;America/North_Dakota/Beulah&#34;,&#34;America/North_Dakota/Center&#34;,&#34;America/North_Dakota/New_Salem&#34;,&#34;America/Nuuk&#34;,&#34;America/Ojinaga&#34;,&#34;America/Panama&#34;,&#34;America/Pangnirtung&#34;,&#34;America/Paramaribo&#34;,&#34;America/Phoenix&#34;,&#34;America/Port-au-Prince&#34;,&#34;America/Port_of_Spain&#34;,&#34;America/Porto_Velho&#34;,&#34;America/Puerto_Rico&#34;,&#34;America/Punta_Arenas&#34;,&#34;America/Rainy_River&#34;,&#34;America/Rankin_Inlet&#34;,&#34;America/Recife&#34;,&#34;America/Regina&#34;,&#34;America/Resolute&#34;,&#34;America/Rio_Branco&#34;,&#34;America/Santarem&#34;,&#34;America/Santiago&#34;,&#34;America/Santo_Domingo&#34;,&#34;America/Sao_Paulo&#34;,&#34;America/Scoresbysund&#34;,&#34;America/Sitka&#34;,&#34;America/St_Johns&#34;,&#34;America/Swift_Current&#34;,&#34;America/Tegucigalpa&#34;,&#34;America/Thule&#34;,&#34;America/Thunder_Bay&#34;,&#34;America/Tijuana&#34;,&#34;America/Toronto&#34;,&#34;America/Vancouver&#34;,&#34;America/Whitehorse&#34;,&#34;America/Winnipeg&#34;,&#34;America/Yakutat&#34;,&#34;America/Yellowknife&#34;,&#34;Antarctica/Casey&#34;,&#34;Antarctica/Davis&#34;,&#34;Antarctica/DumontDUrville&#34;,&#34;Antarctica/Macquarie&#34;,&#34;Antarctica/Mawson&#34;,&#34;Antarctica/Palmer&#34;,&#34;Antarctica/Rothera&#34;,&#34;Antarctica/Syowa&#34;,&#34;Antarctica/Troll&#34;,&#34;Antarctica/Vostok&#34;,&#34;Asia/Almaty&#34;,&#34;Asia/Amman&#34;,&#34;Asia/Anadyr&#34;,&#34;Asia/Aqtau&#34;,&#34;Asia/Aqtobe&#34;,&#34;Asia/Ashgabat&#34;,&#34;Asia/Atyrau&#34;,&#34;Asia/Baghdad&#34;,&#34;Asia/Baku&#34;,&#34;Asia/Bangkok&#34;,&#34;Asia/Barnaul&#34;,&#34;Asia/Beirut&#34;,&#34;Asia/Bishkek&#34;,&#34;Asia/Brunei&#34;,&#34;Asia/Chita&#34;,&#34;Asia/Choibalsan&#34;,&#34;Asia/Colombo&#34;,&#34;Asia/Damascus&#34;,&#34;Asia/Dhaka&#34;,&#34;Asia/Dili&#34;,&#34;Asia/Dubai&#34;,&#34;Asia/Dushanbe&#34;,&#34;Asia/Famagusta&#34;,&#34;Asia/Gaza&#34;,&#34;Asia/Hebron&#34;,&#34;Asia/Ho_Chi_Minh&#34;,&#34;Asia/Hong_Kong&#34;,&#34;Asia/Hovd&#34;,&#34;Asia/Irkutsk&#34;,&#34;Asia/Jakarta&#34;,&#34;Asia/Jayapura&#34;,&#34;Asia/Jerusalem&#34;,&#34;Asia/Kabul&#34;,&#34;Asia/Kamchatka&#34;,&#34;Asia/Karachi&#34;,&#34;Asia/Kathmandu&#34;,&#34;Asia/Khandyga&#34;,&#34;Asia/Kolkata&#34;,&#34;Asia/Krasnoyarsk&#34;,&#34;Asia/Kuala_Lumpur&#34;,&#34;Asia/Kuching&#34;,&#34;Asia/Macau&#34;,&#34;Asia/Magadan&#34;,&#34;Asia/Makassar&#34;,&#34;Asia/Manila&#34;,&#34;Asia/Nicosia&#34;,&#34;Asia/Novokuznetsk&#34;,&#34;Asia/Novosibirsk&#34;,&#34;Asia/Omsk&#34;,&#34;Asia/Oral&#34;,&#34;Asia/Pontianak&#34;,&#34;Asia/Pyongyang&#34;,&#34;Asia/Qatar&#34;,&#34;Asia/Qostanay&#34;,&#34;Asia/Qyzylorda&#34;,&#34;Asia/Riyadh&#34;,&#34;Asia/Sakhalin&#34;,&#34;Asia/Samarkand&#34;,&#34;Asia/Seoul&#34;,&#34;Asia/Shanghai&#34;,&#34;Asia/Singapore&#34;,&#34;Asia/Srednekolymsk&#34;,&#34;Asia/Taipei&#34;,&#34;Asia/Tashkent&#34;,&#34;Asia/Tbilisi&#34;,&#34;Asia/Tehran&#34;,&#34;Asia/Thimphu&#34;,&#34;Asia/Tokyo&#34;,&#34;Asia/Tomsk&#34;,&#34;Asia/Ulaanbaatar&#34;,&#34;Asia/Urumqi&#34;,&#34;Asia/Ust-Nera&#34;,&#34;Asia/Vladivostok&#34;,&#34;Asia/Yakutsk&#34;,&#34;Asia/Yangon&#34;,&#34;Asia/Yekaterinburg&#34;,&#34;Asia/Yerevan&#34;,&#34;Atlantic/Azores&#34;,&#34;Atlantic/Bermuda&#34;,&#34;Atlantic/Canary&#34;,&#34;Atlantic/Cape_Verde&#34;,&#34;Atlantic/Faroe&#34;,&#34;Atlantic/Madeira&#34;,&#34;Atlantic/Reykjavik&#34;,&#34;Atlantic/South_Georgia&#34;,&#34;Atlantic/Stanley&#34;,&#34;Australia/Adelaide&#34;,&#34;Australia/Brisbane&#34;,&#34;Australia/Broken_Hill&#34;,&#34;Australia/Darwin&#34;,&#34;Australia/Eucla&#34;,&#34;Australia/Hobart&#34;,&#34;Australia/Lindeman&#34;,&#34;Australia/Lord_Howe&#34;,&#34;Australia/Melbourne&#34;,&#34;Australia/Perth&#34;,&#34;Australia/Sydney&#34;,&#34;CET&#34;,&#34;CST6CDT&#34;,&#34;EET&#34;,&#34;EST&#34;,&#34;EST5EDT&#34;,&#34;Etc/GMT&#34;,&#34;Etc/GMT+1&#34;,&#34;Etc/GMT+10&#34;,&#34;Etc/GMT+11&#34;,&#34;Etc/GMT+12&#34;,&#34;Etc/GMT+2&#34;,&#34;Etc/GMT+3&#34;,&#34;Etc/GMT+4&#34;,&#34;Etc/GMT+5&#34;,&#34;Etc/GMT+6&#34;,&#34;Etc/GMT+7&#34;,&#34;Etc/GMT+8&#34;,&#34;Etc/GMT+9&#34;,&#34;Etc/GMT-1&#34;,&#34;Etc/GMT-10&#34;,&#34;Etc/GMT-11&#34;,&#34;Etc/GMT-12&#34;,&#34;Etc/GMT-13&#34;,&#34;Etc/GMT-14&#34;,&#34;Etc/GMT-2&#34;,&#34;Etc/GMT-3&#34;,&#34;Etc/GMT-4&#34;,&#34;Etc/GMT-5&#34;,&#34;Etc/GMT-6&#34;,&#34;Etc/GMT-7&#34;,&#34;Etc/GMT-8&#34;,&#34;Etc/GMT-9&#34;,&#34;Etc/UTC&#34;,&#34;Europe/Amsterdam&#34;,&#34;Europe/Andorra&#34;,&#34;Europe/Astrakhan&#34;,&#34;Europe/Athens&#34;,&#34;Europe/Belgrade&#34;,&#34;Europe/Berlin&#34;,&#34;Europe/Brussels&#34;,&#34;Europe/Bucharest&#34;,&#34;Europe/Budapest&#34;,&#34;Europe/Chisinau&#34;,&#34;Europe/Copenhagen&#34;,&#34;Europe/Dublin&#34;,&#34;Europe/Gibraltar&#34;,&#34;Europe/Helsinki&#34;,&#34;Europe/Istanbul&#34;,&#34;Europe/Kaliningrad&#34;,&#34;Europe/Kiev&#34;,&#34;Europe/Kirov&#34;,&#34;Europe/Lisbon&#34;,&#34;Europe/London&#34;,&#34;Europe/Luxembourg&#34;,&#34;Europe/Madrid&#34;,&#34;Europe/Malta&#34;,&#34;Europe/Minsk&#34;,&#34;Europe/Monaco&#34;,&#34;Europe/Moscow&#34;,&#34;Europe/Oslo&#34;,&#34;Europe/Paris&#34;,&#34;Europe/Prague&#34;,&#34;Europe/Riga&#34;,&#34;Europe/Rome&#34;,&#34;Europe/Samara&#34;,&#34;Europe/Saratov&#34;,&#34;Europe/Simferopol&#34;,&#34;Europe/Sofia&#34;,&#34;Europe/Stockholm&#34;,&#34;Europe/Tallinn&#34;,&#34;Europe/Tirane&#34;,&#34;Europe/Ulyanovsk&#34;,&#34;Europe/Uzhgorod&#34;,&#34;Europe/Vienna&#34;,&#34;Europe/Vilnius&#34;,&#34;Europe/Volgograd&#34;,&#34;Europe/Warsaw&#34;,&#34;Europe/Zaporozhye&#34;,&#34;Europe/Zurich&#34;,&#34;HST&#34;,&#34;Indian/Chagos&#34;,&#34;Indian/Christmas&#34;,&#34;Indian/Cocos&#34;,&#34;Indian/Kerguelen&#34;,&#34;Indian/Mahe&#34;,&#34;Indian/Maldives&#34;,&#34;Indian/Mauritius&#34;,&#34;Indian/Reunion&#34;,&#34;MET&#34;,&#34;MST&#34;,&#34;MST7MDT&#34;,&#34;PST8PDT&#34;,&#34;Pacific/Apia&#34;,&#34;Pacific/Auckland&#34;,&#34;Pacific/Bougainville&#34;,&#34;Pacific/Chatham&#34;,&#34;Pacific/Chuuk&#34;,&#34;Pacific/Easter&#34;,&#34;Pacific/Efate&#34;,&#34;Pacific/Enderbury&#34;,&#34;Pacific/Fakaofo&#34;,&#34;Pacific/Fiji&#34;,&#34;Pacific/Funafuti&#34;,&#34;Pacific/Galapagos&#34;,&#34;Pacific/Gambier&#34;,&#34;Pacific/Guadalcanal&#34;,&#34;Pacific/Guam&#34;,&#34;Pacific/Honolulu&#34;,&#34;Pacific/Kiritimati&#34;,&#34;Pacific/Kosrae&#34;,&#34;Pacific/Kwajalein&#34;,&#34;Pacific/Majuro&#34;,&#34;Pacific/Marquesas&#34;,&#34;Pacific/Nauru&#34;,&#34;Pacific/Niue&#34;,&#34;Pacific/Norfolk&#34;,&#34;Pacific/Noumea&#34;,&#34;Pacific/Pago_Pago&#34;,&#34;Pacific/Palau&#34;,&#34;Pacific/Pitcairn&#34;,&#34;Pacific/Pohnpei&#34;,&#34;Pacific/Port_Moresby&#34;,&#34;Pacific/Rarotonga&#34;,&#34;Pacific/Tahiti&#34;,&#34;Pacific/Tarawa&#34;,&#34;Pacific/Tongatapu&#34;,&#34;Pacific/Wake&#34;,&#34;Pacific/Wallis&#34;,&#34;WET&#34;] &lt;bound method Response.json of &lt;Response [200]&gt;&gt; . try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;list&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? [&#39;Africa/Abidjan&#39;, &#39;Africa/Accra&#39;, &#39;Africa/Algiers&#39;, &#39;Africa/Bissau&#39;, &#39;Africa/Cairo&#39;, &#39;Africa/Casablanca&#39;, &#39;Africa/Ceuta&#39;, &#39;Africa/El_Aaiun&#39;, &#39;Africa/Johannesburg&#39;, &#39;Africa/Juba&#39;, &#39;Africa/Khartoum&#39;, &#39;Africa/Lagos&#39;, &#39;Africa/Maputo&#39;, &#39;Africa/Monrovia&#39;, &#39;Africa/Nairobi&#39;, &#39;Africa/Ndjamena&#39;, &#39;Africa/Sao_Tome&#39;, &#39;Africa/Tripoli&#39;, &#39;Africa/Tunis&#39;, &#39;Africa/Windhoek&#39;, &#39;America/Adak&#39;, &#39;America/Anchorage&#39;, &#39;America/Araguaina&#39;, &#39;America/Argentina/Buenos_Aires&#39;, &#39;America/Argentina/Catamarca&#39;, &#39;America/Argentina/Cordoba&#39;, &#39;America/Argentina/Jujuy&#39;, &#39;America/Argentina/La_Rioja&#39;, &#39;America/Argentina/Mendoza&#39;, &#39;America/Argentina/Rio_Gallegos&#39;, &#39;America/Argentina/Salta&#39;, &#39;America/Argentina/San_Juan&#39;, &#39;America/Argentina/San_Luis&#39;, &#39;America/Argentina/Tucuman&#39;, &#39;America/Argentina/Ushuaia&#39;, &#39;America/Asuncion&#39;, &#39;America/Atikokan&#39;, &#39;America/Bahia&#39;, &#39;America/Bahia_Banderas&#39;, &#39;America/Barbados&#39;, &#39;America/Belem&#39;, &#39;America/Belize&#39;, &#39;America/Blanc-Sablon&#39;, &#39;America/Boa_Vista&#39;, &#39;America/Bogota&#39;, &#39;America/Boise&#39;, &#39;America/Cambridge_Bay&#39;, &#39;America/Campo_Grande&#39;, &#39;America/Cancun&#39;, &#39;America/Caracas&#39;, &#39;America/Cayenne&#39;, &#39;America/Chicago&#39;, &#39;America/Chihuahua&#39;, &#39;America/Costa_Rica&#39;, &#39;America/Creston&#39;, &#39;America/Cuiaba&#39;, &#39;America/Curacao&#39;, &#39;America/Danmarkshavn&#39;, &#39;America/Dawson&#39;, &#39;America/Dawson_Creek&#39;, &#39;America/Denver&#39;, &#39;America/Detroit&#39;, &#39;America/Edmonton&#39;, &#39;America/Eirunepe&#39;, &#39;America/El_Salvador&#39;, &#39;America/Fort_Nelson&#39;, &#39;America/Fortaleza&#39;, &#39;America/Glace_Bay&#39;, &#39;America/Goose_Bay&#39;, &#39;America/Grand_Turk&#39;, &#39;America/Guatemala&#39;, &#39;America/Guayaquil&#39;, &#39;America/Guyana&#39;, &#39;America/Halifax&#39;, &#39;America/Havana&#39;, &#39;America/Hermosillo&#39;, &#39;America/Indiana/Indianapolis&#39;, &#39;America/Indiana/Knox&#39;, &#39;America/Indiana/Marengo&#39;, &#39;America/Indiana/Petersburg&#39;, &#39;America/Indiana/Tell_City&#39;, &#39;America/Indiana/Vevay&#39;, &#39;America/Indiana/Vincennes&#39;, &#39;America/Indiana/Winamac&#39;, &#39;America/Inuvik&#39;, &#39;America/Iqaluit&#39;, &#39;America/Jamaica&#39;, &#39;America/Juneau&#39;, &#39;America/Kentucky/Louisville&#39;, &#39;America/Kentucky/Monticello&#39;, &#39;America/La_Paz&#39;, &#39;America/Lima&#39;, &#39;America/Los_Angeles&#39;, &#39;America/Maceio&#39;, &#39;America/Managua&#39;, &#39;America/Manaus&#39;, &#39;America/Martinique&#39;, &#39;America/Matamoros&#39;, &#39;America/Mazatlan&#39;, &#39;America/Menominee&#39;, &#39;America/Merida&#39;, &#39;America/Metlakatla&#39;, &#39;America/Mexico_City&#39;, &#39;America/Miquelon&#39;, &#39;America/Moncton&#39;, &#39;America/Monterrey&#39;, &#39;America/Montevideo&#39;, &#39;America/Nassau&#39;, &#39;America/New_York&#39;, &#39;America/Nipigon&#39;, &#39;America/Nome&#39;, &#39;America/Noronha&#39;, &#39;America/North_Dakota/Beulah&#39;, &#39;America/North_Dakota/Center&#39;, &#39;America/North_Dakota/New_Salem&#39;, &#39;America/Nuuk&#39;, &#39;America/Ojinaga&#39;, &#39;America/Panama&#39;, &#39;America/Pangnirtung&#39;, &#39;America/Paramaribo&#39;, &#39;America/Phoenix&#39;, &#39;America/Port-au-Prince&#39;, &#39;America/Port_of_Spain&#39;, &#39;America/Porto_Velho&#39;, &#39;America/Puerto_Rico&#39;, &#39;America/Punta_Arenas&#39;, &#39;America/Rainy_River&#39;, &#39;America/Rankin_Inlet&#39;, &#39;America/Recife&#39;, &#39;America/Regina&#39;, &#39;America/Resolute&#39;, &#39;America/Rio_Branco&#39;, &#39;America/Santarem&#39;, &#39;America/Santiago&#39;, &#39;America/Santo_Domingo&#39;, &#39;America/Sao_Paulo&#39;, &#39;America/Scoresbysund&#39;, &#39;America/Sitka&#39;, &#39;America/St_Johns&#39;, &#39;America/Swift_Current&#39;, &#39;America/Tegucigalpa&#39;, &#39;America/Thule&#39;, &#39;America/Thunder_Bay&#39;, &#39;America/Tijuana&#39;, &#39;America/Toronto&#39;, &#39;America/Vancouver&#39;, &#39;America/Whitehorse&#39;, &#39;America/Winnipeg&#39;, &#39;America/Yakutat&#39;, &#39;America/Yellowknife&#39;, &#39;Antarctica/Casey&#39;, &#39;Antarctica/Davis&#39;, &#39;Antarctica/DumontDUrville&#39;, &#39;Antarctica/Macquarie&#39;, &#39;Antarctica/Mawson&#39;, &#39;Antarctica/Palmer&#39;, &#39;Antarctica/Rothera&#39;, &#39;Antarctica/Syowa&#39;, &#39;Antarctica/Troll&#39;, &#39;Antarctica/Vostok&#39;, &#39;Asia/Almaty&#39;, &#39;Asia/Amman&#39;, &#39;Asia/Anadyr&#39;, &#39;Asia/Aqtau&#39;, &#39;Asia/Aqtobe&#39;, &#39;Asia/Ashgabat&#39;, &#39;Asia/Atyrau&#39;, &#39;Asia/Baghdad&#39;, &#39;Asia/Baku&#39;, &#39;Asia/Bangkok&#39;, &#39;Asia/Barnaul&#39;, &#39;Asia/Beirut&#39;, &#39;Asia/Bishkek&#39;, &#39;Asia/Brunei&#39;, &#39;Asia/Chita&#39;, &#39;Asia/Choibalsan&#39;, &#39;Asia/Colombo&#39;, &#39;Asia/Damascus&#39;, &#39;Asia/Dhaka&#39;, &#39;Asia/Dili&#39;, &#39;Asia/Dubai&#39;, &#39;Asia/Dushanbe&#39;, &#39;Asia/Famagusta&#39;, &#39;Asia/Gaza&#39;, &#39;Asia/Hebron&#39;, &#39;Asia/Ho_Chi_Minh&#39;, &#39;Asia/Hong_Kong&#39;, &#39;Asia/Hovd&#39;, &#39;Asia/Irkutsk&#39;, &#39;Asia/Jakarta&#39;, &#39;Asia/Jayapura&#39;, &#39;Asia/Jerusalem&#39;, &#39;Asia/Kabul&#39;, &#39;Asia/Kamchatka&#39;, &#39;Asia/Karachi&#39;, &#39;Asia/Kathmandu&#39;, &#39;Asia/Khandyga&#39;, &#39;Asia/Kolkata&#39;, &#39;Asia/Krasnoyarsk&#39;, &#39;Asia/Kuala_Lumpur&#39;, &#39;Asia/Kuching&#39;, &#39;Asia/Macau&#39;, &#39;Asia/Magadan&#39;, &#39;Asia/Makassar&#39;, &#39;Asia/Manila&#39;, &#39;Asia/Nicosia&#39;, &#39;Asia/Novokuznetsk&#39;, &#39;Asia/Novosibirsk&#39;, &#39;Asia/Omsk&#39;, &#39;Asia/Oral&#39;, &#39;Asia/Pontianak&#39;, &#39;Asia/Pyongyang&#39;, &#39;Asia/Qatar&#39;, &#39;Asia/Qostanay&#39;, &#39;Asia/Qyzylorda&#39;, &#39;Asia/Riyadh&#39;, &#39;Asia/Sakhalin&#39;, &#39;Asia/Samarkand&#39;, &#39;Asia/Seoul&#39;, &#39;Asia/Shanghai&#39;, &#39;Asia/Singapore&#39;, &#39;Asia/Srednekolymsk&#39;, &#39;Asia/Taipei&#39;, &#39;Asia/Tashkent&#39;, &#39;Asia/Tbilisi&#39;, &#39;Asia/Tehran&#39;, &#39;Asia/Thimphu&#39;, &#39;Asia/Tokyo&#39;, &#39;Asia/Tomsk&#39;, &#39;Asia/Ulaanbaatar&#39;, &#39;Asia/Urumqi&#39;, &#39;Asia/Ust-Nera&#39;, &#39;Asia/Vladivostok&#39;, &#39;Asia/Yakutsk&#39;, &#39;Asia/Yangon&#39;, &#39;Asia/Yekaterinburg&#39;, &#39;Asia/Yerevan&#39;, &#39;Atlantic/Azores&#39;, &#39;Atlantic/Bermuda&#39;, &#39;Atlantic/Canary&#39;, &#39;Atlantic/Cape_Verde&#39;, &#39;Atlantic/Faroe&#39;, &#39;Atlantic/Madeira&#39;, &#39;Atlantic/Reykjavik&#39;, &#39;Atlantic/South_Georgia&#39;, &#39;Atlantic/Stanley&#39;, &#39;Australia/Adelaide&#39;, &#39;Australia/Brisbane&#39;, &#39;Australia/Broken_Hill&#39;, &#39;Australia/Darwin&#39;, &#39;Australia/Eucla&#39;, &#39;Australia/Hobart&#39;, &#39;Australia/Lindeman&#39;, &#39;Australia/Lord_Howe&#39;, &#39;Australia/Melbourne&#39;, &#39;Australia/Perth&#39;, &#39;Australia/Sydney&#39;, &#39;CET&#39;, &#39;CST6CDT&#39;, &#39;EET&#39;, &#39;EST&#39;, &#39;EST5EDT&#39;, &#39;Etc/GMT&#39;, &#39;Etc/GMT+1&#39;, &#39;Etc/GMT+10&#39;, &#39;Etc/GMT+11&#39;, &#39;Etc/GMT+12&#39;, &#39;Etc/GMT+2&#39;, &#39;Etc/GMT+3&#39;, &#39;Etc/GMT+4&#39;, &#39;Etc/GMT+5&#39;, &#39;Etc/GMT+6&#39;, &#39;Etc/GMT+7&#39;, &#39;Etc/GMT+8&#39;, &#39;Etc/GMT+9&#39;, &#39;Etc/GMT-1&#39;, &#39;Etc/GMT-10&#39;, &#39;Etc/GMT-11&#39;, &#39;Etc/GMT-12&#39;, &#39;Etc/GMT-13&#39;, &#39;Etc/GMT-14&#39;, &#39;Etc/GMT-2&#39;, &#39;Etc/GMT-3&#39;, &#39;Etc/GMT-4&#39;, &#39;Etc/GMT-5&#39;, &#39;Etc/GMT-6&#39;, &#39;Etc/GMT-7&#39;, &#39;Etc/GMT-8&#39;, &#39;Etc/GMT-9&#39;, &#39;Etc/UTC&#39;, &#39;Europe/Amsterdam&#39;, &#39;Europe/Andorra&#39;, &#39;Europe/Astrakhan&#39;, &#39;Europe/Athens&#39;, &#39;Europe/Belgrade&#39;, &#39;Europe/Berlin&#39;, &#39;Europe/Brussels&#39;, &#39;Europe/Bucharest&#39;, &#39;Europe/Budapest&#39;, &#39;Europe/Chisinau&#39;, &#39;Europe/Copenhagen&#39;, &#39;Europe/Dublin&#39;, &#39;Europe/Gibraltar&#39;, &#39;Europe/Helsinki&#39;, &#39;Europe/Istanbul&#39;, &#39;Europe/Kaliningrad&#39;, &#39;Europe/Kiev&#39;, &#39;Europe/Kirov&#39;, &#39;Europe/Lisbon&#39;, &#39;Europe/London&#39;, &#39;Europe/Luxembourg&#39;, &#39;Europe/Madrid&#39;, &#39;Europe/Malta&#39;, &#39;Europe/Minsk&#39;, &#39;Europe/Monaco&#39;, &#39;Europe/Moscow&#39;, &#39;Europe/Oslo&#39;, &#39;Europe/Paris&#39;, &#39;Europe/Prague&#39;, &#39;Europe/Riga&#39;, &#39;Europe/Rome&#39;, &#39;Europe/Samara&#39;, &#39;Europe/Saratov&#39;, &#39;Europe/Simferopol&#39;, &#39;Europe/Sofia&#39;, &#39;Europe/Stockholm&#39;, &#39;Europe/Tallinn&#39;, &#39;Europe/Tirane&#39;, &#39;Europe/Ulyanovsk&#39;, &#39;Europe/Uzhgorod&#39;, &#39;Europe/Vienna&#39;, &#39;Europe/Vilnius&#39;, &#39;Europe/Volgograd&#39;, &#39;Europe/Warsaw&#39;, &#39;Europe/Zaporozhye&#39;, &#39;Europe/Zurich&#39;, &#39;HST&#39;, &#39;Indian/Chagos&#39;, &#39;Indian/Christmas&#39;, &#39;Indian/Cocos&#39;, &#39;Indian/Kerguelen&#39;, &#39;Indian/Mahe&#39;, &#39;Indian/Maldives&#39;, &#39;Indian/Mauritius&#39;, &#39;Indian/Reunion&#39;, &#39;MET&#39;, &#39;MST&#39;, &#39;MST7MDT&#39;, &#39;PST8PDT&#39;, &#39;Pacific/Apia&#39;, &#39;Pacific/Auckland&#39;, &#39;Pacific/Bougainville&#39;, &#39;Pacific/Chatham&#39;, &#39;Pacific/Chuuk&#39;, &#39;Pacific/Easter&#39;, &#39;Pacific/Efate&#39;, &#39;Pacific/Enderbury&#39;, &#39;Pacific/Fakaofo&#39;, &#39;Pacific/Fiji&#39;, &#39;Pacific/Funafuti&#39;, &#39;Pacific/Galapagos&#39;, &#39;Pacific/Gambier&#39;, &#39;Pacific/Guadalcanal&#39;, &#39;Pacific/Guam&#39;, &#39;Pacific/Honolulu&#39;, &#39;Pacific/Kiritimati&#39;, &#39;Pacific/Kosrae&#39;, &#39;Pacific/Kwajalein&#39;, &#39;Pacific/Majuro&#39;, &#39;Pacific/Marquesas&#39;, &#39;Pacific/Nauru&#39;, &#39;Pacific/Niue&#39;, &#39;Pacific/Norfolk&#39;, &#39;Pacific/Noumea&#39;, &#39;Pacific/Pago_Pago&#39;, &#39;Pacific/Palau&#39;, &#39;Pacific/Pitcairn&#39;, &#39;Pacific/Pohnpei&#39;, &#39;Pacific/Port_Moresby&#39;, &#39;Pacific/Rarotonga&#39;, &#39;Pacific/Tahiti&#39;, &#39;Pacific/Tarawa&#39;, &#39;Pacific/Tongatapu&#39;, &#39;Pacific/Wake&#39;, &#39;Pacific/Wallis&#39;, &#39;WET&#39;] .",
            "url": "https://orlando-c.github.io/que-pro/2023/03/20/API.html",
            "relUrl": "/2023/03/20/API.html",
            "date": " • Mar 20, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "5.1 to 5.6 big ideas",
            "content": "5.1 . In class discussion . ChatGPT Tool or cheating? | Innacurate information | . | . Domapine . Personal input I believe that the result of being happy can&#39;t come from a place full of nagativity and hate (aka social media). Most and if not all social medias are built arount the sole concept of being better or feeling better than other people on the platform. Likes and follows may play a contributing factor but it&#39;s more about how this affects your personal body image and mental health. I get tired and bored everyday looking at my cell phone, not getting work done, and going to sleep at midnight knowing that I stayed up so late because of my phone. I use TikTok, Instagram, and Youtube as primary sources of consuming media, infinite possibilities, but I never feel as happy as when I look to the stars at night and wonder if we can ever reach there, as when I come home from a long day of schoo; and think to myself, is it all worth it and realizing it will be, as when I hang out with friends that will lead me the right path and are the greatest friends I could ever have and will have. That is the real issue with social media, a drain of content that consumes you with it, turning you into a mindless consumer, stuck in media limbo. If my future self or anyone is reading this, when you go home, take a walk or lay in your bed, close your eyes, and think to yourself, just you and your thoughts. | . | . Benifits and cons of our project . &quot;The Mountain&quot; choice and text based input game . Pros (self) . I get to learn more about text based input and how to use it | I get to learn more about databases and data management | I can use this project in a portfolio to boost my chances with an application | . | Pros (others) . Entertainment | . | Cons (others) . Distracting | . | . | . Benefits and cons of computing . Streaming Services (Disney+, Netflix, Hulu, HBOMax, Amazon Prime) . Pros . Better accesability and larger variety to shows and movies | Relatively more affordable | . | Cons . Need multiple services depending on what you want to watch | Removed the need for cable | Streaming services gatekeep movies and shows to specific locations | Lack of content | . | . | Video Games . Pros . Relaxation | Production of Dopamine, Seratonin, and Endorphins | Socialize | . | Cons . Addiction | Eye and brain effects | Distracting | . | . | Snapchat . Pros . Socialize | Communication | . | Cons . Affect your self body image | Stalking | Digital footprint | . | . | Phones (Apple, Samsung, Google, OnePlus, Xiaomi) . Pros . Accessability to the internet | Ability to contact others | Revolutionary piece of technology | . | Cons . Incredibly distracting | Addictive | . | My personal input . While phones have proven to become necessary in todays society, they have also become a major risk in the health and danger aspect of things. Nearly 15% of car crashes involve someone who was texting or using hands off car technology to manage their phone which is still incredibly distractiong. Phones also have an effect on mental health such as the mind warping reality of social media and access to the entire internet may lead to some unprecidented results. Phones are also gatekeeped, meaning the more capible phones with better technology costs practically 33% of todays average paycheck. Many dont have access to cellular data or phones at all which leads to our next discussion. | . | . | . 5.2 . How can I empower myself in a digital world? . Someone may empower themselves in a digital world by maintaning a balance between life and technology as well as speaking out about others who may be harassing or being harassed. At Del Norte I could involve myself more into other activities to take my mind off the negativity of society. | . How can I help others empower themselves? . Many people today encourage others to speak out and let us help them in a time and society where many may need help. A lot of mentall illness, depression, or other life atering events may occur due to those who are suffering silently and a good way to reach out to them or for them to speak out is through social media or means of messaging them. | . Gatekeeping of technology . I do believe that technology is being gatekeeped by large corporations such as Google and Apple however is not a problem at Del Norte because our school provides resources for many who may be in financial struggle or are in need of the technology. Unfortunately, other school districts dont have acess to many resources and this creates a divide in our communitites and society. | . Answer with an opinion and learnings so far this year: What are pros/cons on internet blockers at router and lack of admin password on lab machines at school? . I am a advocate on the removal of some, if not all restrctions on the school wifi. There have been many moments where a resource for AP world history or spanish class amy be blocked due to the districhs internet blocker. Our school invades our private property as well, installing the same internet protection services on your PERSONAL COMPUTER. Even being signed in onto your laptop with your chool account allows them to see your search history, downloaded or uploaded files on your internet provider, and is generally a massive invasion of privacy. The only good thing I can see coming from the internet blocker is so students dont end up searching lewd things on the internet at school or home which is rendered useless due to many being able to do the same thing on their phone (that is bad dont do this just used this as an example). | . What concerns do you have personally about the digital divide? . My concern is that without the right resources, the digital divide between communities and societies will become much larger. The average IQ of a person in an area where they have access to a wider and better variety of learning resouces will be higher than that of a person who does not have a laptop nor phone. I believe that we should provide to thse who are unable to provide resources for the future generation whom are supposed to better the world. | . 5.3 . The use of Facebook is primarily among older generations, whereas TikTok is more popular among younger users. I don&#39;t see this as harmful as people from different age groups have different interests and preferences, and having separate platforms for them is ideal. . | Regarding virtual assistants having female voices, I think it was not a deliberate decision. Companies probably didn&#39;t intend to use a specific gender for these AI systems. . | One example of an algorithm that influences our decisions is Google. I came across a video which showed how Google uses the device&#39;s microphone to listen and deliver targeted ads based on what it hears. . | Regarding the video &quot;HP computers are racist,&quot; I believe it&#39;s a mistake due to insufficient testing. If the technology had been tested on a wider range of skin tones, the problem could have been avoided before it was released. This highlights the significance of conducting thorough testing. . | . 5.4 . The Computer Science Principles (CSP) course has approximately 150 students. A potential crowdsourcing idea for this environment could be to gather ratings (on a scale of 1 to 10) of the difficulty and enjoyment levels of other courses in comparison to CSP. This information could then be used to make recommendations to specific students. . | As for crowdsourcing at Del Norte, collecting input from as many students as possible, not only from Del Norte but also from other schools, would make the data and recommendations for CSP more reliable. . | Data that could be captured at N@tM (Night at the Museum) to make the evening more interesting could include the scores of the Minesweeper game. This data could then be used to adjust the difficulty level of the game to achieve the optimal level of enjoyment for participants. The data could also be presented to teachers during final exams week to demonstrate the success of the event. . | . 5.5 . When creating a GitHub repository, one is prompted to select a license type. It&#39;s important to review the available license options in relation to the Tech Talk and make notes in a personal blog. . | One example of a free-use license is the Creative Commons Zero v1.0 Universal. Another option is the MIT license, which allows for free use while giving credit to the author. The Open Source GPL License permits use but disallows others from releasing their own versions. . | In your blog, summarize the discussions and personal insights on software licenses, digital rights, and other legal and ethical considerations from the College Board topic. There are various opinions on the issue of copyright. Some individuals or companies may prefer to restrict others from using their work without permission to avoid financial loss. On the contrary, some smaller creators may not want to enforce copyright laws as it can help them gain exposure. Lastly, some argue that copyright is largely ineffective as people always find ways to duplicate content. . | For my personal blog and team repositories for the CPT project, I have selected the Creative Commons Zero v1.0 Universal license. My intention is not to make a profit from the content in my repository and I hope that it can inspire other CSP students. I accomplished this by removing the previous LICENSE file and creating a new one with the correct license. It&#39;s important to also note that the frontend repository, as it is built on GitHub pages, may come with its own license and restrictions. I have documented the team&#39;s license choice and the process of updating it in my blog. . | . 5.6 . In CompSci Principles, what Personal Identifiable Information (PII) have you encountered in a project? . | During my time in CSP, I have encountered PII such as name, age, date of birth, and graduation year from API activity. . | How do you feel about PII and your own exposure to it? . | In my opinion, having a safe amount of PII on the internet can be beneficial, such as with LinkedIn information that can help connect with potential employers. However, information like credit card numbers and passwords can be harmful if they fall into the wrong hands. . | Can you describe what makes a good or bad password and an additional step for authentication? . | Good passwords are complex, using a mix of uppercase and lowercase letters, numbers, and symbols, making it more difficult for a brute force attack. Two-factor authentication is also a helpful method, which involves verifying a login from an external source, such as through email or a code. . | Can you explain the difference between Symmetric and Asymmetric encryption? . | Symmetric encryption uses a single key for both encryption and decryption, while asymmetric encryption uses two keys, a public key for encryption and a private key for decryption. . | Can you provide an example of encryption used in AWS deployment? . | One instance of encryption used in AWS deployment was the creation of public and private keys to ensure confidentiality and security. . | Can you share a personal experience with a phishing scheme or describe other phishing techniques? . | I once witnessed my mother click on a malicious link that promised free watches, which was actually a phishing attempt. Thankfully, my siblings and I caught the mistake before she could enter any sensitive information like her credit card number. . | .",
            "url": "https://orlando-c.github.io/que-pro/2023/03/20/.1-and-5.2-big-ideas.html",
            "relUrl": "/2023/03/20/.1-and-5.2-big-ideas.html",
            "date": " • Mar 20, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "Unit 2.4b Using Programs with Data, SQL",
            "content": "Database Programming is Program with Data . Each Tri 2 Final Project should be an example of a Program with Data. . Prepare to use SQLite in common Imperative Technique . Explore SQLite Connect object to establish database connection- Explore SQLite Cursor Object to fetch data from a table within a database | . Schema of Users table in Sqlite.db . Uses PRAGMA statement to read schema. . Describe Schema, here is resource Resource- What is a database schema? . - The plan or design of a table . What is the purpose of identity Column in SQL database? So that it is easier to search up data as well as organize for later use | . | What is the purpose of a primary key in SQL database? The UserID (or something unique) is the universal or primary identifier for databases | . | What are the Data Types in SQL table? Int, Str, Boolean, Images, or any data structure/type | . | . import sqlite3 database = &#39;instance/sqlite.db&#39; # this is location of database def schema(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Fetch results of Schema results = cursor.execute(&quot;PRAGMA table_info(&#39;users&#39;)&quot;).fetchall() # Print the results for row in results: print(row) # Close the database connection conn.close() schema() . (0, &#39;id&#39;, &#39;INTEGER&#39;, 1, None, 1) (1, &#39;_name&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (2, &#39;_uid&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (3, &#39;_password&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (4, &#39;_dob&#39;, &#39;DATE&#39;, 0, None, 0) . Reading Users table in Sqlite.db . Uses SQL SELECT statement to read data . - What is a connection object? After you google it, what do you think it does? . - Same for cursor object? . - Look at conn object and cursor object in VSCode debugger. What attributes are in the object? . Is &quot;results&quot; an object? How do you know? Yes because it is classified as schema in the table meaning it has a role/place in the table | . | . import sqlite3 def read(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Execute a SELECT statement to retrieve data from a table results = cursor.execute(&#39;SELECT * FROM users&#39;).fetchall() # Print the results if len(results) == 0: print(&quot;Table is empty&quot;) else: for row in results: print(row) # Close the cursor and connection objects cursor.close() conn.close() read() . (1, &#39;Thomas Edison&#39;, &#39;toby&#39;, &#39;sha256$Sa7YYFK6vVDVSMc0$7e0d1269f48480d5c2bd62cb29c397d67fd6a53f2b637bcad2437c92c27a4402&#39;, &#39;1847-02-11&#39;) (2, &#39;Nikola Tesla&#39;, &#39;niko&#39;, &#39;sha256$SM1kWJeWKT65CxKn$85480c1f8d5b81ec46f344c6f449fb71ba201941120d733a02516a6cf44fcb7e&#39;, &#39;2023-03-15&#39;) (3, &#39;Alexander Graham Bell&#39;, &#39;lex&#39;, &#39;sha256$9wKbnpZ2QbdkG9Hp$966b952967a61475b2b14efa603815d1e4eee3bcc6d75e5a75cd1f0c23be7f7a&#39;, &#39;2023-03-15&#39;) (4, &#39;Eli Whitney&#39;, &#39;whit&#39;, &#39;sha256$hZYptuHCvsefTRMd$2cd3ba4efd856525a424ed679bee6f26628d00088cd735fc28d02f12b034d47e&#39;, &#39;2023-03-15&#39;) (5, &#39;Indiana Jones&#39;, &#39;indi&#39;, &#39;sha256$qCpRJksivYuTGsHv$e166d796b4bc38622f200b3c834053be6177ff2e458856e2193db1f6162cfe06&#39;, &#39;1920-10-21&#39;) (6, &#39;Marion Ravenwood&#39;, &#39;raven&#39;, &#39;sha256$eudNrJmgOn98sFCi$1dc39f688c3c373f015ad948b3e3f917550d663dd0f6271bea2b04d68c72af70&#39;, &#39;1921-10-21&#39;) (7, &#39;Orlando&#39;, &#39;5&#39;, &#39;sha256$PWGFsKaNXMzngcJ1$8439b51366bf98823fe2367b33b36a3339ec558b175a356a4111d3a7a88bcdee&#39;, &#39;2006-12-08&#39;) . Create a new User in table in Sqlite.db . Uses SQL INSERT to add row . Compore create() in both SQL lessons. What is better or worse in the two implementations? | Explain purpose of SQL INSERT. Is this the same as User init? | . import sqlite3 def create(): name = input(&quot;Enter your name:&quot;) uid = input(&quot;Enter your user id:&quot;) password = input(&quot;Enter your password&quot;) dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to insert data into a table cursor.execute(&quot;INSERT INTO users (_name, _uid, _password, _dob) VALUES (?, ?, ?, ?)&quot;, (name, uid, password, dob)) # Commit the changes to the database conn.commit() print(f&quot;A new user record {uid} has been created&quot;) except sqlite3.Error as error: print(&quot;Error while executing the INSERT:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() create() . A new user record lando has been created . Updating a User in table in Sqlite.db . Uses SQL UPDATE to modify password . What does the hacked part do? Warns a user that their information may be comprimised | . | Explain try/except, when would except occur? Except happens when the requirment has not passed and it | . | What code seems to be repeated in each of these examples to point, why is it repeated? | . import sqlite3 def update(): uid = input(&quot;Enter user id to update&quot;) password = input(&quot;Enter updated password&quot;) if len(password) &lt; 2: message = &quot;hacked&quot; password = &#39;gothackednewpassword123&#39; else: message = &quot;successfully updated&quot; # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to update data in a table cursor.execute(&quot;UPDATE users SET _password = ? WHERE _uid = ?&quot;, (password, uid)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: print(f&quot;The row with user id {uid} the password has been {message}&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the UPDATE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() update() . Delete a User in table in Sqlite.db . Uses a delete function to remove a user based on a user input of the id. . Is DELETE a dangerous operation? Why? Yes because this is permanently removing information from the database and could potentially corrupt data | . | In the print statemements, what is the &quot;f&quot; and what does {uid} do? The &quot;f&quot; is for function and the {uid} is what prints the uid or can be used in different situations | . | . import sqlite3 def delete(): uid = input(&quot;Enter user id to delete&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: cursor.execute(&quot;DELETE FROM users WHERE _uid = ?&quot;, (uid,)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: # The uid was found in the table and the row was deleted print(f&quot;The row with uid {uid} was successfully deleted&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the DELETE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() delete() . Menu Interface to CRUD operations . CRUD and Schema interactions from one location by running menu. Observe input at the top of VSCode, observe output underneath code cell. . Why does the menu repeat? The cell repeats because it is caled again after you have made a request for user interface reasons | . | Could you refactor this menu? Make it work with a List? Yes, the function can call from a specific list within a database | . | . def menu(): operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete or (S)chema&quot;) if operation.lower() == &#39;c&#39;: create() elif operation.lower() == &#39;r&#39;: read() elif operation.lower() == &#39;u&#39;: update() elif operation.lower() == &#39;d&#39;: delete() elif operation.lower() == &#39;s&#39;: schema() elif len(operation)==0: # Escape Key return else: print(&quot;Please enter c, r, u, or d&quot;) menu() # recursion, repeat menu try: menu() # start menu except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) . The row with user id lando the password has been hacked . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In this implementation, do you see procedural abstraction? | In 2.4a or 2.4b lecture Do you see data abstraction? Complement this with Debugging example. | Use Imperative or OOP style to Create a new Table or do something that applies to your CPT project. | . | . Reference... sqlite documentation .",
            "url": "https://orlando-c.github.io/que-pro/2023/03/16/AP-unit2-4b.html",
            "relUrl": "/2023/03/16/AP-unit2-4b.html",
            "date": " • Mar 16, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Unit 2.4a Using Programs with Data, SQLAlchemy",
            "content": "Database and SQLAlchemy . In this blog we will explore using programs with data, focused on Databases. We will use SQLite Database to learn more about using Programs with Data. Use Debugging through these examples to examine Objects created in Code. . College Board talks about ideas like . Program Usage. &quot;iterative and interactive way when processing information&quot; | Managing Data. &quot;classifying data are part of the process in using programs&quot;, &quot;data files in a Table&quot; | Insight &quot;insight and knowledge can be obtained from ... digitally represented information&quot; | Filter systems. &#39;tools for finding information and recognizing patterns&quot; | Application. &quot;the preserve has two databases&quot;, &quot;an employee wants to count the number of book&quot; | . | PBL, Databases, Iterative/OOP . Iterative. Refers to a sequence of instructions or code being repeated until a specific end result is achieved | OOP. A computer programming model that organizes software design around data, or objects, rather than functions and logic | SQL. Structured Query Language, abbreviated as SQL, is a language used in programming, managing, and structuring data | . | . Imports and Flask Objects . Defines and key object creations . Comment on where you have observed these working? Provide a defintion of purpose. Flask app object | SQLAlchemy db object | | . &quot;&quot;&quot; These imports define the key objects &quot;&quot;&quot; from flask import Flask from flask_sqlalchemy import SQLAlchemy &quot;&quot;&quot; These object and definitions are used throughout the Jupyter Notebook. &quot;&quot;&quot; # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) database = &#39;sqlite:///sqlite.db&#39; # path and filename of database app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() # This belongs in place where it runs once per project db.init_app(app) . Model Definition . Define columns, initialization, and CRUD methods for users table in sqlite.db . Comment on these items in the class, purpose and defintion. class User | db.Model inheritance | init method | @property, @&lt;column&gt;.setter | create, read, update, delete methods | . | . &quot;&quot;&quot; database dependencies to support sqlite examples &quot;&quot;&quot; import datetime from datetime import datetime import json from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into a Python shell and follow along &#39;&#39;&#39; # Define the User class to manage actions in the &#39;users&#39; table # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # -- a.) db.Model is like an inner layer of the onion in ORM # -- b.) User represents data we want to store, something that is built on db.Model # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL class User(db.Model): __tablename__ = &#39;users&#39; # table name is plural, class name is singular # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _name = db.Column(db.String(255), unique=False, nullable=False) _uid = db.Column(db.String(255), unique=True, nullable=False) _password = db.Column(db.String(255), unique=False, nullable=False) _dob = db.Column(db.Date) # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password=&quot;123qwerty&quot;, dob=datetime.today()): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts uid from object @property def uid(self): return self._uid # a setter function, allows uid to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional method used for setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter against stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # dob property is returned as string, a string represents date outside object @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob setter, verifies date type before it is set or default to today @dob.setter def dob(self, dob): if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob # age is calculated field, age is returned according to date of birth @property def age(self): today = datetime.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) # output content using str(object) is in human readable form # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.read()) # CRUD create/add a new record to the table # returns self or None on error def create(self): try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): return { &quot;id&quot;: self.id, &quot;name&quot;: self.name, &quot;uid&quot;: self.uid, &quot;dob&quot;: self.dob, &quot;age&quot;: self.age, } # CRUD update: updates user name, password, phone # returns self def update(self, name=&quot;&quot;, uid=&quot;&quot;, password=&quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(name) &gt; 0: self.name = name if len(uid) &gt; 0: self.uid = uid if len(password) &gt; 0: self.set_password(password) db.session.commit() return self # CRUD delete: remove self # None def delete(self): db.session.delete(self) db.session.commit() return None . Initial Data . Uses SQLALchemy db.create_all() to initialize rows into sqlite.db . Comment on how these work? Create All Tables from db Object | User Object Constructors | Try / Except | | . &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # Builds working data for testing def initUsers(): with app.app_context(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dob=datetime(1847, 2, 11)) u2 = User(name=&#39;Nikola Tesla&#39;, uid=&#39;niko&#39;, password=&#39;123niko&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;whit&#39;, password=&#39;123whit&#39;) u5 = User(name=&#39;Indiana Jones&#39;, uid=&#39;indi&#39;, dob=datetime(1920, 10, 21)) u6 = User(name=&#39;Marion Ravenwood&#39;, uid=&#39;raven&#39;, dob=datetime(1921, 10, 21)) users = [u1, u2, u3, u4, u5, u6] &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; for user in users: try: &#39;&#39;&#39;add user to table&#39;&#39;&#39; object = user.create() print(f&quot;Created new uid {object.uid}&quot;) except: # error raised if object nit created &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; print(f&quot;Records exist uid {user.uid}, or error.&quot;) initUsers() . Records exist uid toby, or error. Records exist uid niko, or error. Records exist uid lex, or error. Records exist uid whit, or error. Records exist uid indi, or error. Records exist uid raven, or error. . Check for given Credentials in users table in sqlite.db . Use of ORM Query object and custom methods to identify user to credentials uid and password . Comment on purpose of following User.query.filter_by | user.password | | . def find_by_uid(uid): with app.app_context(): user = User.query.filter_by(_uid=uid).first() return user # returns user object # Check credentials by finding user and verify password def check_credentials(uid, password): # query email and return user record user = find_by_uid(uid) if user == None: return False if (user.is_password(password)): return True return False #check_credentials(&quot;indi&quot;, &quot;123qwerty&quot;) . Create a new User in table in Sqlite.db . Uses SQLALchemy and custom user.create() method to add row. . Comment on purpose of following user.find_by_uid() and try/except | user = User(...) | user.dob and try/except | user.create() and try/except | | . def create(): # optimize user time to see if uid exists uid = input(&quot;Enter your user id:&quot;) user = find_by_uid(uid) try: print(&quot;Found n&quot;, user.read()) return except: pass # keep going # request value that ensure creating valid object name = input(&quot;Enter your name:&quot;) password = input(&quot;Enter your password&quot;) # Initialize User object before date user = User(name=name, uid=uid, password=password ) # create user.dob, fail with today as dob dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) try: user.dob = datetime.strptime(dob, &#39;%Y-%m-%d&#39;).date() except ValueError: user.dob = datetime.today() print(f&quot;Invalid date {dob} require YYYY-mm-dd, date defaulted to {user.dob}&quot;) # write object to database with app.app_context(): try: object = user.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error uid {uid}&quot;) create() . Invalid date require YYYY-mm-dd, date defaulted to 03-20-2023 Created {&#39;id&#39;: 9, &#39;name&#39;: &#39;&#39;, &#39;uid&#39;: &#39;&#39;, &#39;dob&#39;: &#39;03-20-2023&#39;, &#39;age&#39;: 0} . Reading users table in sqlite.db . Uses SQLALchemy query.all method to read data . Comment on purpose of following User.query.all | json_ready assignment, google List Comprehension | | . # SQLAlchemy extracts all users from database, turns each user into JSON def read(): with app.app_context(): table = User.query.all() json_ready = [user.read() for user in table] # &quot;List Comprehensions&quot;, for each user add user.read() to list return json_ready read() . [{&#39;id&#39;: 1, &#39;name&#39;: &#39;Thomas Edison&#39;, &#39;uid&#39;: &#39;toby&#39;, &#39;dob&#39;: &#39;02-11-1847&#39;, &#39;age&#39;: 176}, {&#39;id&#39;: 2, &#39;name&#39;: &#39;Nikola Tesla&#39;, &#39;uid&#39;: &#39;niko&#39;, &#39;dob&#39;: &#39;03-15-2023&#39;, &#39;age&#39;: 0}, {&#39;id&#39;: 3, &#39;name&#39;: &#39;Alexander Graham Bell&#39;, &#39;uid&#39;: &#39;lex&#39;, &#39;dob&#39;: &#39;03-15-2023&#39;, &#39;age&#39;: 0}, {&#39;id&#39;: 4, &#39;name&#39;: &#39;Eli Whitney&#39;, &#39;uid&#39;: &#39;whit&#39;, &#39;dob&#39;: &#39;03-15-2023&#39;, &#39;age&#39;: 0}, {&#39;id&#39;: 5, &#39;name&#39;: &#39;Indiana Jones&#39;, &#39;uid&#39;: &#39;indi&#39;, &#39;dob&#39;: &#39;10-21-1920&#39;, &#39;age&#39;: 102}, {&#39;id&#39;: 6, &#39;name&#39;: &#39;Marion Ravenwood&#39;, &#39;uid&#39;: &#39;raven&#39;, &#39;dob&#39;: &#39;10-21-1921&#39;, &#39;age&#39;: 101}, {&#39;id&#39;: 7, &#39;name&#39;: &#39;Orlando&#39;, &#39;uid&#39;: &#39;5&#39;, &#39;dob&#39;: &#39;12-08-2006&#39;, &#39;age&#39;: 16}, {&#39;id&#39;: 8, &#39;name&#39;: &#39;Orlando Carcamo&#39;, &#39;uid&#39;: &#39;lando&#39;, &#39;dob&#39;: &#39;12-08-2006&#39;, &#39;age&#39;: 16}, {&#39;id&#39;: 9, &#39;name&#39;: &#39;&#39;, &#39;uid&#39;: &#39;&#39;, &#39;dob&#39;: &#39;03-20-2023&#39;, &#39;age&#39;: 0}] . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Change blog to your own database. | Add additional CRUD Add Update functionality to this blog. | Add Delete functionality to this blog. | . | . def delete(uid): uid = input(&quot;Enter your user id:&quot;) user = User.query.filter_by(uid=uid).first() if user: db.session.delete(user) db.session.commit() print(f&quot;User with uid {uid} deleted successfully.&quot;) else: print(f&quot;User with uid {uid} not found.&quot;) . def update(uid, name=None, password=None, dob=None): uid = input(&quot;Enter your uid:&quot;) user = User.query.filter_by(uid=uid).first() if user: if name: user.name = name if password: user.password = password if dob: try: user.dob = datetime.strptime(dob, &#39;%Y-%m-%d&#39;).date() except ValueError: user.dob = datetime.today() print(f&quot;Invalid date {dob} require YYYY-mm-dd, date defaulted to {user.dob}&quot;) db.session.commit() print(f&quot;User with uid {uid} updated successfully.&quot;) else: print(f&quot;User with uid {uid} not found.&quot;) .",
            "url": "https://orlando-c.github.io/que-pro/2023/03/13/AP-unit2-4a.html",
            "relUrl": "/2023/03/13/AP-unit2-4a.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "Unit 2.3 Extracting Information from Data, Pandas",
            "content": "Files To Get . Save this file to your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/2023-03-09-AP-unit2-3.ipynb . Save these files into a subfolder named files in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/data.csv . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/grade.json . Save this image into a subfolder named images in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/images/table_dataframe.png . Pandas and DataFrames . In this lesson we will be exploring data analysis using Pandas. . College Board talks about ideas like Tools. &quot;the ability to process data depends on users capabilities and their tools&quot; | Combining Data. &quot;combine county data sets&quot; | Status on Data&quot;determining the artist with the greatest attendance during a particular month&quot; | Data poses challenge. &quot;the need to clean data&quot;, &quot;incomplete data&quot; | . | . From Pandas Overview -- When working with tabular data, such as data stored in spreadsheets or databases, pandas is the right tool for you. pandas will help you to explore, clean, and process your data. In pandas, a data table is called a DataFrame. | . . &#39;&#39;&#39;Pandas is used to gather data sets through its DataFrames implementation&#39;&#39;&#39; import pandas as pd . Cleaning Data . When looking at a data set, check to see what data needs to be cleaned. Examples include: . Missing Data Points | Invalid Data | Inaccurate Data | . Run the following code to see what needs to be cleaned . df = pd.read_json(&#39;files/grade.json&#39;) print(df) # What part of the data set needs to be cleaned? # From PBL learning, what is a good time to clean data? Hint, remember Garbage in, Garbage out? . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 2 578 12 2.78 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 6 145 12 2.95 7 167 10 3.90 8 235 9th Grade 3.15 9 nil 9 2.80 10 469 11 3.45 11 456 10 2.75 . Extracting Info . Take a look at some features that the Pandas library has that extracts info from the dataset . DataFrame Extract Column . print(df[[&#39;GPA&#39;]]) print() #try two columns and remove the index from print statement print(df[[&#39;Student ID&#39;,&#39;GPA&#39;]].to_string(index=False)) . GPA 0 3.57 1 4.00 2 2.78 3 3.45 4 4.75 5 3.33 6 2.95 7 3.90 8 3.15 9 2.80 10 3.45 11 2.75 Student ID GPA 123 3.57 246 4.00 578 2.78 469 3.45 324 4.75 313 3.33 145 2.95 167 3.90 235 3.15 nil 2.80 469 3.45 456 2.75 . DataFrame Sort . print(df.sort_values(by=[&#39;GPA&#39;])) print() #sort the values in reverse order print(df.sort_values(by=[&#39;GPA&#39;], ascending=False)) . Student ID Year in School GPA 11 456 10 2.75 2 578 12 2.78 9 nil 9 2.80 6 145 12 2.95 8 235 9th Grade 3.15 5 313 20 3.33 3 469 11 3.45 10 469 11 3.45 0 123 12 3.57 7 167 10 3.90 1 246 10 4.00 4 324 Junior 4.75 Student ID Year in School GPA 4 324 Junior 4.75 1 246 10 4.00 7 167 10 3.90 0 123 12 3.57 3 469 11 3.45 10 469 11 3.45 5 313 20 3.33 8 235 9th Grade 3.15 6 145 12 2.95 9 nil 9 2.80 2 578 12 2.78 11 456 10 2.75 . DataFrame Selection or Filter . print(df[df.GPA &gt; 3.00]) . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 7 167 10 3.90 8 235 9th Grade 3.15 10 469 11 3.45 . DataFrame Selection Max and Min . print(df[df.GPA == df.GPA.max()]) print() print(df[df.GPA == df.GPA.min()]) . Student ID Year in School GPA 4 324 Junior 4.75 Student ID Year in School GPA 11 456 10 2.75 . Create your own DataFrame . Using Pandas allows you to create your own DataFrame in Python. . Python Dictionary to Pandas DataFrame . import pandas as pd #the data can be stored as a python dictionary dict = { &quot;calories&quot;: [420, 380, 390, 600], &quot;duration&quot;: [50, 40, 45, 60] } #stores the data in a data frame print(&quot;-Dict_to_DF&quot;) df = pd.DataFrame(dict) print(df) print(&quot;-Dict_to_DF_labels--&quot;) #or with the index argument, you can label rows. df = pd.DataFrame(dict, index = [&quot;day1&quot;, &quot;day2&quot;, &quot;day3&quot;, &quot;day4&quot;]) print(df) . -Dict_to_DF calories duration 0 420 50 1 380 40 2 390 45 3 600 60 -Dict_to_DF_labels-- calories duration day1 420 50 day2 380 40 day3 390 45 day4 600 60 . Examine DataFrame Rows . print(&quot;-Examine Selected Rows&quot;) #use a list for multiple labels: print(df.loc[[&quot;day1&quot;, &quot;day3&quot;, &quot;day4&quot;]]) #refer to the row index: print(&quot;--Examine Single Row--&quot;) print(df.loc[&quot;day1&quot;]) . -Examine Selected Rows calories duration day1 420 50 day3 390 45 day4 600 60 --Examine Single Row-- calories 420 duration 50 Name: day1, dtype: int64 . Pandas DataFrame Information . print(df.info()) . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; Index: 4 entries, day1 to day4 Data columns (total 2 columns): # Column Non-Null Count Dtype -- -- 0 calories 4 non-null int64 1 duration 4 non-null int64 dtypes: int64(2) memory usage: 268.0+ bytes None . Example of larger data set . Pandas can read CSV and many other types of files, run the following code to see more features with a larger data set . import pandas as pd #read csv and sort &#39;Duration&#39; largest to smallest df = pd.read_csv(&#39;files/data.csv&#39;).sort_values(by=[&#39;Duration&#39;], ascending=False) print(&quot;--Duration Top 10&quot;) print(df.head(10)) print(&quot;--Duration Bottom 10&quot;) print(df.tail(10)) . --Duration Top 10 Duration Pulse Maxpulse Calories 69 300 108 143 1500.2 79 270 100 131 1729.0 109 210 137 184 1860.4 60 210 108 160 1376.0 106 180 90 120 800.3 90 180 101 127 600.1 65 180 90 130 800.4 61 160 110 137 1034.4 62 160 109 135 853.0 67 150 107 130 816.0 --Duration Bottom 10 Duration Pulse Maxpulse Calories 68 20 106 136 110.4 100 20 95 112 77.7 89 20 83 107 50.3 135 20 136 156 189.0 94 20 150 171 127.4 95 20 151 168 229.4 139 20 141 162 222.4 64 20 110 130 131.4 112 15 124 139 124.2 93 15 80 100 50.5 . APIs are a Source for Writing Programs with Data . 3rd Party APIs are a great source for creating Pandas Data Frames. . Data can be fetched and resulting json can be placed into a Data Frame | Observe output, this looks very similar to a Database | . &#39;&#39;&#39;Pandas can be used to analyze data&#39;&#39;&#39; import pandas as pd import requests def fetch(): &#39;&#39;&#39;Obtain data from an endpoint&#39;&#39;&#39; url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot; fetch = requests.get(url) json = fetch.json() # filter data for requirement df = pd.DataFrame(json[&#39;countries_stat&#39;]) # filter endpoint for country stats print(df.loc[0:5, &#39;country_name&#39;:&#39;deaths&#39;]) # show row 0 through 5 and columns country_name through deaths fetch() . country_name cases deaths 0 USA 82,649,779 1,018,316 1 India 43,057,545 522,193 2 Brazil 30,345,654 662,663 3 France 28,244,977 145,020 4 Germany 24,109,433 134,624 5 UK 21,933,206 173,352 . Hacks . Early Seed award . Add this Blog to you own Blogging site. | Have all lecture files saved to your files directory before Tech Talk starts. Have data.csv open in vscode. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In blog add College Board practice problems for 2.3. | . The next 4 weeks, Teachers want you to improve your understanding of data. Look at the blog and others on Unit 2. Your intention is to find some things to differentiate your individual College Board project. . Create or Find your own dataset. The suggestion is to use a JSON file, integrating with your PBL project would be Fambulous. | . When choosing a data set, think about the following:- Does it have a good sample size? - Is there bias in the data? - Does the data set need to be cleaned? - What is the purpose of the data set? - ... . Continue this Blog using Pandas extract info from that dataset (ex. max, min, mean, median, mode, etc.) | . Hack Helpers . Here is how Mort started on this assignment by asking ChatGPT ... Regarding Python Pandas, what are some data sets that would be good for learning Pandas? . There are many data sets that are suitable for learning pandas, depending on your interests and the skills you want to develop. Here are some suggestions:- Titanic Dataset: This is a classic dataset for data analysis and machine learning, and is often used as an introduction to pandas. The dataset contains information about passengers on the Titanic, including their demographics, ticket class, and survival status. . Iris Dataset: This is another classic dataset that is often used in machine learning and data analysis courses. The dataset contains information about iris flowers, including their sepal length, sepal width, petal length, and petal width. . | NBA Player Stats: This dataset contains information about NBA players, including their stats for various games, their positions, and their salaries. It is a great dataset for learning how to clean and manipulate data using pandas. . | Housing Prices Dataset: This dataset contains information about housing prices in a particular city or region, including variables such as the number of bedrooms, square footage, and price. It is a great dataset for learning how to manipulate and analyze numerical data using pandas. . | COVID-19 Dataset: This dataset contains information about the COVID-19 pandemic, including the number of cases, deaths, and recoveries in various countries and regions. It is a great dataset for learning how to manipulate and analyze time-series data using pandas. . | World Bank Dataset: This dataset contains information about economic indicators from various countries, such as GDP, population, and poverty rates. It is a great dataset for learning how to manipulate and analyze large datasets using pandas. . | . | These are just a few examples of the many datasets that are suitable for learning pandas. The best dataset for you will depend on your interests and the specific skills you want to develop. . Follow up question, &quot;where can I find Titanic data set?&quot; . | The Titanic dataset is a popular dataset for data analysis and machine learning, and it can be found on various websites and data repositories. Here are a few places where you can find the Titanic dataset:- Kaggle: The Titanic dataset is available on Kaggle, which is a popular platform for data scientists and machine learning enthusiasts. You can download the dataset from the Kaggle website after creating an account. . UCI Machine Learning Repository: The Titanic dataset is also available on the UCI Machine Learning Repository, which is a collection of datasets that are commonly used for machine learning research. You can download the dataset from the UCI Machine Learning Repository website. . | Seaborn library: If you have the Seaborn library installed in your Python environment, you can load the Titanic dataset directly from the library using the following code: . import seaborn as sns titanic_data = sns.load_dataset(&#39;titanic&#39;) . | . | . Titanic Data . Look at a sample of data. . import seaborn as sns # Load the titanic dataset titanic_data = sns.load_dataset(&#39;titanic&#39;) print(&quot;Titanic Data&quot;) print(titanic_data.columns) # titanic data set print(titanic_data[[&#39;survived&#39;,&#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;class&#39;, &#39;fare&#39;, &#39;embark_town&#39;]]) # look at selected columns . Titanic Data Index([&#39;survived&#39;, &#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;fare&#39;, &#39;embarked&#39;, &#39;class&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;deck&#39;, &#39;embark_town&#39;, &#39;alive&#39;, &#39;alone&#39;], dtype=&#39;object&#39;) survived pclass sex age sibsp parch class fare 0 0 3 male 22.0 1 0 Third 7.2500 1 1 1 female 38.0 1 0 First 71.2833 2 1 3 female 26.0 0 0 Third 7.9250 3 1 1 female 35.0 1 0 First 53.1000 4 0 3 male 35.0 0 0 Third 8.0500 .. ... ... ... ... ... ... ... ... 886 0 2 male 27.0 0 0 Second 13.0000 887 1 1 female 19.0 0 0 First 30.0000 888 0 3 female NaN 1 2 Third 23.4500 889 1 1 male 26.0 0 0 First 30.0000 890 0 3 male 32.0 0 0 Third 7.7500 embark_town 0 Southampton 1 Cherbourg 2 Southampton 3 Southampton 4 Southampton .. ... 886 Southampton 887 Southampton 888 Southampton 889 Cherbourg 890 Queenstown [891 rows x 9 columns] . Use Pandas to clean the data. Most analysis, like Machine Learning or even Pandas in general like data to be in standardized format. This is called &#39;Training&#39; or &#39;Cleaning&#39; data. . # Preprocess the data from sklearn.preprocessing import OneHotEncoder td = titanic_data td.drop([&#39;alive&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;class&#39;, &#39;embark_town&#39;, &#39;deck&#39;], axis=1, inplace=True) td.dropna(inplace=True) td[&#39;sex&#39;] = td[&#39;sex&#39;].apply(lambda x: 1 if x == &#39;male&#39; else 0) td[&#39;alone&#39;] = td[&#39;alone&#39;].apply(lambda x: 1 if x == True else 0) # Encode categorical variables enc = OneHotEncoder(handle_unknown=&#39;ignore&#39;) enc.fit(td[[&#39;embarked&#39;]]) onehot = enc.transform(td[[&#39;embarked&#39;]]).toarray() cols = [&#39;embarked_&#39; + val for val in enc.categories_[0]] td[cols] = pd.DataFrame(onehot) td.drop([&#39;embarked&#39;], axis=1, inplace=True) td.dropna(inplace=True) print(td) . survived pclass sex age sibsp parch fare alone embarked_C 0 0 3 1 22.0 1 0 7.2500 0 0.0 1 1 1 0 38.0 1 0 71.2833 0 1.0 2 1 3 0 26.0 0 0 7.9250 1 0.0 3 1 1 0 35.0 1 0 53.1000 0 0.0 4 0 3 1 35.0 0 0 8.0500 1 0.0 .. ... ... ... ... ... ... ... ... ... 705 0 2 1 39.0 0 0 26.0000 1 0.0 706 1 2 0 45.0 0 0 13.5000 1 0.0 707 1 1 1 42.0 0 0 26.2875 1 0.0 708 1 1 0 22.0 0 0 151.5500 1 0.0 710 1 1 0 24.0 0 0 49.5042 1 1.0 embarked_Q embarked_S 0 0.0 1.0 1 0.0 0.0 2 0.0 1.0 3 0.0 1.0 4 0.0 1.0 .. ... ... 705 0.0 1.0 706 0.0 1.0 707 1.0 0.0 708 0.0 1.0 710 0.0 0.0 [564 rows x 11 columns] . The result of &#39;Training&#39; data is making it easier to analyze or make conclusions. In looking at the Titanic, as you clean you would probably want to make assumptions on likely chance of survival. . This would involve analyzing various factors (such as age, gender, class, etc.) that may have affected a person&#39;s chances of survival, and using that information to make predictions about whether an individual would have survived or not. . Data description:- Survival - Survival (0 = No; 1 = Yes). Not included in test.csv file. - Pclass - Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd) . Name - Name | Sex - Sex | Age - Age | Sibsp - Number of Siblings/Spouses Aboard | Parch - Number of Parents/Children Aboard | Ticket - Ticket Number | Fare - Passenger Fare | Cabin - Cabin | Embarked - Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton) | . | Perished Mean/Average . | . print(titanic_data.query(&quot;survived == 0&quot;).mean()) . survived 0.000000 pclass 2.464072 sex 0.844311 age 31.073353 sibsp 0.562874 parch 0.398204 fare 24.835902 alone 0.616766 embarked_C 0.185629 embarked_Q 0.038922 embarked_S 0.775449 dtype: float64 . Survived Mean/Average | . print(td.query(&quot;survived == 1&quot;).mean()) . survived 1.000000 pclass 1.878261 sex 0.326087 age 28.481522 sibsp 0.504348 parch 0.508696 fare 50.188806 alone 0.456522 embarked_C 0.152174 embarked_Q 0.034783 embarked_S 0.813043 dtype: float64 . Survived Max and Min Stats . print(td.query(&quot;survived == 1&quot;).max()) print(td.query(&quot;survived == 1&quot;).min()) . survived 1.0000 pclass 3.0000 sex 1.0000 age 80.0000 sibsp 4.0000 parch 5.0000 fare 512.3292 alone 1.0000 embarked_C 1.0000 embarked_Q 1.0000 embarked_S 1.0000 dtype: float64 survived 1.00 pclass 1.00 sex 0.00 age 0.75 sibsp 0.00 parch 0.00 fare 0.00 alone 0.00 embarked_C 0.00 embarked_Q 0.00 embarked_S 0.00 dtype: float64 . Machine Learning . From Tutorials Point%20is,a%20consistence%20interface%20in%20Python). Scikit-learn (Sklearn) is the most useful and robust library for machine learning in Python. It provides a selection of efficient tools for machine learning and statistical modeling including classification, regression, clustering and dimensionality reduction via a consistence interface in Python.&gt; Description from ChatGPT. The Titanic dataset is a popular dataset for data analysis and machine learning. In the context of machine learning, accuracy refers to the percentage of correctly classified instances in a set of predictions. In this case, the testing data is a subset of the original Titanic dataset that the decision tree model has not seen during training......After training the decision tree model on the training data, we can evaluate its performance on the testing data by making predictions on the testing data and comparing them to the actual outcomes. The accuracy of the decision tree classifier on the testing data tells us how well the model generalizes to new data that it hasn&#39;t seen before......For example, if the accuracy of the decision tree classifier on the testing data is 0.8 (or 80%), this means that 80% of the predictions made by the model on the testing data were correct....Chance of survival could be done using various machine learning techniques, including decision trees, logistic regression, or support vector machines, among others. . Code Below prepares data for further analysis and provides an Accuracy. IMO, you would insert a new passenger and predict survival. Datasets could be used on various factors like prediction if a player will hit a Home Run, or a Stock will go up or down. Decision Trees, prediction by a piecewise constant approximation. - Logistic Regression, the probabilities describing the possible outcomes. | . | . from sklearn.model_selection import train_test_split from sklearn.tree import DecisionTreeClassifier from sklearn.linear_model import LogisticRegression from sklearn.metrics import accuracy_score # Split arrays or matrices into random train and test subsets. X = td.drop(&#39;survived&#39;, axis=1) y = td[&#39;survived&#39;] X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42) # Train a decision tree classifier dt = DecisionTreeClassifier() dt.fit(X_train, y_train) # Test the model y_pred = dt.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;DecisionTreeClassifier Accuracy:&#39;, accuracy) # Train a logistic regression model logreg = LogisticRegression() logreg.fit(X_train, y_train) # Test the model y_pred = logreg.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;LogisticRegression Accuracy:&#39;, accuracy) . DecisionTreeClassifier Accuracy: 0.7705882352941177 LogisticRegression Accuracy: 0.788235294117647 . /home/orlando-c/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1): STOP: TOTAL NO. of ITERATIONS REACHED LIMIT. Increase the number of iterations (max_iter) or scale the data as shown in: https://scikit-learn.org/stable/modules/preprocessing.html Please also refer to the documentation for alternative solver options: https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression n_iter_i = _check_optimize_result( . df = pd.read_json(&#39;files/items.json&#39;) print(df) . id displayName name stackSize 0 1 Stone stone 64 1 2 Grass Block grass 64 2 3 Dirt dirt 64 3 4 Cobblestone cobblestone 64 4 5 Wooden Planks planks 64 5 6 Sapling sapling 64 6 7 Bedrock bedrock 64 7 12 Sand sand 64 8 13 Gravel gravel 64 --First 10 id displayName name stackSize 0 1 Stone stone 64 1 2 Grass Block grass 64 2 3 Dirt dirt 64 3 4 Cobblestone cobblestone 64 4 5 Wooden Planks planks 64 5 6 Sapling sapling 64 6 7 Bedrock bedrock 64 7 12 Sand sand 64 8 13 Gravel gravel 64 --Last 10 id displayName name stackSize 0 1 Stone stone 64 1 2 Grass Block grass 64 2 3 Dirt dirt 64 3 4 Cobblestone cobblestone 64 4 5 Wooden Planks planks 64 5 6 Sapling sapling 64 6 7 Bedrock bedrock 64 7 12 Sand sand 64 8 13 Gravel gravel 64 . print(&quot;--Duration Top 10&quot;) print(df.head(10)) print(&quot;--Duration Bottom 10&quot;) print(df.tail(10)) . --Duration Top 10 id displayName name stackSize 0 1 Stone stone 64 1 2 Grass Block grass 64 2 3 Dirt dirt 64 3 4 Cobblestone cobblestone 64 4 5 Wooden Planks planks 64 5 6 Sapling sapling 64 6 7 Bedrock bedrock 64 7 12 Sand sand 64 8 13 Gravel gravel 64 --Duration Bottom 10 id displayName name stackSize 0 1 Stone stone 64 1 2 Grass Block grass 64 2 3 Dirt dirt 64 3 4 Cobblestone cobblestone 64 4 5 Wooden Planks planks 64 5 6 Sapling sapling 64 6 7 Bedrock bedrock 64 7 12 Sand sand 64 8 13 Gravel gravel 64 . print(df[df.id == df.id.max()]) print() print(df[df.id == df.id.min()]) . id displayName name stackSize 8 13 Gravel gravel 64 id displayName name stackSize 0 1 Stone stone 64 .",
            "url": "https://orlando-c.github.io/que-pro/2023/03/13/AP-unit2-3.html",
            "relUrl": "/2023/03/13/AP-unit2-3.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "Unit 2.2 Data Compression, Images",
            "content": "Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. - Clouds Impression . Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab All file types have different properties such as what information is retained when data is compressed/lost | . | Size, height and width, number of pixels The # of pixels withn an image usualy decreases by 4x of that new screen (for example, compressing a 1024x1024 image would result in a 512x512 or 256x256) | . | Visual perception, lossy compression Lossy compression is information that can get lost easy due to its high quality when getting compressed | . | . Python Libraries and Concepts used for Jupyter and Files/Directories . Introduction to displaying images in Jupyter notebook . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files? cd(change directory) is to select directory and ls(list) can be used to see all files in a directory | . | What are the command you use in Windows terminal to access files? Same as above | . | What are some of the major differences? I normally use Windows so there is no difference for me when using machines that use linux or windows language. I can see this being an issue when working pimarily from IOS and not being able to translate your commands to wsl or windows. | . | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? The code needs to know where to look for the requested data | . | How does the meta data source and label relate to Unit 5 topics? I feel like this relates to the way how you need to access internet the same way others need to access the internet and only you can help give access to both | . | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? IPython is a command shell for interactive computing in multiple programming languages, originally developed for the Python programming language, that offers introspection, rich media, shell syntax, tab completion, and history. | . | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Monkey&quot;, &#39;file&#39;: &quot;smileyx2.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}]) image_display(green_square) # display default images from image_data() default_images = image_data() image_display(default_images) . Reading and Encoding Images (2 implementations follow) . PIL (Python Image Library) . Pillow or PIL provides the ability to work with images in Python. Geeks for Geeks shows some ideas on working with images. . base64 . Image formats (JPG, PNG) are often called *Binary File formats, it is difficult to pass these over HTTP. Thus, base64 converts binary encoded data (8-bit, ASCII/Unicode) into a text encoded scheme (24 bits, 6-bit Base64 digits). Thus base64 is used to transport and embed binary images into textual assets such as HTML and CSS.- How is Base64 similar or different to Binary and Hexadecimal? . - Base64 is another form factor of storage . Translate first 3 letters of your name to Base64. T3J | . | . numpy . Numpy is described as &quot;The fundamental package for scientific computing with Python&quot;. In the Image Lab, a Numpy array is created from the image data in order to simplify access and change to the RGB values of the pixels, converting pixels to grey scale. . io, BytesIO . Input and Output (I/O) is a fundamental of all Computer Programming. Input/output (I/O) buffering is a technique used to optimize I/O operations. In large quantities of data, how many frames of input the server currently has queued is the buffer. In this example, there is a very large picture that lags. . Where have you been a consumer of buffering? Loading websites on the crappy school wifi | . | From your consumer experience, what effects have you experienced from buffering? Long wait times when loading websites on the crappy school wifi | . | How do these effects apply to images? The ong wait times are caused by the crappy school wifi attempting to load the images which are usually the culprit of long loading times | . | . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed? Yes, call image then alter image then print image | . | Describe Grey Scale algorithm in English or Pseudo code? Call image from directory -&gt; Convert to Base64 -&gt; Change color -&gt; Print image | . | Describe scale image? What is before and after on pixels in three images? Scale image expands an image, which could result in lower resolution pictures | . | Is scale image a type of compression? If so, line it up with College Board terms described? Scale image is not because the image would still be the same, but is just expanded without taking any actual data up. | . | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Monkey&quot;, &#39;file&#39;: &quot;smileyx2.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 600 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_red(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;red_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;red_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;red_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;red_data&#39;]) image[&#39;html_red&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; red image -&quot;) image_management_add_html_red(image) display(HTML(image[&#39;html_red&#39;])) print() . - meta data -- Green Square Internet PNG RGBA Original size: (16, 16) Scaled size: (600, 600) -- original image -- . red image - . - meta data -- Clouds Impression Peter Carolin PNG RGBA Original size: (320, 234) Scaled size: (600, 438) -- original image -- . red image - . - meta data -- Lassen Volcano Peter Carolin JPEG RGB Original size: (2792, 2094) Scaled size: (600, 450) -- original image -- . red image - . - meta data -- Monkey Peter Carolin JPEG RGB Original size: (750, 1000) Scaled size: (600, 800) -- original image -- . red image - . . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL Grabs image from library | . | numpy Used for mathematical equations | . | base64 Form factor of storage | . | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . - meta data -- Green Square Internet green-square-16.png PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- scaled image -- . grey image . - meta data -- Clouds Impression Peter Carolin clouds-impression.png PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- scaled image -- . grey image . - meta data -- Lassen Volcano Peter Carolin lassen-volcano.jpg JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- scaled image -- . grey image . . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | . .",
            "url": "https://orlando-c.github.io/que-pro/2023/03/13/AP-unit2-2.html",
            "relUrl": "/2023/03/13/AP-unit2-2.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "Unit 2.2 Data Compression, Images",
            "content": "Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. - Clouds Impression . Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab | Size, height and width, number of pixels | Visual perception, lossy compression | . Python Libraries and Concepts used for Jupyter and Files/Directories . Introduction to displaying images in Jupyter notebook . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files? | What are the command you use in Windows terminal to access files? | What are some of the major differences? | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? | How does the meta data source and label relate to Unit 5 topics? | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Monkey&quot;, &#39;file&#39;: &quot;smileyx2.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}]) image_display(green_square) # display default images from image_data() default_images = image_data() image_display(default_images) . Reading and Encoding Images (2 implementations follow) . PIL (Python Image Library) . Pillow or PIL provides the ability to work with images in Python. Geeks for Geeks shows some ideas on working with images. . base64 . Image formats (JPG, PNG) are often called *Binary File formats, it is difficult to pass these over HTTP. Thus, base64 converts binary encoded data (8-bit, ASCII/Unicode) into a text encoded scheme (24 bits, 6-bit Base64 digits). Thus base64 is used to transport and embed binary images into textual assets such as HTML and CSS.- How is Base64 similar or different to Binary and Hexadecimal? . Translate first 3 letters of your name to Base64. | . numpy . Numpy is described as &quot;The fundamental package for scientific computing with Python&quot;. In the Image Lab, a Numpy array is created from the image data in order to simplify access and change to the RGB values of the pixels, converting pixels to grey scale. . io, BytesIO . Input and Output (I/O) is a fundamental of all Computer Programming. Input/output (I/O) buffering is a technique used to optimize I/O operations. In large quantities of data, how many frames of input the server currently has queued is the buffer. In this example, there is a very large picture that lags. . Where have you been a consumer of buffering? | From your consumer experience, what effects have you experienced from buffering? | How do these effects apply to images? | . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed? | Describe Grey Scale algorithm in English or Pseudo code? | Describe scale image? What is before and after on pixels in three images? | Is scale image a type of compression? If so, line it up with College Board terms described? | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Monkey&quot;, &#39;file&#39;: &quot;smileyx2.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_grey(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;gray_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;gray_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; grey image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) print() . - meta data -- Green Square Internet PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- original image -- . grey image - . - meta data -- Clouds Impression Peter Carolin PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- original image -- . grey image - . - meta data -- Lassen Volcano Peter Carolin JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- original image -- . grey image - . - meta data -- Monkey Peter Carolin JPEG RGB Original size: (750, 1000) Scaled size: (320, 426) -- original image -- . grey image - . . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL | numpy | base64 | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . - meta data -- Green Square Internet green-square-16.png PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- scaled image -- . grey image . - meta data -- Clouds Impression Peter Carolin clouds-impression.png PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- scaled image -- . grey image . - meta data -- Lassen Volcano Peter Carolin lassen-volcano.jpg JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- scaled image -- . grey image . . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | . .",
            "url": "https://orlando-c.github.io/que-pro/2023/03/07/AP-unit2-2.html",
            "relUrl": "/2023/03/07/AP-unit2-2.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "N@TM",
            "content": "",
            "url": "https://orlando-c.github.io/que-pro/2023/02/28/NATMpt2.html",
            "relUrl": "/2023/02/28/NATMpt2.html",
            "date": " • Feb 28, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "5.1 to 5.6 big ideas",
            "content": "5.1 . In class discussion . ChatGPT Tool or cheating? | Innacurate information | . | . Domapine . Personal input I believe that the result of being happy can&#39;t come from a place full of nagativity and hate (aka social media). Most and if not all social medias are built arount the sole concept of being better or feeling better than other people on the platform. Likes and follows may play a contributing factor but it&#39;s more about how this affects your personal body image and mental health. I get tired and bored everyday looking at my cell phone, not getting work done, and going to sleep at midnight knowing that I stayed up so late because of my phone. I use TikTok, Instagram, and Youtube as primary sources of consuming media, infinite possibilities, but I never feel as happy as when I look to the stars at night and wonder if we can ever reach there, as when I come home from a long day of schoo; and think to myself, is it all worth it and realizing it will be, as when I hang out with friends that will lead me the right path and are the greatest friends I could ever have and will have. That is the real issue with social media, a drain of content that consumes you with it, turning you into a mindless consumer, stuck in media limbo. If my future self or anyone is reading this, when you go home, take a walk or lay in your bed, close your eyes, and think to yourself, just you and your thoughts. | . | . Benifits and cons of our project . &quot;The Mountain&quot; choice and text based input game . Pros (self) . I get to learn more about text based input and how to use it | I get to learn more about databases and data management | I can use this project in a portfolio to boost my chances with an application | . | Pros (others) . Entertainment | . | Cons (others) . Distracting | . | . | . Benefits and cons of computing . Streaming Services (Disney+, Netflix, Hulu, HBOMax, Amazon Prime) . Pros . Better accesability and larger variety to shows and movies | Relatively more affordable | . | Cons . Need multiple services depending on what you want to watch | Removed the need for cable | Streaming services gatekeep movies and shows to specific locations | Lack of content | . | . | Video Games . Pros . Relaxation | Production of Dopamine, Seratonin, and Endorphins | Socialize | . | Cons . Addiction | Eye and brain effects | Distracting | . | . | Snapchat . Pros . Socialize | Communication | . | Cons . Affect your self body image | Stalking | Digital footprint | . | . | Phones (Apple, Samsung, Google, OnePlus, Xiaomi) . Pros . Accessability to the internet | Ability to contact others | Revolutionary piece of technology | . | Cons . Incredibly distracting | Addictive | . | My personal input . While phones have proven to become necessary in todays society, they have also become a major risk in the health and danger aspect of things. Nearly 15% of car crashes involve someone who was texting or using hands off car technology to manage their phone which is still incredibly distractiong. Phones also have an effect on mental health such as the mind warping reality of social media and access to the entire internet may lead to some unprecidented results. Phones are also gatekeeped, meaning the more capible phones with better technology costs practically 33% of todays average paycheck. Many dont have access to cellular data or phones at all which leads to our next discussion. | . | . | . 5.2 . How can I empower myself in a digital world? . Someone may empower themselves in a digital world by maintaning a balance between life and technology as well as speaking out about others who may be harassing or being harassed. At Del Norte I could involve myself more into other activities to take my mind off the negativity of society. | . How can I help others empower themselves? . Many people today encourage others to speak out and let us help them in a time and society where many may need help. A lot of mentall illness, depression, or other life atering events may occur due to those who are suffering silently and a good way to reach out to them or for them to speak out is through social media or means of messaging them. | . Gatekeeping of technology . I do believe that technology is being gatekeeped by large corporations such as Google and Apple however is not a problem at Del Norte because our school provides resources for many who may be in financial struggle or are in need of the technology. Unfortunately, other school districts dont have acess to many resources and this creates a divide in our communitites and society. | . Answer with an opinion and learnings so far this year: What are pros/cons on internet blockers at router and lack of admin password on lab machines at school? . I am a advocate on the removal of some, if not all restrctions on the school wifi. There have been many moments where a resource for AP world history or spanish class amy be blocked due to the districhs internet blocker. Our school invades our private property as well, installing the same internet protection services on your PERSONAL COMPUTER. Even being signed in onto your laptop with your chool account allows them to see your search history, downloaded or uploaded files on your internet provider, and is generally a massive invasion of privacy. The only good thing I can see coming from the internet blocker is so students dont end up searching lewd things on the internet at school or home which is rendered useless due to many being able to do the same thing on their phone (that is bad dont do this just used this as an example). | . What concerns do you have personally about the digital divide? . My concern is that without the right resources, the digital divide between communities and societies will become much larger. The average IQ of a person in an area where they have access to a wider and better variety of learning resouces will be higher than that of a person who does not have a laptop nor phone. I believe that we should provide to thse who are unable to provide resources for the future generation whom are supposed to better the world. | . 5.3 . The use of Facebook is primarily among older generations, whereas TikTok is more popular among younger users. I don&#39;t see this as harmful as people from different age groups have different interests and preferences, and having separate platforms for them is ideal. . | Regarding virtual assistants having female voices, I think it was not a deliberate decision. Companies probably didn&#39;t intend to use a specific gender for these AI systems. . | One example of an algorithm that influences our decisions is Google. I came across a video which showed how Google uses the device&#39;s microphone to listen and deliver targeted ads based on what it hears. . | Regarding the video &quot;HP computers are racist,&quot; I believe it&#39;s a mistake due to insufficient testing. If the technology had been tested on a wider range of skin tones, the problem could have been avoided before it was released. This highlights the significance of conducting thorough testing. . | . 5.4 . The Computer Science Principles (CSP) course has approximately 150 students. A potential crowdsourcing idea for this environment could be to gather ratings (on a scale of 1 to 10) of the difficulty and enjoyment levels of other courses in comparison to CSP. This information could then be used to make recommendations to specific students. . | As for crowdsourcing at Del Norte, collecting input from as many students as possible, not only from Del Norte but also from other schools, would make the data and recommendations for CSP more reliable. . | Data that could be captured at N@tM (Night at the Museum) to make the evening more interesting could include the scores of the Minesweeper game. This data could then be used to adjust the difficulty level of the game to achieve the optimal level of enjoyment for participants. The data could also be presented to teachers during final exams week to demonstrate the success of the event. . | . 5.5 . When creating a GitHub repository, one is prompted to select a license type. It&#39;s important to review the available license options in relation to the Tech Talk and make notes in a personal blog. . | One example of a free-use license is the Creative Commons Zero v1.0 Universal. Another option is the MIT license, which allows for free use while giving credit to the author. The Open Source GPL License permits use but disallows others from releasing their own versions. . | In your blog, summarize the discussions and personal insights on software licenses, digital rights, and other legal and ethical considerations from the College Board topic. There are various opinions on the issue of copyright. Some individuals or companies may prefer to restrict others from using their work without permission to avoid financial loss. On the contrary, some smaller creators may not want to enforce copyright laws as it can help them gain exposure. Lastly, some argue that copyright is largely ineffective as people always find ways to duplicate content. . | For my personal blog and team repositories for the CPT project, I have selected the Creative Commons Zero v1.0 Universal license. My intention is not to make a profit from the content in my repository and I hope that it can inspire other CSP students. I accomplished this by removing the previous LICENSE file and creating a new one with the correct license. It&#39;s important to also note that the frontend repository, as it is built on GitHub pages, may come with its own license and restrictions. I have documented the team&#39;s license choice and the process of updating it in my blog. . | . 5.6 . In CompSci Principles, what Personal Identifiable Information (PII) have you encountered in a project? . | During my time in CSP, I have encountered PII such as name, age, date of birth, and graduation year from API activity. . | How do you feel about PII and your own exposure to it? . | In my opinion, having a safe amount of PII on the internet can be beneficial, such as with LinkedIn information that can help connect with potential employers. However, information like credit card numbers and passwords can be harmful if they fall into the wrong hands. . | Can you describe what makes a good or bad password and an additional step for authentication? . | Good passwords are complex, using a mix of uppercase and lowercase letters, numbers, and symbols, making it more difficult for a brute force attack. Two-factor authentication is also a helpful method, which involves verifying a login from an external source, such as through email or a code. . | Can you explain the difference between Symmetric and Asymmetric encryption? . | Symmetric encryption uses a single key for both encryption and decryption, while asymmetric encryption uses two keys, a public key for encryption and a private key for decryption. . | Can you provide an example of encryption used in AWS deployment? . | One instance of encryption used in AWS deployment was the creation of public and private keys to ensure confidentiality and security. . | Can you share a personal experience with a phishing scheme or describe other phishing techniques? . | I once witnessed my mother click on a malicious link that promised free watches, which was actually a phishing attempt. Thankfully, my siblings and I caught the mistake before she could enter any sensitive information like her credit card number. . | .",
            "url": "https://orlando-c.github.io/que-pro/2023/02/12/.1-and-5.2-big-ideas.html",
            "relUrl": "/2023/02/12/.1-and-5.2-big-ideas.html",
            "date": " • Feb 12, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "MCQ 2",
            "content": "Wrong Section Skill Reason Mistake . Q1 | 1.2 | 4.A | System of equations wrong, Result is multiplied by 3, 3 different intervals | Math conducted is wrong | . Q7 | 1.3 | 4.A | Unnecessary requirements in answer | Misinterpretation | . Q14 | 1.4 | 4.C | 7 provides correct answer, 6 and 8 both fall into incorrect categories | Math conducted is wrong | . Q16 | 4.1 | 5.A | Message doesn&#39;t have to be sent in order of packets | Unknown info | . Q20 | 2.1 | 1.D | There are enough 4bit combinations to store 8 directional data | Unknown info | . Q23 | 2.1 | 3.C | Samples are taken throughout his race and stored as data rather than selected | Thought process wrong | . Q24 | 2.1 | 2.B | Didn&#39;t know binary systems | Unknown info | . Q29 | 3.2 | 3.C | Lists can be updates easily (similar to being able to add user data and input easily) | Misinterpretation | . Q30 | 3.2 | 3.C | Keeping numbers in a list allow for code to just go through the line and determine | . Q31 | 3.2 | 3.A | myWord determines which part of the list, myChar determines character | Thought process wrong | . Q32 | 3.2 | 3.B | yourlist now prints mylist | Thought process wrong | . Q35 | 3.6 | 2.B | Forgot one answer | Missed input | . Q36 | 3.10 | 2.B | Multiply i by 2 to always get an even number | Math conducted is wrong | . Q41 | 3.1 | 4.B | R is 20, P &lt;- R | Thought process wrong | . Q43 | 3.8 | 4.B | Incorrect system of operations | Math conducted is wrong | . Q46 | 3.1 | 4.B | In the end, both outputs are set to true | Misinterpretation | . Q49 | 3.4 | 4.B | (reverse(word), word)(reverse(on), on)(noon) | Misinterpretation | .",
            "url": "https://orlando-c.github.io/que-pro/2023/01/30/MCQ-test-corrections.html",
            "relUrl": "/2023/01/30/MCQ-test-corrections.html",
            "date": " • Jan 30, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "CB outline",
            "content": "CB &quot;Pre-View&quot; . Follow CB regulations and guide to achieve a full score | . Project Work . For my project, I will be making an adventure game that uses player input to interpert their result. Alongside this I am working with backend to set up the databases for the games and login page. Another responsibility for my part is setting up the flask page onto a server so anyone can access it. | . Code Plan . My code plan is to take their input and make a program that will produce a result that is related to that input (ie the game says &quot;you are lost in the forest&quot; and you respond with &quot;move forward,&quot; the game code will try to find the closest result to what you responded with like &quot;you have found your way out of the forest&quot;) | . Video Plan . In the video I will demonstrate the game I have made which would include text entry as its main focus of input. I will go through multiple iterations of the game to demonstrate the varying options created by an API, AI, or program that I will use to generate multiple responses. | .",
            "url": "https://orlando-c.github.io/que-pro/2023/01/30/CB.html",
            "relUrl": "/2023/01/30/CB.html",
            "date": " • Jan 30, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "APCSP Performance Task Grading",
            "content": "Submission 1 . Reporting Category Student Score College Board Score Comments . Program Purpose and Function | + | x | = | . Data Abstraction | + | x | = | . Managing Complexity | + | x | = | . Procedural Abstraction | + | x | = | . Algorithm Implementation | + | x | = | . Testing | + | x | = | . Submission 2 . Reporting Category Student Score 6/6 Comments . Program Purpose and Function | 1 | The program is a game that uses data and iterations to determine future moves of an object | . Data Abstraction | 1 | Data is stored for the second process of the game, the game uses data provided to start game, process next move in the “game of life” and start another game | . Managing Complexity | 1 | Code store’s information efficiently and effectively, keeping the first iteration of data then reversing it before restarting the game | . Procedural Abstraction | 1 | Shows the effect and procedure of program and describes the process and purpose of the program with parameters | . Algorithm Implementation | 1 | User presents examples of program running through iterations and changes in their game. Code provided shows the implementation of algorithm iteration | . Testing | 1 | Program is proficiently projected through the video and provides a written explanation of the program and how user expects it to run versus with the result, multiple iterations of testing are ran | . Week 2 of submission grading . Submission 3 . Reporting Category Student Score Comments . Program Purpose and Function | 1 | Displays all information to understand purpose and dunction of the program and presents multiple examples of working code | . Data Abstraction | 0 | The game saves data for the second phase of the game, using this data to initiate the process, determine the next move, and restart the game however is flawed and confusing to the regular eye | . Managing Complexity | 0 | Code doesnt store information efficiently and effectively, keeping the first iteration of data then reversing it before restarting the program however is messy and sometimes flawed | . Procedural Abstraction | 0 | Does not show the effect and procedure of program and fails to describe the process and purpose of the program with parameters | . Algorithm Implementation | 1 | The user demonstrates how the program was used in different stages of their game development, and the code is provided to illustrate the use of the algorithm. | . Testing | 1 | The program is explained through a video and a written explanation of how it should function. The user&#39;s expectations are compared to the results after multiple test runs. | . Submission 4 . Reporting Category Student Score Comments . Program Purpose and Function | 1 | The program&#39;s goals and functionality are clearly explained and examples of working code are provided to better understand how it operates. | . Data Abstraction | 1 | The game saves data for the second phase of the game, using this data to initiate the process, determine the next move, and restart the game | . Managing Complexity | 1 | The code is designed to store data in an efficient and effective manner, keeping the original version of the data before reversing it and restarting the program. | . Procedural Abstraction | 1 | The program&#39;s function and methodology is demonstrated, including an explanation of the program&#39;s goals and the parameters used in its operation. | . Algorithm Implementation | 1 | The user demonstrates the program in action, showing how it&#39;s been modified and improved over time, using examples from their game. The code for the iterative algorithm is also provided. | . Testing | 1 | The program is shown in a video and described in writing. We test it multiple times and compare the results to what the user expected. | . Submission 5 . Reporting Category Student Score Comments . Program Purpose and Function | 1 | The program&#39;s intended outcomes and capabilities are explained in a clear and concise manner, and concrete examples of working code are provided to aid in the comprehension of its functionality. | . Data Abstraction | 0 | The code fails to store data efficiently for the second phase of the program, making it difficult to utilize this information to initiate the process, make decisions and restart the program smoothly. | . Managing Complexity | 0 | The code is poorly designed and fails to store data in an efficient and effective manner, it doesn&#39;t retain the original version of the data before reversing it and restoring the program is a hassle for further use. | . Procedural Abstraction | 1 | A demonstration of the program is provided, along with a clear explanation of its purpose, methodology and the parameters used in its operation. | . Algorithm Implementation | 0 | The user&#39;s demonstration of the program is inadequate and fails to clearly show how it has been modified and improved over time, the examples provided from their game are not clear. Furthermore, the provided code for the iterative algorithm is confusing and not helpful. | . Testing | 0 | The program is only shown in a video and described in writing, lacking hands-on demonstration. Despite testing it multiple times, the results do not meet the user&#39;s expectations. | . Submission 6 . Reporting Category Student Score Comments . Program Purpose and Function | 1 | The program&#39;s objectives and capabilities are clearly outlined and accompanied by working code examples, making it easy to grasp the program&#39;s functionality and how it works. | . Data Abstraction | 1 | The game efficiently stores data for the second phase of the program, utilizing this information to initiate the process, make decisions and seamlessly restart the program. | . Managing Complexity | 1 | The code is designed to store data in an efficient and effective manner, keeping the original version of the data before reversing it and restoring the program for further use. | . Procedural Abstraction | 1 | The program&#39;s function and methodology is clearly and effectively demonstrated, with a thorough explanation of its goals and the parameters used to achieve them, making it easy to understand the program&#39;s operation. | . Algorithm Implementation | 1 | The user illustrates the program&#39;s evolution by providing examples of how it was used in their game development, showing how it was modified and improved over time. The code for the iterative algorithm is also made available for reference. | . Testing | 0 | The program is inadequately demonstrated through a video and poorly explained in writing. Despite multiple testing, the results fail to meet the user&#39;s expectations. | .",
            "url": "https://orlando-c.github.io/que-pro/2023/01/13/Performance-Task-Grading.html",
            "relUrl": "/2023/01/13/Performance-Task-Grading.html",
            "date": " • Jan 13, 2023"
        }
        
    
  
    
        ,"post14": {
            "title": "Model and Object-Oriented Programming",
            "content": "Class and Object Terms . The foundations of Object-Oriented Programming is defining a Class . In Object-Oriented Programming (OOP), a class is a blueprint for creating an Object. (a data structure). An Object is used like many other Python variables. | A Class has ... a collection of data, these are called Attributes and in Python are pre-fixed using the keyword self | a collection of Functions/Procedures. These are called *Methods when they exist inside a Class definition. | . | An Object is created from the Class/Template. Characteristics of objects ... an Object is an Instance of the Class/Template | there can be many Objects created from the same Class | each Object contains its own Instance Data | the data is setup by the Constructor, this is the &quot;init&quot; method in a Python class | all methods in the Class/Template become part of the Object, methods are accessed using dot notation (object.method()) | . | A Python Class allow for the definition of @ decorators, these allow access to instance data without the use of functions ... @property decorator (aka getter). This enables developers to reference/get instance data in a shorthand fashion (object.name versus object.get_name()) | @name.setter decorator (aka setter). This enables developers to update/set instance data in a shorthand fashion (object.name = &quot;John&quot; versus object.set_name(&quot;John&quot;)) | observe all instance data (self._name, self.email ...) are prefixed with &quot;&quot;, this convention allows setters and getters to work with more natural variable name (name, email ...) | . | . Class and Object Code . # Werkzeug is a collection of libraries that can be used to create a WSGI (Web Server Gateway Interface) # A gateway in necessary as a web server cannot communicate directly with Python. # In this case, imports are focused on generating hash code to protect passwords. from werkzeug.security import generate_password_hash, check_password_hash import json # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using str(object) in human readable form, uses getter def __str__(self): return f&#39;name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;&#39; # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password})&#39; # tester method to print users def tester(users, uid, psw): result = None for user in users: # test for match in database if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result # place tester code inside of special if! This allows include without tester running if __name__ == &quot;__main__&quot;: # define user objects u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;) u2 = User(name=&#39;Nicholas Tesla&#39;, uid=&#39;nick&#39;, password=&#39;123nick&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;eli&#39;, password=&#39;123eli&#39;) u5 = User(name=&#39;Hedy Lemarr&#39;, uid=&#39;hedy&#39;, password=&#39;123hedy&#39;) # put user objects in list for convenience users = [u1, u2, u3, u4, u5] # Find user print(&quot;Test 1, find user 3&quot;) u = tester(users, u3.uid, &quot;123lex&quot;) # Change user print(&quot;Test 2, change user 3&quot;) u.name = &quot;John Mortensen&quot; u.uid = &quot;jm1021&quot; u.set_password(&quot;123qwerty&quot;) u = tester(users, u.uid, &quot;123qwerty&quot;) # Make dictionary &#39;&#39;&#39; The __dict__ in Python represents a dictionary or any mapping object that is used to store the attributes of the object. Every object in Python has an attribute that is denoted by __dict__. Use the json.dumps() method to convert the list of Users to a JSON string. &#39;&#39;&#39; print(&quot;Test 3, make a dictionary&quot;) json_string = json.dumps([user.__dict__ for user in users]) print(json_string) print(&quot;Test 4, make a dictionary&quot;) json_string = json.dumps([vars(user) for user in users]) print(json_string) . Test 1, find user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$nTQ...&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$JPM...&#34; * name: &#34;Alexander Graham Bell&#34;, id: &#34;lex&#34;, psw: &#34;sha256$iHV...&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$US0...&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$2cC...&#34; Test 2, change user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$nTQ...&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$JPM...&#34; * name: &#34;John Mortensen&#34;, id: &#34;jm1021&#34;, psw: &#34;sha256$2I7...&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$US0...&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$2cC...&#34; Test 3, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$nTQxZ9alViZd3WOn$34c90a641520c96e3d91ac148340b8b07d3c0958249dfcfe4a3eb05e2621efef&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$JPMovUtCRid1pCTE$089368f59621e8878ea730e5328bd9fc442f1d63f40d99f52502c059f9921281&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$2I7yhf1jQOPNu2YE$473f9f24b42cbbd52d6fd4effe03b73ba41ff31ea5532940480aadef56b3ce2d&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$US0fsfAaoQix8ido$5b6bac49c74a9fe08b18147a8d0f5c41d7805c42238a9d29dc2e8dbafff8324f&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$2cC6Hp5Z4WcmxpBK$df9ed2dbe43edee11d7dc5101057274b2c47be5db95d6610ab7e4fba2dbf6d17&#34;}] Test 4, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$nTQxZ9alViZd3WOn$34c90a641520c96e3d91ac148340b8b07d3c0958249dfcfe4a3eb05e2621efef&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$JPMovUtCRid1pCTE$089368f59621e8878ea730e5328bd9fc442f1d63f40d99f52502c059f9921281&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$2I7yhf1jQOPNu2YE$473f9f24b42cbbd52d6fd4effe03b73ba41ff31ea5532940480aadef56b3ce2d&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$US0fsfAaoQix8ido$5b6bac49c74a9fe08b18147a8d0f5c41d7805c42238a9d29dc2e8dbafff8324f&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$2cC6Hp5Z4WcmxpBK$df9ed2dbe43edee11d7dc5101057274b2c47be5db95d6610ab7e4fba2dbf6d17&#34;}] . Hacks . Add new attributes/variables to the Class. Make class specific to your CPT work. . Add classOf attribute to define year of graduation Add setter and getter for classOf | . | Add dob attribute to define date of birth This will require investigation into Python datetime objects as shown in example code below | Add setter and getter for dob | . | Add instance variable for age, make sure if dob changes age changes Add getter for age, but don&#39;t add/allow setter for age | . | Update and format tester function to work with changes | . Start a class design for each of your own Full Stack CPT sections of your project . Use new code cell in this notebook | Define init and self attributes | Define setters and getters | Make a tester | . Start Code for Hacks . from datetime import date def calculate_age(born): today = date.today() return today.year - born.year - ((today.month, today.day) &lt; (born.month, born.day)) dob = date(2004, 12, 31) age = calculate_age(dob) print(age) .",
            "url": "https://orlando-c.github.io/que-pro/2023/01/10/PBL-model.html",
            "relUrl": "/2023/01/10/PBL-model.html",
            "date": " • Jan 10, 2023"
        }
        
    
  
    
        ,"post15": {
            "title": "~MY WORLD TIMEZONE API~",
            "content": "earf . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;dec069b877msh0d9d0827664078cp1a18fajsn2afac35ae063&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . import requests url = &quot;https://world-time2.p.rapidapi.com/timezone&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;0317f96beemsh35e5d75a42dbab7p1d5d30jsn35808d9ea4d2&quot;, &quot;X-RapidAPI-Host&quot;: &quot;world-time2.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) import requests url = &quot;https://world-time2.p.rapidapi.com/timezone&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;0317f96beemsh35e5d75a42dbab7p1d5d30jsn35808d9ea4d2&quot;, &quot;X-RapidAPI-Host&quot;: &quot;world-time2.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.json) json = response.json() . [&#34;Africa/Abidjan&#34;,&#34;Africa/Accra&#34;,&#34;Africa/Algiers&#34;,&#34;Africa/Bissau&#34;,&#34;Africa/Cairo&#34;,&#34;Africa/Casablanca&#34;,&#34;Africa/Ceuta&#34;,&#34;Africa/El_Aaiun&#34;,&#34;Africa/Johannesburg&#34;,&#34;Africa/Juba&#34;,&#34;Africa/Khartoum&#34;,&#34;Africa/Lagos&#34;,&#34;Africa/Maputo&#34;,&#34;Africa/Monrovia&#34;,&#34;Africa/Nairobi&#34;,&#34;Africa/Ndjamena&#34;,&#34;Africa/Sao_Tome&#34;,&#34;Africa/Tripoli&#34;,&#34;Africa/Tunis&#34;,&#34;Africa/Windhoek&#34;,&#34;America/Adak&#34;,&#34;America/Anchorage&#34;,&#34;America/Araguaina&#34;,&#34;America/Argentina/Buenos_Aires&#34;,&#34;America/Argentina/Catamarca&#34;,&#34;America/Argentina/Cordoba&#34;,&#34;America/Argentina/Jujuy&#34;,&#34;America/Argentina/La_Rioja&#34;,&#34;America/Argentina/Mendoza&#34;,&#34;America/Argentina/Rio_Gallegos&#34;,&#34;America/Argentina/Salta&#34;,&#34;America/Argentina/San_Juan&#34;,&#34;America/Argentina/San_Luis&#34;,&#34;America/Argentina/Tucuman&#34;,&#34;America/Argentina/Ushuaia&#34;,&#34;America/Asuncion&#34;,&#34;America/Atikokan&#34;,&#34;America/Bahia&#34;,&#34;America/Bahia_Banderas&#34;,&#34;America/Barbados&#34;,&#34;America/Belem&#34;,&#34;America/Belize&#34;,&#34;America/Blanc-Sablon&#34;,&#34;America/Boa_Vista&#34;,&#34;America/Bogota&#34;,&#34;America/Boise&#34;,&#34;America/Cambridge_Bay&#34;,&#34;America/Campo_Grande&#34;,&#34;America/Cancun&#34;,&#34;America/Caracas&#34;,&#34;America/Cayenne&#34;,&#34;America/Chicago&#34;,&#34;America/Chihuahua&#34;,&#34;America/Costa_Rica&#34;,&#34;America/Creston&#34;,&#34;America/Cuiaba&#34;,&#34;America/Curacao&#34;,&#34;America/Danmarkshavn&#34;,&#34;America/Dawson&#34;,&#34;America/Dawson_Creek&#34;,&#34;America/Denver&#34;,&#34;America/Detroit&#34;,&#34;America/Edmonton&#34;,&#34;America/Eirunepe&#34;,&#34;America/El_Salvador&#34;,&#34;America/Fort_Nelson&#34;,&#34;America/Fortaleza&#34;,&#34;America/Glace_Bay&#34;,&#34;America/Goose_Bay&#34;,&#34;America/Grand_Turk&#34;,&#34;America/Guatemala&#34;,&#34;America/Guayaquil&#34;,&#34;America/Guyana&#34;,&#34;America/Halifax&#34;,&#34;America/Havana&#34;,&#34;America/Hermosillo&#34;,&#34;America/Indiana/Indianapolis&#34;,&#34;America/Indiana/Knox&#34;,&#34;America/Indiana/Marengo&#34;,&#34;America/Indiana/Petersburg&#34;,&#34;America/Indiana/Tell_City&#34;,&#34;America/Indiana/Vevay&#34;,&#34;America/Indiana/Vincennes&#34;,&#34;America/Indiana/Winamac&#34;,&#34;America/Inuvik&#34;,&#34;America/Iqaluit&#34;,&#34;America/Jamaica&#34;,&#34;America/Juneau&#34;,&#34;America/Kentucky/Louisville&#34;,&#34;America/Kentucky/Monticello&#34;,&#34;America/La_Paz&#34;,&#34;America/Lima&#34;,&#34;America/Los_Angeles&#34;,&#34;America/Maceio&#34;,&#34;America/Managua&#34;,&#34;America/Manaus&#34;,&#34;America/Martinique&#34;,&#34;America/Matamoros&#34;,&#34;America/Mazatlan&#34;,&#34;America/Menominee&#34;,&#34;America/Merida&#34;,&#34;America/Metlakatla&#34;,&#34;America/Mexico_City&#34;,&#34;America/Miquelon&#34;,&#34;America/Moncton&#34;,&#34;America/Monterrey&#34;,&#34;America/Montevideo&#34;,&#34;America/Nassau&#34;,&#34;America/New_York&#34;,&#34;America/Nipigon&#34;,&#34;America/Nome&#34;,&#34;America/Noronha&#34;,&#34;America/North_Dakota/Beulah&#34;,&#34;America/North_Dakota/Center&#34;,&#34;America/North_Dakota/New_Salem&#34;,&#34;America/Nuuk&#34;,&#34;America/Ojinaga&#34;,&#34;America/Panama&#34;,&#34;America/Pangnirtung&#34;,&#34;America/Paramaribo&#34;,&#34;America/Phoenix&#34;,&#34;America/Port-au-Prince&#34;,&#34;America/Port_of_Spain&#34;,&#34;America/Porto_Velho&#34;,&#34;America/Puerto_Rico&#34;,&#34;America/Punta_Arenas&#34;,&#34;America/Rainy_River&#34;,&#34;America/Rankin_Inlet&#34;,&#34;America/Recife&#34;,&#34;America/Regina&#34;,&#34;America/Resolute&#34;,&#34;America/Rio_Branco&#34;,&#34;America/Santarem&#34;,&#34;America/Santiago&#34;,&#34;America/Santo_Domingo&#34;,&#34;America/Sao_Paulo&#34;,&#34;America/Scoresbysund&#34;,&#34;America/Sitka&#34;,&#34;America/St_Johns&#34;,&#34;America/Swift_Current&#34;,&#34;America/Tegucigalpa&#34;,&#34;America/Thule&#34;,&#34;America/Thunder_Bay&#34;,&#34;America/Tijuana&#34;,&#34;America/Toronto&#34;,&#34;America/Vancouver&#34;,&#34;America/Whitehorse&#34;,&#34;America/Winnipeg&#34;,&#34;America/Yakutat&#34;,&#34;America/Yellowknife&#34;,&#34;Antarctica/Casey&#34;,&#34;Antarctica/Davis&#34;,&#34;Antarctica/DumontDUrville&#34;,&#34;Antarctica/Macquarie&#34;,&#34;Antarctica/Mawson&#34;,&#34;Antarctica/Palmer&#34;,&#34;Antarctica/Rothera&#34;,&#34;Antarctica/Syowa&#34;,&#34;Antarctica/Troll&#34;,&#34;Antarctica/Vostok&#34;,&#34;Asia/Almaty&#34;,&#34;Asia/Amman&#34;,&#34;Asia/Anadyr&#34;,&#34;Asia/Aqtau&#34;,&#34;Asia/Aqtobe&#34;,&#34;Asia/Ashgabat&#34;,&#34;Asia/Atyrau&#34;,&#34;Asia/Baghdad&#34;,&#34;Asia/Baku&#34;,&#34;Asia/Bangkok&#34;,&#34;Asia/Barnaul&#34;,&#34;Asia/Beirut&#34;,&#34;Asia/Bishkek&#34;,&#34;Asia/Brunei&#34;,&#34;Asia/Chita&#34;,&#34;Asia/Choibalsan&#34;,&#34;Asia/Colombo&#34;,&#34;Asia/Damascus&#34;,&#34;Asia/Dhaka&#34;,&#34;Asia/Dili&#34;,&#34;Asia/Dubai&#34;,&#34;Asia/Dushanbe&#34;,&#34;Asia/Famagusta&#34;,&#34;Asia/Gaza&#34;,&#34;Asia/Hebron&#34;,&#34;Asia/Ho_Chi_Minh&#34;,&#34;Asia/Hong_Kong&#34;,&#34;Asia/Hovd&#34;,&#34;Asia/Irkutsk&#34;,&#34;Asia/Jakarta&#34;,&#34;Asia/Jayapura&#34;,&#34;Asia/Jerusalem&#34;,&#34;Asia/Kabul&#34;,&#34;Asia/Kamchatka&#34;,&#34;Asia/Karachi&#34;,&#34;Asia/Kathmandu&#34;,&#34;Asia/Khandyga&#34;,&#34;Asia/Kolkata&#34;,&#34;Asia/Krasnoyarsk&#34;,&#34;Asia/Kuala_Lumpur&#34;,&#34;Asia/Kuching&#34;,&#34;Asia/Macau&#34;,&#34;Asia/Magadan&#34;,&#34;Asia/Makassar&#34;,&#34;Asia/Manila&#34;,&#34;Asia/Nicosia&#34;,&#34;Asia/Novokuznetsk&#34;,&#34;Asia/Novosibirsk&#34;,&#34;Asia/Omsk&#34;,&#34;Asia/Oral&#34;,&#34;Asia/Pontianak&#34;,&#34;Asia/Pyongyang&#34;,&#34;Asia/Qatar&#34;,&#34;Asia/Qostanay&#34;,&#34;Asia/Qyzylorda&#34;,&#34;Asia/Riyadh&#34;,&#34;Asia/Sakhalin&#34;,&#34;Asia/Samarkand&#34;,&#34;Asia/Seoul&#34;,&#34;Asia/Shanghai&#34;,&#34;Asia/Singapore&#34;,&#34;Asia/Srednekolymsk&#34;,&#34;Asia/Taipei&#34;,&#34;Asia/Tashkent&#34;,&#34;Asia/Tbilisi&#34;,&#34;Asia/Tehran&#34;,&#34;Asia/Thimphu&#34;,&#34;Asia/Tokyo&#34;,&#34;Asia/Tomsk&#34;,&#34;Asia/Ulaanbaatar&#34;,&#34;Asia/Urumqi&#34;,&#34;Asia/Ust-Nera&#34;,&#34;Asia/Vladivostok&#34;,&#34;Asia/Yakutsk&#34;,&#34;Asia/Yangon&#34;,&#34;Asia/Yekaterinburg&#34;,&#34;Asia/Yerevan&#34;,&#34;Atlantic/Azores&#34;,&#34;Atlantic/Bermuda&#34;,&#34;Atlantic/Canary&#34;,&#34;Atlantic/Cape_Verde&#34;,&#34;Atlantic/Faroe&#34;,&#34;Atlantic/Madeira&#34;,&#34;Atlantic/Reykjavik&#34;,&#34;Atlantic/South_Georgia&#34;,&#34;Atlantic/Stanley&#34;,&#34;Australia/Adelaide&#34;,&#34;Australia/Brisbane&#34;,&#34;Australia/Broken_Hill&#34;,&#34;Australia/Darwin&#34;,&#34;Australia/Eucla&#34;,&#34;Australia/Hobart&#34;,&#34;Australia/Lindeman&#34;,&#34;Australia/Lord_Howe&#34;,&#34;Australia/Melbourne&#34;,&#34;Australia/Perth&#34;,&#34;Australia/Sydney&#34;,&#34;CET&#34;,&#34;CST6CDT&#34;,&#34;EET&#34;,&#34;EST&#34;,&#34;EST5EDT&#34;,&#34;Etc/GMT&#34;,&#34;Etc/GMT+1&#34;,&#34;Etc/GMT+10&#34;,&#34;Etc/GMT+11&#34;,&#34;Etc/GMT+12&#34;,&#34;Etc/GMT+2&#34;,&#34;Etc/GMT+3&#34;,&#34;Etc/GMT+4&#34;,&#34;Etc/GMT+5&#34;,&#34;Etc/GMT+6&#34;,&#34;Etc/GMT+7&#34;,&#34;Etc/GMT+8&#34;,&#34;Etc/GMT+9&#34;,&#34;Etc/GMT-1&#34;,&#34;Etc/GMT-10&#34;,&#34;Etc/GMT-11&#34;,&#34;Etc/GMT-12&#34;,&#34;Etc/GMT-13&#34;,&#34;Etc/GMT-14&#34;,&#34;Etc/GMT-2&#34;,&#34;Etc/GMT-3&#34;,&#34;Etc/GMT-4&#34;,&#34;Etc/GMT-5&#34;,&#34;Etc/GMT-6&#34;,&#34;Etc/GMT-7&#34;,&#34;Etc/GMT-8&#34;,&#34;Etc/GMT-9&#34;,&#34;Etc/UTC&#34;,&#34;Europe/Amsterdam&#34;,&#34;Europe/Andorra&#34;,&#34;Europe/Astrakhan&#34;,&#34;Europe/Athens&#34;,&#34;Europe/Belgrade&#34;,&#34;Europe/Berlin&#34;,&#34;Europe/Brussels&#34;,&#34;Europe/Bucharest&#34;,&#34;Europe/Budapest&#34;,&#34;Europe/Chisinau&#34;,&#34;Europe/Copenhagen&#34;,&#34;Europe/Dublin&#34;,&#34;Europe/Gibraltar&#34;,&#34;Europe/Helsinki&#34;,&#34;Europe/Istanbul&#34;,&#34;Europe/Kaliningrad&#34;,&#34;Europe/Kiev&#34;,&#34;Europe/Kirov&#34;,&#34;Europe/Lisbon&#34;,&#34;Europe/London&#34;,&#34;Europe/Luxembourg&#34;,&#34;Europe/Madrid&#34;,&#34;Europe/Malta&#34;,&#34;Europe/Minsk&#34;,&#34;Europe/Monaco&#34;,&#34;Europe/Moscow&#34;,&#34;Europe/Oslo&#34;,&#34;Europe/Paris&#34;,&#34;Europe/Prague&#34;,&#34;Europe/Riga&#34;,&#34;Europe/Rome&#34;,&#34;Europe/Samara&#34;,&#34;Europe/Saratov&#34;,&#34;Europe/Simferopol&#34;,&#34;Europe/Sofia&#34;,&#34;Europe/Stockholm&#34;,&#34;Europe/Tallinn&#34;,&#34;Europe/Tirane&#34;,&#34;Europe/Ulyanovsk&#34;,&#34;Europe/Uzhgorod&#34;,&#34;Europe/Vienna&#34;,&#34;Europe/Vilnius&#34;,&#34;Europe/Volgograd&#34;,&#34;Europe/Warsaw&#34;,&#34;Europe/Zaporozhye&#34;,&#34;Europe/Zurich&#34;,&#34;HST&#34;,&#34;Indian/Chagos&#34;,&#34;Indian/Christmas&#34;,&#34;Indian/Cocos&#34;,&#34;Indian/Kerguelen&#34;,&#34;Indian/Mahe&#34;,&#34;Indian/Maldives&#34;,&#34;Indian/Mauritius&#34;,&#34;Indian/Reunion&#34;,&#34;MET&#34;,&#34;MST&#34;,&#34;MST7MDT&#34;,&#34;PST8PDT&#34;,&#34;Pacific/Apia&#34;,&#34;Pacific/Auckland&#34;,&#34;Pacific/Bougainville&#34;,&#34;Pacific/Chatham&#34;,&#34;Pacific/Chuuk&#34;,&#34;Pacific/Easter&#34;,&#34;Pacific/Efate&#34;,&#34;Pacific/Enderbury&#34;,&#34;Pacific/Fakaofo&#34;,&#34;Pacific/Fiji&#34;,&#34;Pacific/Funafuti&#34;,&#34;Pacific/Galapagos&#34;,&#34;Pacific/Gambier&#34;,&#34;Pacific/Guadalcanal&#34;,&#34;Pacific/Guam&#34;,&#34;Pacific/Honolulu&#34;,&#34;Pacific/Kiritimati&#34;,&#34;Pacific/Kosrae&#34;,&#34;Pacific/Kwajalein&#34;,&#34;Pacific/Majuro&#34;,&#34;Pacific/Marquesas&#34;,&#34;Pacific/Nauru&#34;,&#34;Pacific/Niue&#34;,&#34;Pacific/Norfolk&#34;,&#34;Pacific/Noumea&#34;,&#34;Pacific/Pago_Pago&#34;,&#34;Pacific/Palau&#34;,&#34;Pacific/Pitcairn&#34;,&#34;Pacific/Pohnpei&#34;,&#34;Pacific/Port_Moresby&#34;,&#34;Pacific/Rarotonga&#34;,&#34;Pacific/Tahiti&#34;,&#34;Pacific/Tarawa&#34;,&#34;Pacific/Tongatapu&#34;,&#34;Pacific/Wake&#34;,&#34;Pacific/Wallis&#34;,&#34;WET&#34;] &lt;bound method Response.json of &lt;Response [200]&gt;&gt; . try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;list&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? [&#39;Africa/Abidjan&#39;, &#39;Africa/Accra&#39;, &#39;Africa/Algiers&#39;, &#39;Africa/Bissau&#39;, &#39;Africa/Cairo&#39;, &#39;Africa/Casablanca&#39;, &#39;Africa/Ceuta&#39;, &#39;Africa/El_Aaiun&#39;, &#39;Africa/Johannesburg&#39;, &#39;Africa/Juba&#39;, &#39;Africa/Khartoum&#39;, &#39;Africa/Lagos&#39;, &#39;Africa/Maputo&#39;, &#39;Africa/Monrovia&#39;, &#39;Africa/Nairobi&#39;, &#39;Africa/Ndjamena&#39;, &#39;Africa/Sao_Tome&#39;, &#39;Africa/Tripoli&#39;, &#39;Africa/Tunis&#39;, &#39;Africa/Windhoek&#39;, &#39;America/Adak&#39;, &#39;America/Anchorage&#39;, &#39;America/Araguaina&#39;, &#39;America/Argentina/Buenos_Aires&#39;, &#39;America/Argentina/Catamarca&#39;, &#39;America/Argentina/Cordoba&#39;, &#39;America/Argentina/Jujuy&#39;, &#39;America/Argentina/La_Rioja&#39;, &#39;America/Argentina/Mendoza&#39;, &#39;America/Argentina/Rio_Gallegos&#39;, &#39;America/Argentina/Salta&#39;, &#39;America/Argentina/San_Juan&#39;, &#39;America/Argentina/San_Luis&#39;, &#39;America/Argentina/Tucuman&#39;, &#39;America/Argentina/Ushuaia&#39;, &#39;America/Asuncion&#39;, &#39;America/Atikokan&#39;, &#39;America/Bahia&#39;, &#39;America/Bahia_Banderas&#39;, &#39;America/Barbados&#39;, &#39;America/Belem&#39;, &#39;America/Belize&#39;, &#39;America/Blanc-Sablon&#39;, &#39;America/Boa_Vista&#39;, &#39;America/Bogota&#39;, &#39;America/Boise&#39;, &#39;America/Cambridge_Bay&#39;, &#39;America/Campo_Grande&#39;, &#39;America/Cancun&#39;, &#39;America/Caracas&#39;, &#39;America/Cayenne&#39;, &#39;America/Chicago&#39;, &#39;America/Chihuahua&#39;, &#39;America/Costa_Rica&#39;, &#39;America/Creston&#39;, &#39;America/Cuiaba&#39;, &#39;America/Curacao&#39;, &#39;America/Danmarkshavn&#39;, &#39;America/Dawson&#39;, &#39;America/Dawson_Creek&#39;, &#39;America/Denver&#39;, &#39;America/Detroit&#39;, &#39;America/Edmonton&#39;, &#39;America/Eirunepe&#39;, &#39;America/El_Salvador&#39;, &#39;America/Fort_Nelson&#39;, &#39;America/Fortaleza&#39;, &#39;America/Glace_Bay&#39;, &#39;America/Goose_Bay&#39;, &#39;America/Grand_Turk&#39;, &#39;America/Guatemala&#39;, &#39;America/Guayaquil&#39;, &#39;America/Guyana&#39;, &#39;America/Halifax&#39;, &#39;America/Havana&#39;, &#39;America/Hermosillo&#39;, &#39;America/Indiana/Indianapolis&#39;, &#39;America/Indiana/Knox&#39;, &#39;America/Indiana/Marengo&#39;, &#39;America/Indiana/Petersburg&#39;, &#39;America/Indiana/Tell_City&#39;, &#39;America/Indiana/Vevay&#39;, &#39;America/Indiana/Vincennes&#39;, &#39;America/Indiana/Winamac&#39;, &#39;America/Inuvik&#39;, &#39;America/Iqaluit&#39;, &#39;America/Jamaica&#39;, &#39;America/Juneau&#39;, &#39;America/Kentucky/Louisville&#39;, &#39;America/Kentucky/Monticello&#39;, &#39;America/La_Paz&#39;, &#39;America/Lima&#39;, &#39;America/Los_Angeles&#39;, &#39;America/Maceio&#39;, &#39;America/Managua&#39;, &#39;America/Manaus&#39;, &#39;America/Martinique&#39;, &#39;America/Matamoros&#39;, &#39;America/Mazatlan&#39;, &#39;America/Menominee&#39;, &#39;America/Merida&#39;, &#39;America/Metlakatla&#39;, &#39;America/Mexico_City&#39;, &#39;America/Miquelon&#39;, &#39;America/Moncton&#39;, &#39;America/Monterrey&#39;, &#39;America/Montevideo&#39;, &#39;America/Nassau&#39;, &#39;America/New_York&#39;, &#39;America/Nipigon&#39;, &#39;America/Nome&#39;, &#39;America/Noronha&#39;, &#39;America/North_Dakota/Beulah&#39;, &#39;America/North_Dakota/Center&#39;, &#39;America/North_Dakota/New_Salem&#39;, &#39;America/Nuuk&#39;, &#39;America/Ojinaga&#39;, &#39;America/Panama&#39;, &#39;America/Pangnirtung&#39;, &#39;America/Paramaribo&#39;, &#39;America/Phoenix&#39;, &#39;America/Port-au-Prince&#39;, &#39;America/Port_of_Spain&#39;, &#39;America/Porto_Velho&#39;, &#39;America/Puerto_Rico&#39;, &#39;America/Punta_Arenas&#39;, &#39;America/Rainy_River&#39;, &#39;America/Rankin_Inlet&#39;, &#39;America/Recife&#39;, &#39;America/Regina&#39;, &#39;America/Resolute&#39;, &#39;America/Rio_Branco&#39;, &#39;America/Santarem&#39;, &#39;America/Santiago&#39;, &#39;America/Santo_Domingo&#39;, &#39;America/Sao_Paulo&#39;, &#39;America/Scoresbysund&#39;, &#39;America/Sitka&#39;, &#39;America/St_Johns&#39;, &#39;America/Swift_Current&#39;, &#39;America/Tegucigalpa&#39;, &#39;America/Thule&#39;, &#39;America/Thunder_Bay&#39;, &#39;America/Tijuana&#39;, &#39;America/Toronto&#39;, &#39;America/Vancouver&#39;, &#39;America/Whitehorse&#39;, &#39;America/Winnipeg&#39;, &#39;America/Yakutat&#39;, &#39;America/Yellowknife&#39;, &#39;Antarctica/Casey&#39;, &#39;Antarctica/Davis&#39;, &#39;Antarctica/DumontDUrville&#39;, &#39;Antarctica/Macquarie&#39;, &#39;Antarctica/Mawson&#39;, &#39;Antarctica/Palmer&#39;, &#39;Antarctica/Rothera&#39;, &#39;Antarctica/Syowa&#39;, &#39;Antarctica/Troll&#39;, &#39;Antarctica/Vostok&#39;, &#39;Asia/Almaty&#39;, &#39;Asia/Amman&#39;, &#39;Asia/Anadyr&#39;, &#39;Asia/Aqtau&#39;, &#39;Asia/Aqtobe&#39;, &#39;Asia/Ashgabat&#39;, &#39;Asia/Atyrau&#39;, &#39;Asia/Baghdad&#39;, &#39;Asia/Baku&#39;, &#39;Asia/Bangkok&#39;, &#39;Asia/Barnaul&#39;, &#39;Asia/Beirut&#39;, &#39;Asia/Bishkek&#39;, &#39;Asia/Brunei&#39;, &#39;Asia/Chita&#39;, &#39;Asia/Choibalsan&#39;, &#39;Asia/Colombo&#39;, &#39;Asia/Damascus&#39;, &#39;Asia/Dhaka&#39;, &#39;Asia/Dili&#39;, &#39;Asia/Dubai&#39;, &#39;Asia/Dushanbe&#39;, &#39;Asia/Famagusta&#39;, &#39;Asia/Gaza&#39;, &#39;Asia/Hebron&#39;, &#39;Asia/Ho_Chi_Minh&#39;, &#39;Asia/Hong_Kong&#39;, &#39;Asia/Hovd&#39;, &#39;Asia/Irkutsk&#39;, &#39;Asia/Jakarta&#39;, &#39;Asia/Jayapura&#39;, &#39;Asia/Jerusalem&#39;, &#39;Asia/Kabul&#39;, &#39;Asia/Kamchatka&#39;, &#39;Asia/Karachi&#39;, &#39;Asia/Kathmandu&#39;, &#39;Asia/Khandyga&#39;, &#39;Asia/Kolkata&#39;, &#39;Asia/Krasnoyarsk&#39;, &#39;Asia/Kuala_Lumpur&#39;, &#39;Asia/Kuching&#39;, &#39;Asia/Macau&#39;, &#39;Asia/Magadan&#39;, &#39;Asia/Makassar&#39;, &#39;Asia/Manila&#39;, &#39;Asia/Nicosia&#39;, &#39;Asia/Novokuznetsk&#39;, &#39;Asia/Novosibirsk&#39;, &#39;Asia/Omsk&#39;, &#39;Asia/Oral&#39;, &#39;Asia/Pontianak&#39;, &#39;Asia/Pyongyang&#39;, &#39;Asia/Qatar&#39;, &#39;Asia/Qostanay&#39;, &#39;Asia/Qyzylorda&#39;, &#39;Asia/Riyadh&#39;, &#39;Asia/Sakhalin&#39;, &#39;Asia/Samarkand&#39;, &#39;Asia/Seoul&#39;, &#39;Asia/Shanghai&#39;, &#39;Asia/Singapore&#39;, &#39;Asia/Srednekolymsk&#39;, &#39;Asia/Taipei&#39;, &#39;Asia/Tashkent&#39;, &#39;Asia/Tbilisi&#39;, &#39;Asia/Tehran&#39;, &#39;Asia/Thimphu&#39;, &#39;Asia/Tokyo&#39;, &#39;Asia/Tomsk&#39;, &#39;Asia/Ulaanbaatar&#39;, &#39;Asia/Urumqi&#39;, &#39;Asia/Ust-Nera&#39;, &#39;Asia/Vladivostok&#39;, &#39;Asia/Yakutsk&#39;, &#39;Asia/Yangon&#39;, &#39;Asia/Yekaterinburg&#39;, &#39;Asia/Yerevan&#39;, &#39;Atlantic/Azores&#39;, &#39;Atlantic/Bermuda&#39;, &#39;Atlantic/Canary&#39;, &#39;Atlantic/Cape_Verde&#39;, &#39;Atlantic/Faroe&#39;, &#39;Atlantic/Madeira&#39;, &#39;Atlantic/Reykjavik&#39;, &#39;Atlantic/South_Georgia&#39;, &#39;Atlantic/Stanley&#39;, &#39;Australia/Adelaide&#39;, &#39;Australia/Brisbane&#39;, &#39;Australia/Broken_Hill&#39;, &#39;Australia/Darwin&#39;, &#39;Australia/Eucla&#39;, &#39;Australia/Hobart&#39;, &#39;Australia/Lindeman&#39;, &#39;Australia/Lord_Howe&#39;, &#39;Australia/Melbourne&#39;, &#39;Australia/Perth&#39;, &#39;Australia/Sydney&#39;, &#39;CET&#39;, &#39;CST6CDT&#39;, &#39;EET&#39;, &#39;EST&#39;, &#39;EST5EDT&#39;, &#39;Etc/GMT&#39;, &#39;Etc/GMT+1&#39;, &#39;Etc/GMT+10&#39;, &#39;Etc/GMT+11&#39;, &#39;Etc/GMT+12&#39;, &#39;Etc/GMT+2&#39;, &#39;Etc/GMT+3&#39;, &#39;Etc/GMT+4&#39;, &#39;Etc/GMT+5&#39;, &#39;Etc/GMT+6&#39;, &#39;Etc/GMT+7&#39;, &#39;Etc/GMT+8&#39;, &#39;Etc/GMT+9&#39;, &#39;Etc/GMT-1&#39;, &#39;Etc/GMT-10&#39;, &#39;Etc/GMT-11&#39;, &#39;Etc/GMT-12&#39;, &#39;Etc/GMT-13&#39;, &#39;Etc/GMT-14&#39;, &#39;Etc/GMT-2&#39;, &#39;Etc/GMT-3&#39;, &#39;Etc/GMT-4&#39;, &#39;Etc/GMT-5&#39;, &#39;Etc/GMT-6&#39;, &#39;Etc/GMT-7&#39;, &#39;Etc/GMT-8&#39;, &#39;Etc/GMT-9&#39;, &#39;Etc/UTC&#39;, &#39;Europe/Amsterdam&#39;, &#39;Europe/Andorra&#39;, &#39;Europe/Astrakhan&#39;, &#39;Europe/Athens&#39;, &#39;Europe/Belgrade&#39;, &#39;Europe/Berlin&#39;, &#39;Europe/Brussels&#39;, &#39;Europe/Bucharest&#39;, &#39;Europe/Budapest&#39;, &#39;Europe/Chisinau&#39;, &#39;Europe/Copenhagen&#39;, &#39;Europe/Dublin&#39;, &#39;Europe/Gibraltar&#39;, &#39;Europe/Helsinki&#39;, &#39;Europe/Istanbul&#39;, &#39;Europe/Kaliningrad&#39;, &#39;Europe/Kiev&#39;, &#39;Europe/Kirov&#39;, &#39;Europe/Lisbon&#39;, &#39;Europe/London&#39;, &#39;Europe/Luxembourg&#39;, &#39;Europe/Madrid&#39;, &#39;Europe/Malta&#39;, &#39;Europe/Minsk&#39;, &#39;Europe/Monaco&#39;, &#39;Europe/Moscow&#39;, &#39;Europe/Oslo&#39;, &#39;Europe/Paris&#39;, &#39;Europe/Prague&#39;, &#39;Europe/Riga&#39;, &#39;Europe/Rome&#39;, &#39;Europe/Samara&#39;, &#39;Europe/Saratov&#39;, &#39;Europe/Simferopol&#39;, &#39;Europe/Sofia&#39;, &#39;Europe/Stockholm&#39;, &#39;Europe/Tallinn&#39;, &#39;Europe/Tirane&#39;, &#39;Europe/Ulyanovsk&#39;, &#39;Europe/Uzhgorod&#39;, &#39;Europe/Vienna&#39;, &#39;Europe/Vilnius&#39;, &#39;Europe/Volgograd&#39;, &#39;Europe/Warsaw&#39;, &#39;Europe/Zaporozhye&#39;, &#39;Europe/Zurich&#39;, &#39;HST&#39;, &#39;Indian/Chagos&#39;, &#39;Indian/Christmas&#39;, &#39;Indian/Cocos&#39;, &#39;Indian/Kerguelen&#39;, &#39;Indian/Mahe&#39;, &#39;Indian/Maldives&#39;, &#39;Indian/Mauritius&#39;, &#39;Indian/Reunion&#39;, &#39;MET&#39;, &#39;MST&#39;, &#39;MST7MDT&#39;, &#39;PST8PDT&#39;, &#39;Pacific/Apia&#39;, &#39;Pacific/Auckland&#39;, &#39;Pacific/Bougainville&#39;, &#39;Pacific/Chatham&#39;, &#39;Pacific/Chuuk&#39;, &#39;Pacific/Easter&#39;, &#39;Pacific/Efate&#39;, &#39;Pacific/Enderbury&#39;, &#39;Pacific/Fakaofo&#39;, &#39;Pacific/Fiji&#39;, &#39;Pacific/Funafuti&#39;, &#39;Pacific/Galapagos&#39;, &#39;Pacific/Gambier&#39;, &#39;Pacific/Guadalcanal&#39;, &#39;Pacific/Guam&#39;, &#39;Pacific/Honolulu&#39;, &#39;Pacific/Kiritimati&#39;, &#39;Pacific/Kosrae&#39;, &#39;Pacific/Kwajalein&#39;, &#39;Pacific/Majuro&#39;, &#39;Pacific/Marquesas&#39;, &#39;Pacific/Nauru&#39;, &#39;Pacific/Niue&#39;, &#39;Pacific/Norfolk&#39;, &#39;Pacific/Noumea&#39;, &#39;Pacific/Pago_Pago&#39;, &#39;Pacific/Palau&#39;, &#39;Pacific/Pitcairn&#39;, &#39;Pacific/Pohnpei&#39;, &#39;Pacific/Port_Moresby&#39;, &#39;Pacific/Rarotonga&#39;, &#39;Pacific/Tahiti&#39;, &#39;Pacific/Tarawa&#39;, &#39;Pacific/Tongatapu&#39;, &#39;Pacific/Wake&#39;, &#39;Pacific/Wallis&#39;, &#39;WET&#39;] .",
            "url": "https://orlando-c.github.io/que-pro/2023/01/10/API.html",
            "relUrl": "/2023/01/10/API.html",
            "date": " • Jan 10, 2023"
        }
        
    
  
    
        ,"post16": {
            "title": "Lessons 12, 13, 14, 15, and 16",
            "content": "Vocab (Doing l8r cuz I was absent) . Unit 3 Sections 12-13 . Homework/Hacks: For the hw, you have two options. The first hack is for a 0.7 + extra work for the full 1. Simply create your own procedure with your own creativity. Since there is a lot of leeway for this one, you must do a LOT additional work to get a 1. For the other option, below is the start to a character to binary convertor. This is just a template, but the goal is to translate &quot;APCSP&quot; into binary. The only contraint is that you must use a procedure. If this is completed along with extra work, you can get a 1. . def letter_to_binary(letter: str) -&gt; str: # Convert the letter to ASCII code ascii_code = ord(letter) # Convert the ASCII code to binary binary = bin(ascii_code) # Return the binary representation return binary # Test the function print(letter_to_binary(&quot;F&quot;)) # Should print &#39;0b1000001&#39; print(letter_to_binary(&quot;B&quot;)) # Should print &#39;0b1000010&#39; print(letter_to_binary(&quot;C&quot;)) # Should print &#39;0b1000011&#39; . 0b1000110 0b1000010 0b1000011 . Unit 3 Sections 14-15 Homework . Create a program that asks the user for a day and then gives them a distance in days between that day and another random day in the year. We have provided you with a possible starter, but you are welcome to change it up if you would like. . import datetime import random #user input day = input(&quot;Enter a day (MM/DD/YYYY): &quot;) #turn user input to datetime form user_day = datetime.datetime.strptime(day, &#39;%m/%d/%Y&#39;) #gen rand year random_year = random.randint(1, 366) random_day = datetime.datetime.strptime(str(random_year), &#39;%j&#39;) #calc dis distance = abs(user_day - random_day).days print(f&quot;The distance in days between {user_day.strftime(&#39;%m/%d/%Y&#39;)} and {random_day.strftime(&#39;%m/%d/%Y&#39;)} is {distance} days.&quot;) . The distance in days between 12/08/2006 and 10/17/1900 is 38768 days. . Unit 3 Section 16 . Hacks 2 . import random x = random.randint (1,100) input (&quot;Try to guess the number&quot;) y = input if y==x: print (&quot;The number was&quot; + x) elif y&lt;x: print (&quot;You didnt guess the number, the number was &quot; + x + &quot;... You guessed &quot; + y) elif y&gt;x: print (&quot;You didnt guess the number, the number was &quot; + x + &quot;... You guessed &quot; + y) # insert your work with randomization/ functions and the mycloset code here # Hint: Use the functions we talked about in the beginning! . import random def coinflip(): #def function randomflip = random.randint(0, 1) #picks either 0 or 1 randomly (50/50 chance of either) if randomflip == 0: #assigning 0 to be heads--&gt; if 0 is chosen then it will print, &quot;Heads&quot; print(&quot;Heads&quot;) else: if randomflip == 1: #assigning 1 to be tails--&gt; if 1 is chosen then it will print, &quot;Tails&quot; print(&quot;Tails&quot;) #Tossing the coin 5 times: t1 = coinflip() t2 = coinflip() t3 = coinflip() t4 = coinflip() t5 = coinflip() . Heads Heads Tails Heads Heads . Hacks 3 . import random def randomnum(): # function for generating random int random.randint(1,8) def converttobin(n): # function for converting decimal to binary binary = bin(n) def survivors(binary): # function to assign position survivorstatus = [&quot;Archie&quot;, &quot;Cookie&quot;, &quot;Daisy&quot;, &quot;Ollie&quot; , &quot;Orlando&quot;, &quot;Colin&quot;, &quot;Max&quot;, &quot;Andrew&quot;] # replace the names above with your choice of people in the house . Hacks 4 . import random def roll_dice(): # Generate a random number between 1 and 6 (inclusive) roll = random.randint(1, 6) return roll # Roll the dice multiple times trials = 10 for i in range(trials): result = roll_dice() print(f&quot;Trial {i+1}: {result}&quot;) . Trial 1: 2 Trial 2: 4 Trial 3: 1 Trial 4: 2 Trial 5: 5 Trial 6: 6 Trial 7: 1 Trial 8: 2 Trial 9: 3 Trial 10: 1 . Hacks 5 . import random # Define a list of questions and a list of answer options for each question questions = [ &quot;A researcher gathers data about the effect of Advanced Placement®︎ classes on students&#39; success in college and career, and develops a simulation to show how a sequence of AP classes affect a hypothetical student&#39;s pathway. Several school administrators are concerned that the simulation contains bias favoring high-income students, however.&quot;, &quot;Jack is trying to plan his financial future using an online tool. The tool starts off by asking him to input details about his current finances and career. It then lets him choose different future scenarios, such as having children. For each scenario chosen, the tool does some calculations and outputs his projected savings at the ages of 35, 45, and 55.Would that be considered a simulation and why?&quot;, &quot;Sylvia is an industrial engineer working for a sporting goods company. She is developing a baseball bat that can hit balls with higher accuracy and asks their software engineering team to develop a simulation to verify the design.Which of the following details is most important to include in this simulation?&quot;, &quot;Ashlynn is an industrial engineer who is trying to design a safer parachute. She creates a computer simulation of the parachute opening at different heights and in different environmental conditions. What are advantages of running the simulation versus an actual experiment?&quot; ] answers = [ [&quot;The simulation is an abstraction and therefore cannot contain any bias&quot;, &quot;The simulation may accidentally contain bias due to the exclusion of details.&quot;, &quot;If the simulation is found to contain bias, then it is not possible to remove the bias from the simulation.&quot;, &quot;The only way for the simulation to be biased is if the researcher intentionally used data that favored their desired output.&quot;], [&quot;No, it&#39;s not a simulation because it does not include a visualization of the results.&quot;, &quot;No, it&#39;s not a simulation because it does not include all the details of his life history and the future financial environment.&quot;, &quot;Yes, it&#39;s a simulation because it runs on a computer and includes both user input and computed output.&quot;, &quot;Yes, it&#39;s a simulation because it is an abstraction of a real world scenario that enables the drawing of inferences.&quot;], [&quot;Realistic sound effects based on the material of the baseball bat and the velocity of the hit&quot;, &quot;A depiction of an audience in the stands with lifelike behavior in response to hit accuracy&quot;, &quot;Accurate accounting for the effects of wind conditions on the movement of the ball&quot;, &quot;A baseball field that is textured to differentiate between the grass and the dirt&quot;], [&quot;The simulation will not contain any bias that favors one body type over another, while an experiment will be biased.&quot;, &quot;The simulation can be run more safely than an actual experiment&quot;, &quot;The simulation will accurately predict the parachute&#39;s safety level, while an experiment may be inaccurate due to faulty experimental design.&quot;, &quot;The simulation can test the parachute design in a wide range of environmental conditions that may be difficult to reliably reproduce in an experiment.&quot;] ] # Correct answers correct_answers = [2, 3, 3, 3] # User Score score = 0 # Shuffle q&amp;a random.shuffle(questions) random.shuffle(answers) # Ask question for i, question in enumerate(questions): print(f&quot;Question {i+1}:&quot;) print(question) print() for j, answer in . Hacks 6 / Challange . import random names = [&quot;Player A&quot;, &quot;Player B&quot;, &quot;Player C&quot;, &quot;Player D&quot;, &quot;Player E&quot;, &quot;Player E&quot;] picked_name = random.choice(names) print(f&quot;The name picked from the hat is {picked_name}&quot;) . The name picked from the hat is Player E . Challanges . import datetime import random random_year = random.randint(1, 366) random_day = datetime.datetime.strptime(str(random_year), &#39;%j&#39;) print({random_day.strftime(&#39;%m/%d/%Y&#39;)}) . {&#39;02/04/1900&#39;} . import math # Read input from the user num1 = float(input(&quot;Enter a number: &quot;)) num2 = float(input(&quot;Enter another number: &quot;)) # Round the numbers up and down num1_rounded_up = math.ceil(num1) num1_rounded_down = math.floor(num1) num2_rounded_up = math.ceil(num2) num2_rounded_down = math.floor(num2) # Find the least common multiple of the rounded down numbers def lcm(a, b): return abs(a*b) // math.gcd(a, b) lcm_rounded_down = lcm(num1_rounded_down, num2_rounded_down) # Find the greatest common multiple of the rounded up numbers def gcm(a, b): return abs(a*b) // math.gcd(a, b) gcm_rounded_up = gcm(num1_rounded_up, num2_rounded_up) # Calculate the factorial of each number def factorial(n): if n == 0: return 1 else: return n * factorial(n-1) num1_factorial = factorial(num1) num2_factorial = factorial(num2) # Print the results print(&quot;Rounded up:&quot;, num1_rounded_up, num2_rounded_up) print(&quot;Rounded down:&quot;, num1_rounded_down, num2_rounded_down) print(&quot;Least common multiple of rounded down numbers:&quot;, lcm_rounded_down) print(&quot;Greatest common multiple of rounded up numbers:&quot;, gcm_rounded_up) print(&quot;Factorials:&quot;, num1_factorial, num2_factorial) . Unit 3 Section 17-18 . 3.17 Algorithmic Efficiency . Vocab . Problem: a general description of a task that can or cannot be solved algorithmically | Decision Problem: A problem with a yes or no answer | Organization Problem: a problem with a goal of finding the best answer | Instance: a problem with a specific input | Efficiency: amount of computing needed to solve a problem | Polynomial Efficiency (Good): more work takes a proportional amount of time (1 job is +2 time) | Exponential Efficiency (Bad): more work takes an exponential amount more time (1 job is 2x time) | Heuristic Approach: When optimal solutions are inefficient, look for a possibly optimal solution that is more efficient | Decidable Problem: A decision problem that has a clear solution that will always make a correct output | Undecidable Problem: A decision problem with no solution that is not guaranteed to produce the correct output | . Challenge . Try and fix this ineficcient code! Only change the code between the two commented lines. Fully programmed solution will improve your grade, at a minimum show that you tried. . import time numlist = [1,3,5,7,9,11,13,15,17,19] valuelist = [0,3,6,9,12,15,18,21] def isvalue(value,array): #-- exists = False min = 0 tmax = 0 max = int(len(numlist) - 1) while (max - min) &gt; 1: if numlist[max] &gt; value: tmax = max max = int((min + max) / 2) if max % 1 != 0: max += .5 else: min = max max = tmax for R in range (int(min), int(tmax)): if numlist[R] == value: exists = &quot;True&quot; return(exists) #-- starttime = time.time() for i in range(100000): for i in range(len(valuelist)): x = isvalue(valuelist[i],numlist) endtime = time.time() print(endtime-starttime,&#39;seconds&#39;) . 1.2009532451629639 seconds . Homework . Make an algorithm that finds the fastest route that hits every location once starting and ending at Del Norte. Make sure to show your thinking. If you are strugling, try using a huristic approach. Remember, what matters more than having perfectly functioning code is that you tried your hardest. . dataset = { &#39;DelNorte&#39;:{ &#39;Westview&#39;:15, &#39;MtCarmel&#39;:20, &#39;Poway&#39;:35, &#39;RanchoBernrdo&#39;:50 }, &#39;Westview&#39;:{ &#39;Del Norte&#39;:15, &#39;MtCarmel&#39;:35, &#39;Poway&#39;:25, &#39;RanchoBernrdo&#39;: 45 }, &#39;MtCarmel&#39;:{ &#39;Westview&#39;:35, &#39;Del Norte&#39;:20, &#39;Poway&#39;:40, &#39;RanchoBernrdo&#39;:30 }, &#39;Poway&#39;:{ &#39;Westview&#39;:25, &#39;MtCarmel&#39;:40, &#39;Del Norte&#39;:35, &#39;RanchoBernrdo&#39;:15 }, &#39;RanchoBernardo&#39;:{ &#39;Westview&#39;:45, &#39;MtCarmel&#39;:30, &#39;Poway&#39;:15, &#39;Del Norte&#39;:50 } } . from itertools import permutations def get_travel_time(route, times): total_time = 0 for i in range(len(route) - 1): total_time += times[route[i]][route[i+1]] return total_time def find_fastest_route(times): locations = list(range(5)) routes = permutations(locations) # Find the fastest route fastest_time = float(&#39;inf&#39;) fastest_route = None for route in routes: time = get_travel_time(route, times) if time &lt; fastest_time: fastest_time = time fastest_route = route return fastest_route times = [[0, 3, 6, 7, 8], [3, 0, 4, 5, 6], [6, 4, 0, 1, 2], [7, 5, 1, 0, 3], [8, 6, 2, 3, 0]] fastest_route = find_fastest_route(times) print(fastest_route) . (0, 1, 2, 3, 4) .",
            "url": "https://orlando-c.github.io/que-pro/2022/12/12/Week14.html",
            "relUrl": "/2022/12/12/Week14.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Short Answer Questions in AP World",
            "content": "HIPA . HIPA is involved in the analysis of a prompt. HIPA stands for . Historical Context | Intended Audience | Purpose of the document | Authors PoV Gender | Education | Nationality | Age | Profession | Religion | Social Status | Race/Ethnicity | . | This is very important because this can help you understand where the prompt is coming from and to better answer the question. For example... . The purpose of this document is to convey the... The intended audience of the document is to the... The historical context of the document is... The Authors POV includes his... . PEDITs . PEDIT stands for . People | Events | Dates | Ideas | Things | PEDITS are used as evidence or details to support your topic sentance. For example . The Trans Atlantic Slave Trade caused major repercussion in the 17th century. Many natives in the Americas and from Africa were enslaved and forced to work. These could include the Bolivian silver mine, haciendas owned by Spanish officers, and sugar plantations. These also came with the added benefit of constantly being harassed, exploited, and abused for their . T.E.A . TEA stands for Topic -&gt; Evidence -&gt; Analysis . Topic sentance should include language from the text and overall encompass the rest of your paragraph For example... . &quot;One differance/similarity between &gt;PEDIT&lt; and &gt;PEDIT&lt; in the &gt;Date&lt; is&quot; &quot;One effect of &gt;PEDIT&lt; on &gt;PEDIT&lt; in the &gt;Date&lt; is&quot; .",
            "url": "https://orlando-c.github.io/que-pro/2022/11/30/SAQ.html",
            "relUrl": "/2022/11/30/SAQ.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "3.1, 3.2, 3.5, 3.6, and 3.7 Notes, Challange, and HW",
            "content": "Notes on 3.1 and 3.2 . Key Details . Variables are abstractions within programs which represent a value | Values can be individual data points or a list/collection that contains many data values | Types of data (ie; numbers, Booleans (T/F), lists, and strings) | Languages (Python and Javascript) | Transformations of languages to HTML . | Elements are unique, individual values . | Lists are made up of elements | Strings are made of repeating characters instead of elements | Data abstraction uses a list by taking specific data elements from a list and organizing into a whole, less complex representation of the values such as a table in windows Excel which uses similar function | . | . Challenge . The list given contains multiple numbers with different values. There are also 2 variables that define the minimum and maximum valid values. Given these variables, output the values that do not fit into the valid range as well as their index values. . data = [104, 101, 4, 105, 308, 103, 5, 107, 100, 306, 106, 102, 108] # list of the different numerical values for a in data: if a &gt; 100: if a &lt; 200: ind = data.index(a) print(&quot;the index of &quot; + str(a) + &quot; is at place &quot; + str(ind + 1) + &quot; out of 13 in the number list&quot;) else: continue else: continue . the index of 104 is at place 1 out of 13 in the list the index of 101 is at place 2 out of 13 in the list the index of 105 is at place 4 out of 13 in the list the index of 103 is at place 6 out of 13 in the list the index of 107 is at place 8 out of 13 in the list the index of 106 is at place 11 out of 13 in the list the index of 102 is at place 12 out of 13 in the list the index of 108 is at place 13 out of 13 in the list . Homework/Hacks . The list given contains 4 album names - Welcome to my Nightmare, Bad Company, Nightflight, More Mayhem - and each album contains at least 4 songs within another list. Given this, write a block of code that enables users to input in integer values that correspond to the albums and songs - Welcome to my Nightmare is 1, Bad Company is 2, etc. - Then, a sentence is outputted that says Playing ___ based on which song was chosen using the numbers inputted by the user that corresponds to each song. . albums = [ (&quot;Welcome to my Nightmare&quot;, &quot;Alice Cooper&quot;, 1975, # First album list [ (1, &quot;Welcome to my Nightmare&quot;), (2, &quot;Devil&#39;s Food&quot;), (3, &quot;The Black Widow&quot;), (4, &quot;Some Folks&quot;), (5, &quot;Only Women Bleed&quot;), ] ), (&quot;Bad Company&quot;, &quot;Bad Company&quot;, 1974, # Second album list [ (1, &quot;Can&#39;t Get Enough&quot;), (2, &quot;Rock Steady&quot;), (3, &quot;Ready for Love&quot;), (4, &quot;Don&#39;t Let Me Down&quot;), (5, &quot;Bad Company&quot;), (6, &quot;The Way I Choose&quot;), (7, &quot;Movin&#39; On&quot;), (8, &quot;Seagull&quot;), ] ), (&quot;Nightflight&quot;, &quot;Budgie&quot;, 1981, [ (1, &quot;I Turned to Stone&quot;), (2, &quot;Keeping a Rendezvous&quot;), (3, &quot;Reaper of the Glory&quot;), (4, &quot;She Used Me Up&quot;), ] ), (&quot;More Mayhem&quot;, &quot;Imelda May&quot;, 2011, [ (1, &quot;Pulling the Rug&quot;), (2, &quot;Psycho&quot;), (3, &quot;Mayhem&quot;), (4, &quot;Kentish Town Waltz&quot;), ] ), ] album = input(&quot;enter album selection&quot;) song = input(&quot;enter song selection&quot;) print(&quot;Now playing ~ &quot; + albums[int(album) - 1][3][int(song) - 1][1]) . Now playing ~ Keeping a Rendezvous . Notes on 3.5, 3.6, and 3.7 . Important vocab . Boolean T/F statements. | . | Boolean Operator Boolean operators produces booleans after it is used between two values. | . | Relational Operators Relational Operators can work between any two values of the same type known as operands. | consist of the operators ==, !=, &gt;, &lt;, &gt;=, &lt;=, each one working the same way that they work as one would expect. | . | Logical Operators . These are operators that works on operand(s) to produce a single boolean result. | Examples include and, or, not. | . | Algorithm . A set of instructions that accomplish a task. | . | Selection The process that determines which parts of an algoritm is being executed based on a condition that is true or false. | . | . | . school = input(&quot;What high school do you go to? EX. Forgotten High School&quot;); if school == (&quot;Del Norte High School&quot;): print(&quot;You are at the 3rd best school in San Diego County, 17th best school in the state!&quot;); else: print(&quot;Unfortunate&quot;); if school == (&quot;Mount Carmel High School&quot;): print(&quot;You are at the worst School in the state... Congrats?&quot;); else: print(&quot;Unfortunate&quot;); . Unfortunate You are at the worst School in the state... Congrats? . Homework for 3.5, 3.6, and 3.7 . our homework we have decided for a decimal number to binary converter. You must use conditional statements within your code and have a input box for where the decimal number will go. This will give you a 2.7 out of 3 and you may add anything else to the code to get above a 2.7. . Below is an example of decimal number to binary converter which you can use as a starting template. . def DecimalToBinary(num): strs = &quot;&quot; while num: # if (num &amp; 1) = 1 if (num &amp; 1): strs += &quot;1&quot; # if (num &amp; 1) = 0 else: strs += &quot;0&quot; # right shift by 1 num &gt;&gt;= 1 return strs # function to reverse the string def reverse(strs): print(strs[::-1]) # Driver Code num = 67 print(&quot;Binary of num 67 is:&quot;, end=&quot; &quot;) reverse(DecimalToBinary(num)) .",
            "url": "https://orlando-c.github.io/que-pro/jupyter/python/week%2013/2022/11/27/Challenge-and-Homework.html",
            "relUrl": "/jupyter/python/week%2013/2022/11/27/Challenge-and-Homework.html",
            "date": " • Nov 27, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "~MY WORLD TIMEZONE API~",
            "content": "earf . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;dec069b877msh0d9d0827664078cp1a18fajsn2afac35ae063&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . import requests url = &quot;https://world-time2.p.rapidapi.com/timezone&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;0317f96beemsh35e5d75a42dbab7p1d5d30jsn35808d9ea4d2&quot;, &quot;X-RapidAPI-Host&quot;: &quot;world-time2.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) import requests url = &quot;https://world-time2.p.rapidapi.com/timezone&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;0317f96beemsh35e5d75a42dbab7p1d5d30jsn35808d9ea4d2&quot;, &quot;X-RapidAPI-Host&quot;: &quot;world-time2.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.json) json = response.json() . [&#34;Africa/Abidjan&#34;,&#34;Africa/Accra&#34;,&#34;Africa/Algiers&#34;,&#34;Africa/Bissau&#34;,&#34;Africa/Cairo&#34;,&#34;Africa/Casablanca&#34;,&#34;Africa/Ceuta&#34;,&#34;Africa/El_Aaiun&#34;,&#34;Africa/Johannesburg&#34;,&#34;Africa/Juba&#34;,&#34;Africa/Khartoum&#34;,&#34;Africa/Lagos&#34;,&#34;Africa/Maputo&#34;,&#34;Africa/Monrovia&#34;,&#34;Africa/Nairobi&#34;,&#34;Africa/Ndjamena&#34;,&#34;Africa/Sao_Tome&#34;,&#34;Africa/Tripoli&#34;,&#34;Africa/Tunis&#34;,&#34;Africa/Windhoek&#34;,&#34;America/Adak&#34;,&#34;America/Anchorage&#34;,&#34;America/Araguaina&#34;,&#34;America/Argentina/Buenos_Aires&#34;,&#34;America/Argentina/Catamarca&#34;,&#34;America/Argentina/Cordoba&#34;,&#34;America/Argentina/Jujuy&#34;,&#34;America/Argentina/La_Rioja&#34;,&#34;America/Argentina/Mendoza&#34;,&#34;America/Argentina/Rio_Gallegos&#34;,&#34;America/Argentina/Salta&#34;,&#34;America/Argentina/San_Juan&#34;,&#34;America/Argentina/San_Luis&#34;,&#34;America/Argentina/Tucuman&#34;,&#34;America/Argentina/Ushuaia&#34;,&#34;America/Asuncion&#34;,&#34;America/Atikokan&#34;,&#34;America/Bahia&#34;,&#34;America/Bahia_Banderas&#34;,&#34;America/Barbados&#34;,&#34;America/Belem&#34;,&#34;America/Belize&#34;,&#34;America/Blanc-Sablon&#34;,&#34;America/Boa_Vista&#34;,&#34;America/Bogota&#34;,&#34;America/Boise&#34;,&#34;America/Cambridge_Bay&#34;,&#34;America/Campo_Grande&#34;,&#34;America/Cancun&#34;,&#34;America/Caracas&#34;,&#34;America/Cayenne&#34;,&#34;America/Chicago&#34;,&#34;America/Chihuahua&#34;,&#34;America/Costa_Rica&#34;,&#34;America/Creston&#34;,&#34;America/Cuiaba&#34;,&#34;America/Curacao&#34;,&#34;America/Danmarkshavn&#34;,&#34;America/Dawson&#34;,&#34;America/Dawson_Creek&#34;,&#34;America/Denver&#34;,&#34;America/Detroit&#34;,&#34;America/Edmonton&#34;,&#34;America/Eirunepe&#34;,&#34;America/El_Salvador&#34;,&#34;America/Fort_Nelson&#34;,&#34;America/Fortaleza&#34;,&#34;America/Glace_Bay&#34;,&#34;America/Goose_Bay&#34;,&#34;America/Grand_Turk&#34;,&#34;America/Guatemala&#34;,&#34;America/Guayaquil&#34;,&#34;America/Guyana&#34;,&#34;America/Halifax&#34;,&#34;America/Havana&#34;,&#34;America/Hermosillo&#34;,&#34;America/Indiana/Indianapolis&#34;,&#34;America/Indiana/Knox&#34;,&#34;America/Indiana/Marengo&#34;,&#34;America/Indiana/Petersburg&#34;,&#34;America/Indiana/Tell_City&#34;,&#34;America/Indiana/Vevay&#34;,&#34;America/Indiana/Vincennes&#34;,&#34;America/Indiana/Winamac&#34;,&#34;America/Inuvik&#34;,&#34;America/Iqaluit&#34;,&#34;America/Jamaica&#34;,&#34;America/Juneau&#34;,&#34;America/Kentucky/Louisville&#34;,&#34;America/Kentucky/Monticello&#34;,&#34;America/La_Paz&#34;,&#34;America/Lima&#34;,&#34;America/Los_Angeles&#34;,&#34;America/Maceio&#34;,&#34;America/Managua&#34;,&#34;America/Manaus&#34;,&#34;America/Martinique&#34;,&#34;America/Matamoros&#34;,&#34;America/Mazatlan&#34;,&#34;America/Menominee&#34;,&#34;America/Merida&#34;,&#34;America/Metlakatla&#34;,&#34;America/Mexico_City&#34;,&#34;America/Miquelon&#34;,&#34;America/Moncton&#34;,&#34;America/Monterrey&#34;,&#34;America/Montevideo&#34;,&#34;America/Nassau&#34;,&#34;America/New_York&#34;,&#34;America/Nipigon&#34;,&#34;America/Nome&#34;,&#34;America/Noronha&#34;,&#34;America/North_Dakota/Beulah&#34;,&#34;America/North_Dakota/Center&#34;,&#34;America/North_Dakota/New_Salem&#34;,&#34;America/Nuuk&#34;,&#34;America/Ojinaga&#34;,&#34;America/Panama&#34;,&#34;America/Pangnirtung&#34;,&#34;America/Paramaribo&#34;,&#34;America/Phoenix&#34;,&#34;America/Port-au-Prince&#34;,&#34;America/Port_of_Spain&#34;,&#34;America/Porto_Velho&#34;,&#34;America/Puerto_Rico&#34;,&#34;America/Punta_Arenas&#34;,&#34;America/Rainy_River&#34;,&#34;America/Rankin_Inlet&#34;,&#34;America/Recife&#34;,&#34;America/Regina&#34;,&#34;America/Resolute&#34;,&#34;America/Rio_Branco&#34;,&#34;America/Santarem&#34;,&#34;America/Santiago&#34;,&#34;America/Santo_Domingo&#34;,&#34;America/Sao_Paulo&#34;,&#34;America/Scoresbysund&#34;,&#34;America/Sitka&#34;,&#34;America/St_Johns&#34;,&#34;America/Swift_Current&#34;,&#34;America/Tegucigalpa&#34;,&#34;America/Thule&#34;,&#34;America/Thunder_Bay&#34;,&#34;America/Tijuana&#34;,&#34;America/Toronto&#34;,&#34;America/Vancouver&#34;,&#34;America/Whitehorse&#34;,&#34;America/Winnipeg&#34;,&#34;America/Yakutat&#34;,&#34;America/Yellowknife&#34;,&#34;Antarctica/Casey&#34;,&#34;Antarctica/Davis&#34;,&#34;Antarctica/DumontDUrville&#34;,&#34;Antarctica/Macquarie&#34;,&#34;Antarctica/Mawson&#34;,&#34;Antarctica/Palmer&#34;,&#34;Antarctica/Rothera&#34;,&#34;Antarctica/Syowa&#34;,&#34;Antarctica/Troll&#34;,&#34;Antarctica/Vostok&#34;,&#34;Asia/Almaty&#34;,&#34;Asia/Amman&#34;,&#34;Asia/Anadyr&#34;,&#34;Asia/Aqtau&#34;,&#34;Asia/Aqtobe&#34;,&#34;Asia/Ashgabat&#34;,&#34;Asia/Atyrau&#34;,&#34;Asia/Baghdad&#34;,&#34;Asia/Baku&#34;,&#34;Asia/Bangkok&#34;,&#34;Asia/Barnaul&#34;,&#34;Asia/Beirut&#34;,&#34;Asia/Bishkek&#34;,&#34;Asia/Brunei&#34;,&#34;Asia/Chita&#34;,&#34;Asia/Choibalsan&#34;,&#34;Asia/Colombo&#34;,&#34;Asia/Damascus&#34;,&#34;Asia/Dhaka&#34;,&#34;Asia/Dili&#34;,&#34;Asia/Dubai&#34;,&#34;Asia/Dushanbe&#34;,&#34;Asia/Famagusta&#34;,&#34;Asia/Gaza&#34;,&#34;Asia/Hebron&#34;,&#34;Asia/Ho_Chi_Minh&#34;,&#34;Asia/Hong_Kong&#34;,&#34;Asia/Hovd&#34;,&#34;Asia/Irkutsk&#34;,&#34;Asia/Jakarta&#34;,&#34;Asia/Jayapura&#34;,&#34;Asia/Jerusalem&#34;,&#34;Asia/Kabul&#34;,&#34;Asia/Kamchatka&#34;,&#34;Asia/Karachi&#34;,&#34;Asia/Kathmandu&#34;,&#34;Asia/Khandyga&#34;,&#34;Asia/Kolkata&#34;,&#34;Asia/Krasnoyarsk&#34;,&#34;Asia/Kuala_Lumpur&#34;,&#34;Asia/Kuching&#34;,&#34;Asia/Macau&#34;,&#34;Asia/Magadan&#34;,&#34;Asia/Makassar&#34;,&#34;Asia/Manila&#34;,&#34;Asia/Nicosia&#34;,&#34;Asia/Novokuznetsk&#34;,&#34;Asia/Novosibirsk&#34;,&#34;Asia/Omsk&#34;,&#34;Asia/Oral&#34;,&#34;Asia/Pontianak&#34;,&#34;Asia/Pyongyang&#34;,&#34;Asia/Qatar&#34;,&#34;Asia/Qostanay&#34;,&#34;Asia/Qyzylorda&#34;,&#34;Asia/Riyadh&#34;,&#34;Asia/Sakhalin&#34;,&#34;Asia/Samarkand&#34;,&#34;Asia/Seoul&#34;,&#34;Asia/Shanghai&#34;,&#34;Asia/Singapore&#34;,&#34;Asia/Srednekolymsk&#34;,&#34;Asia/Taipei&#34;,&#34;Asia/Tashkent&#34;,&#34;Asia/Tbilisi&#34;,&#34;Asia/Tehran&#34;,&#34;Asia/Thimphu&#34;,&#34;Asia/Tokyo&#34;,&#34;Asia/Tomsk&#34;,&#34;Asia/Ulaanbaatar&#34;,&#34;Asia/Urumqi&#34;,&#34;Asia/Ust-Nera&#34;,&#34;Asia/Vladivostok&#34;,&#34;Asia/Yakutsk&#34;,&#34;Asia/Yangon&#34;,&#34;Asia/Yekaterinburg&#34;,&#34;Asia/Yerevan&#34;,&#34;Atlantic/Azores&#34;,&#34;Atlantic/Bermuda&#34;,&#34;Atlantic/Canary&#34;,&#34;Atlantic/Cape_Verde&#34;,&#34;Atlantic/Faroe&#34;,&#34;Atlantic/Madeira&#34;,&#34;Atlantic/Reykjavik&#34;,&#34;Atlantic/South_Georgia&#34;,&#34;Atlantic/Stanley&#34;,&#34;Australia/Adelaide&#34;,&#34;Australia/Brisbane&#34;,&#34;Australia/Broken_Hill&#34;,&#34;Australia/Darwin&#34;,&#34;Australia/Eucla&#34;,&#34;Australia/Hobart&#34;,&#34;Australia/Lindeman&#34;,&#34;Australia/Lord_Howe&#34;,&#34;Australia/Melbourne&#34;,&#34;Australia/Perth&#34;,&#34;Australia/Sydney&#34;,&#34;CET&#34;,&#34;CST6CDT&#34;,&#34;EET&#34;,&#34;EST&#34;,&#34;EST5EDT&#34;,&#34;Etc/GMT&#34;,&#34;Etc/GMT+1&#34;,&#34;Etc/GMT+10&#34;,&#34;Etc/GMT+11&#34;,&#34;Etc/GMT+12&#34;,&#34;Etc/GMT+2&#34;,&#34;Etc/GMT+3&#34;,&#34;Etc/GMT+4&#34;,&#34;Etc/GMT+5&#34;,&#34;Etc/GMT+6&#34;,&#34;Etc/GMT+7&#34;,&#34;Etc/GMT+8&#34;,&#34;Etc/GMT+9&#34;,&#34;Etc/GMT-1&#34;,&#34;Etc/GMT-10&#34;,&#34;Etc/GMT-11&#34;,&#34;Etc/GMT-12&#34;,&#34;Etc/GMT-13&#34;,&#34;Etc/GMT-14&#34;,&#34;Etc/GMT-2&#34;,&#34;Etc/GMT-3&#34;,&#34;Etc/GMT-4&#34;,&#34;Etc/GMT-5&#34;,&#34;Etc/GMT-6&#34;,&#34;Etc/GMT-7&#34;,&#34;Etc/GMT-8&#34;,&#34;Etc/GMT-9&#34;,&#34;Etc/UTC&#34;,&#34;Europe/Amsterdam&#34;,&#34;Europe/Andorra&#34;,&#34;Europe/Astrakhan&#34;,&#34;Europe/Athens&#34;,&#34;Europe/Belgrade&#34;,&#34;Europe/Berlin&#34;,&#34;Europe/Brussels&#34;,&#34;Europe/Bucharest&#34;,&#34;Europe/Budapest&#34;,&#34;Europe/Chisinau&#34;,&#34;Europe/Copenhagen&#34;,&#34;Europe/Dublin&#34;,&#34;Europe/Gibraltar&#34;,&#34;Europe/Helsinki&#34;,&#34;Europe/Istanbul&#34;,&#34;Europe/Kaliningrad&#34;,&#34;Europe/Kiev&#34;,&#34;Europe/Kirov&#34;,&#34;Europe/Lisbon&#34;,&#34;Europe/London&#34;,&#34;Europe/Luxembourg&#34;,&#34;Europe/Madrid&#34;,&#34;Europe/Malta&#34;,&#34;Europe/Minsk&#34;,&#34;Europe/Monaco&#34;,&#34;Europe/Moscow&#34;,&#34;Europe/Oslo&#34;,&#34;Europe/Paris&#34;,&#34;Europe/Prague&#34;,&#34;Europe/Riga&#34;,&#34;Europe/Rome&#34;,&#34;Europe/Samara&#34;,&#34;Europe/Saratov&#34;,&#34;Europe/Simferopol&#34;,&#34;Europe/Sofia&#34;,&#34;Europe/Stockholm&#34;,&#34;Europe/Tallinn&#34;,&#34;Europe/Tirane&#34;,&#34;Europe/Ulyanovsk&#34;,&#34;Europe/Uzhgorod&#34;,&#34;Europe/Vienna&#34;,&#34;Europe/Vilnius&#34;,&#34;Europe/Volgograd&#34;,&#34;Europe/Warsaw&#34;,&#34;Europe/Zaporozhye&#34;,&#34;Europe/Zurich&#34;,&#34;HST&#34;,&#34;Indian/Chagos&#34;,&#34;Indian/Christmas&#34;,&#34;Indian/Cocos&#34;,&#34;Indian/Kerguelen&#34;,&#34;Indian/Mahe&#34;,&#34;Indian/Maldives&#34;,&#34;Indian/Mauritius&#34;,&#34;Indian/Reunion&#34;,&#34;MET&#34;,&#34;MST&#34;,&#34;MST7MDT&#34;,&#34;PST8PDT&#34;,&#34;Pacific/Apia&#34;,&#34;Pacific/Auckland&#34;,&#34;Pacific/Bougainville&#34;,&#34;Pacific/Chatham&#34;,&#34;Pacific/Chuuk&#34;,&#34;Pacific/Easter&#34;,&#34;Pacific/Efate&#34;,&#34;Pacific/Enderbury&#34;,&#34;Pacific/Fakaofo&#34;,&#34;Pacific/Fiji&#34;,&#34;Pacific/Funafuti&#34;,&#34;Pacific/Galapagos&#34;,&#34;Pacific/Gambier&#34;,&#34;Pacific/Guadalcanal&#34;,&#34;Pacific/Guam&#34;,&#34;Pacific/Honolulu&#34;,&#34;Pacific/Kiritimati&#34;,&#34;Pacific/Kosrae&#34;,&#34;Pacific/Kwajalein&#34;,&#34;Pacific/Majuro&#34;,&#34;Pacific/Marquesas&#34;,&#34;Pacific/Nauru&#34;,&#34;Pacific/Niue&#34;,&#34;Pacific/Norfolk&#34;,&#34;Pacific/Noumea&#34;,&#34;Pacific/Pago_Pago&#34;,&#34;Pacific/Palau&#34;,&#34;Pacific/Pitcairn&#34;,&#34;Pacific/Pohnpei&#34;,&#34;Pacific/Port_Moresby&#34;,&#34;Pacific/Rarotonga&#34;,&#34;Pacific/Tahiti&#34;,&#34;Pacific/Tarawa&#34;,&#34;Pacific/Tongatapu&#34;,&#34;Pacific/Wake&#34;,&#34;Pacific/Wallis&#34;,&#34;WET&#34;] &lt;bound method Response.json of &lt;Response [200]&gt;&gt; . try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;list&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? [&#39;Africa/Abidjan&#39;, &#39;Africa/Accra&#39;, &#39;Africa/Algiers&#39;, &#39;Africa/Bissau&#39;, &#39;Africa/Cairo&#39;, &#39;Africa/Casablanca&#39;, &#39;Africa/Ceuta&#39;, &#39;Africa/El_Aaiun&#39;, &#39;Africa/Johannesburg&#39;, &#39;Africa/Juba&#39;, &#39;Africa/Khartoum&#39;, &#39;Africa/Lagos&#39;, &#39;Africa/Maputo&#39;, &#39;Africa/Monrovia&#39;, &#39;Africa/Nairobi&#39;, &#39;Africa/Ndjamena&#39;, &#39;Africa/Sao_Tome&#39;, &#39;Africa/Tripoli&#39;, &#39;Africa/Tunis&#39;, &#39;Africa/Windhoek&#39;, &#39;America/Adak&#39;, &#39;America/Anchorage&#39;, &#39;America/Araguaina&#39;, &#39;America/Argentina/Buenos_Aires&#39;, &#39;America/Argentina/Catamarca&#39;, &#39;America/Argentina/Cordoba&#39;, &#39;America/Argentina/Jujuy&#39;, &#39;America/Argentina/La_Rioja&#39;, &#39;America/Argentina/Mendoza&#39;, &#39;America/Argentina/Rio_Gallegos&#39;, &#39;America/Argentina/Salta&#39;, &#39;America/Argentina/San_Juan&#39;, &#39;America/Argentina/San_Luis&#39;, &#39;America/Argentina/Tucuman&#39;, &#39;America/Argentina/Ushuaia&#39;, &#39;America/Asuncion&#39;, &#39;America/Atikokan&#39;, &#39;America/Bahia&#39;, &#39;America/Bahia_Banderas&#39;, &#39;America/Barbados&#39;, &#39;America/Belem&#39;, &#39;America/Belize&#39;, &#39;America/Blanc-Sablon&#39;, &#39;America/Boa_Vista&#39;, &#39;America/Bogota&#39;, &#39;America/Boise&#39;, &#39;America/Cambridge_Bay&#39;, &#39;America/Campo_Grande&#39;, &#39;America/Cancun&#39;, &#39;America/Caracas&#39;, &#39;America/Cayenne&#39;, &#39;America/Chicago&#39;, &#39;America/Chihuahua&#39;, &#39;America/Costa_Rica&#39;, &#39;America/Creston&#39;, &#39;America/Cuiaba&#39;, &#39;America/Curacao&#39;, &#39;America/Danmarkshavn&#39;, &#39;America/Dawson&#39;, &#39;America/Dawson_Creek&#39;, &#39;America/Denver&#39;, &#39;America/Detroit&#39;, &#39;America/Edmonton&#39;, &#39;America/Eirunepe&#39;, &#39;America/El_Salvador&#39;, &#39;America/Fort_Nelson&#39;, &#39;America/Fortaleza&#39;, &#39;America/Glace_Bay&#39;, &#39;America/Goose_Bay&#39;, &#39;America/Grand_Turk&#39;, &#39;America/Guatemala&#39;, &#39;America/Guayaquil&#39;, &#39;America/Guyana&#39;, &#39;America/Halifax&#39;, &#39;America/Havana&#39;, &#39;America/Hermosillo&#39;, &#39;America/Indiana/Indianapolis&#39;, &#39;America/Indiana/Knox&#39;, &#39;America/Indiana/Marengo&#39;, &#39;America/Indiana/Petersburg&#39;, &#39;America/Indiana/Tell_City&#39;, &#39;America/Indiana/Vevay&#39;, &#39;America/Indiana/Vincennes&#39;, &#39;America/Indiana/Winamac&#39;, &#39;America/Inuvik&#39;, &#39;America/Iqaluit&#39;, &#39;America/Jamaica&#39;, &#39;America/Juneau&#39;, &#39;America/Kentucky/Louisville&#39;, &#39;America/Kentucky/Monticello&#39;, &#39;America/La_Paz&#39;, &#39;America/Lima&#39;, &#39;America/Los_Angeles&#39;, &#39;America/Maceio&#39;, &#39;America/Managua&#39;, &#39;America/Manaus&#39;, &#39;America/Martinique&#39;, &#39;America/Matamoros&#39;, &#39;America/Mazatlan&#39;, &#39;America/Menominee&#39;, &#39;America/Merida&#39;, &#39;America/Metlakatla&#39;, &#39;America/Mexico_City&#39;, &#39;America/Miquelon&#39;, &#39;America/Moncton&#39;, &#39;America/Monterrey&#39;, &#39;America/Montevideo&#39;, &#39;America/Nassau&#39;, &#39;America/New_York&#39;, &#39;America/Nipigon&#39;, &#39;America/Nome&#39;, &#39;America/Noronha&#39;, &#39;America/North_Dakota/Beulah&#39;, &#39;America/North_Dakota/Center&#39;, &#39;America/North_Dakota/New_Salem&#39;, &#39;America/Nuuk&#39;, &#39;America/Ojinaga&#39;, &#39;America/Panama&#39;, &#39;America/Pangnirtung&#39;, &#39;America/Paramaribo&#39;, &#39;America/Phoenix&#39;, &#39;America/Port-au-Prince&#39;, &#39;America/Port_of_Spain&#39;, &#39;America/Porto_Velho&#39;, &#39;America/Puerto_Rico&#39;, &#39;America/Punta_Arenas&#39;, &#39;America/Rainy_River&#39;, &#39;America/Rankin_Inlet&#39;, &#39;America/Recife&#39;, &#39;America/Regina&#39;, &#39;America/Resolute&#39;, &#39;America/Rio_Branco&#39;, &#39;America/Santarem&#39;, &#39;America/Santiago&#39;, &#39;America/Santo_Domingo&#39;, &#39;America/Sao_Paulo&#39;, &#39;America/Scoresbysund&#39;, &#39;America/Sitka&#39;, &#39;America/St_Johns&#39;, &#39;America/Swift_Current&#39;, &#39;America/Tegucigalpa&#39;, &#39;America/Thule&#39;, &#39;America/Thunder_Bay&#39;, &#39;America/Tijuana&#39;, &#39;America/Toronto&#39;, &#39;America/Vancouver&#39;, &#39;America/Whitehorse&#39;, &#39;America/Winnipeg&#39;, &#39;America/Yakutat&#39;, &#39;America/Yellowknife&#39;, &#39;Antarctica/Casey&#39;, &#39;Antarctica/Davis&#39;, &#39;Antarctica/DumontDUrville&#39;, &#39;Antarctica/Macquarie&#39;, &#39;Antarctica/Mawson&#39;, &#39;Antarctica/Palmer&#39;, &#39;Antarctica/Rothera&#39;, &#39;Antarctica/Syowa&#39;, &#39;Antarctica/Troll&#39;, &#39;Antarctica/Vostok&#39;, &#39;Asia/Almaty&#39;, &#39;Asia/Amman&#39;, &#39;Asia/Anadyr&#39;, &#39;Asia/Aqtau&#39;, &#39;Asia/Aqtobe&#39;, &#39;Asia/Ashgabat&#39;, &#39;Asia/Atyrau&#39;, &#39;Asia/Baghdad&#39;, &#39;Asia/Baku&#39;, &#39;Asia/Bangkok&#39;, &#39;Asia/Barnaul&#39;, &#39;Asia/Beirut&#39;, &#39;Asia/Bishkek&#39;, &#39;Asia/Brunei&#39;, &#39;Asia/Chita&#39;, &#39;Asia/Choibalsan&#39;, &#39;Asia/Colombo&#39;, &#39;Asia/Damascus&#39;, &#39;Asia/Dhaka&#39;, &#39;Asia/Dili&#39;, &#39;Asia/Dubai&#39;, &#39;Asia/Dushanbe&#39;, &#39;Asia/Famagusta&#39;, &#39;Asia/Gaza&#39;, &#39;Asia/Hebron&#39;, &#39;Asia/Ho_Chi_Minh&#39;, &#39;Asia/Hong_Kong&#39;, &#39;Asia/Hovd&#39;, &#39;Asia/Irkutsk&#39;, &#39;Asia/Jakarta&#39;, &#39;Asia/Jayapura&#39;, &#39;Asia/Jerusalem&#39;, &#39;Asia/Kabul&#39;, &#39;Asia/Kamchatka&#39;, &#39;Asia/Karachi&#39;, &#39;Asia/Kathmandu&#39;, &#39;Asia/Khandyga&#39;, &#39;Asia/Kolkata&#39;, &#39;Asia/Krasnoyarsk&#39;, &#39;Asia/Kuala_Lumpur&#39;, &#39;Asia/Kuching&#39;, &#39;Asia/Macau&#39;, &#39;Asia/Magadan&#39;, &#39;Asia/Makassar&#39;, &#39;Asia/Manila&#39;, &#39;Asia/Nicosia&#39;, &#39;Asia/Novokuznetsk&#39;, &#39;Asia/Novosibirsk&#39;, &#39;Asia/Omsk&#39;, &#39;Asia/Oral&#39;, &#39;Asia/Pontianak&#39;, &#39;Asia/Pyongyang&#39;, &#39;Asia/Qatar&#39;, &#39;Asia/Qostanay&#39;, &#39;Asia/Qyzylorda&#39;, &#39;Asia/Riyadh&#39;, &#39;Asia/Sakhalin&#39;, &#39;Asia/Samarkand&#39;, &#39;Asia/Seoul&#39;, &#39;Asia/Shanghai&#39;, &#39;Asia/Singapore&#39;, &#39;Asia/Srednekolymsk&#39;, &#39;Asia/Taipei&#39;, &#39;Asia/Tashkent&#39;, &#39;Asia/Tbilisi&#39;, &#39;Asia/Tehran&#39;, &#39;Asia/Thimphu&#39;, &#39;Asia/Tokyo&#39;, &#39;Asia/Tomsk&#39;, &#39;Asia/Ulaanbaatar&#39;, &#39;Asia/Urumqi&#39;, &#39;Asia/Ust-Nera&#39;, &#39;Asia/Vladivostok&#39;, &#39;Asia/Yakutsk&#39;, &#39;Asia/Yangon&#39;, &#39;Asia/Yekaterinburg&#39;, &#39;Asia/Yerevan&#39;, &#39;Atlantic/Azores&#39;, &#39;Atlantic/Bermuda&#39;, &#39;Atlantic/Canary&#39;, &#39;Atlantic/Cape_Verde&#39;, &#39;Atlantic/Faroe&#39;, &#39;Atlantic/Madeira&#39;, &#39;Atlantic/Reykjavik&#39;, &#39;Atlantic/South_Georgia&#39;, &#39;Atlantic/Stanley&#39;, &#39;Australia/Adelaide&#39;, &#39;Australia/Brisbane&#39;, &#39;Australia/Broken_Hill&#39;, &#39;Australia/Darwin&#39;, &#39;Australia/Eucla&#39;, &#39;Australia/Hobart&#39;, &#39;Australia/Lindeman&#39;, &#39;Australia/Lord_Howe&#39;, &#39;Australia/Melbourne&#39;, &#39;Australia/Perth&#39;, &#39;Australia/Sydney&#39;, &#39;CET&#39;, &#39;CST6CDT&#39;, &#39;EET&#39;, &#39;EST&#39;, &#39;EST5EDT&#39;, &#39;Etc/GMT&#39;, &#39;Etc/GMT+1&#39;, &#39;Etc/GMT+10&#39;, &#39;Etc/GMT+11&#39;, &#39;Etc/GMT+12&#39;, &#39;Etc/GMT+2&#39;, &#39;Etc/GMT+3&#39;, &#39;Etc/GMT+4&#39;, &#39;Etc/GMT+5&#39;, &#39;Etc/GMT+6&#39;, &#39;Etc/GMT+7&#39;, &#39;Etc/GMT+8&#39;, &#39;Etc/GMT+9&#39;, &#39;Etc/GMT-1&#39;, &#39;Etc/GMT-10&#39;, &#39;Etc/GMT-11&#39;, &#39;Etc/GMT-12&#39;, &#39;Etc/GMT-13&#39;, &#39;Etc/GMT-14&#39;, &#39;Etc/GMT-2&#39;, &#39;Etc/GMT-3&#39;, &#39;Etc/GMT-4&#39;, &#39;Etc/GMT-5&#39;, &#39;Etc/GMT-6&#39;, &#39;Etc/GMT-7&#39;, &#39;Etc/GMT-8&#39;, &#39;Etc/GMT-9&#39;, &#39;Etc/UTC&#39;, &#39;Europe/Amsterdam&#39;, &#39;Europe/Andorra&#39;, &#39;Europe/Astrakhan&#39;, &#39;Europe/Athens&#39;, &#39;Europe/Belgrade&#39;, &#39;Europe/Berlin&#39;, &#39;Europe/Brussels&#39;, &#39;Europe/Bucharest&#39;, &#39;Europe/Budapest&#39;, &#39;Europe/Chisinau&#39;, &#39;Europe/Copenhagen&#39;, &#39;Europe/Dublin&#39;, &#39;Europe/Gibraltar&#39;, &#39;Europe/Helsinki&#39;, &#39;Europe/Istanbul&#39;, &#39;Europe/Kaliningrad&#39;, &#39;Europe/Kiev&#39;, &#39;Europe/Kirov&#39;, &#39;Europe/Lisbon&#39;, &#39;Europe/London&#39;, &#39;Europe/Luxembourg&#39;, &#39;Europe/Madrid&#39;, &#39;Europe/Malta&#39;, &#39;Europe/Minsk&#39;, &#39;Europe/Monaco&#39;, &#39;Europe/Moscow&#39;, &#39;Europe/Oslo&#39;, &#39;Europe/Paris&#39;, &#39;Europe/Prague&#39;, &#39;Europe/Riga&#39;, &#39;Europe/Rome&#39;, &#39;Europe/Samara&#39;, &#39;Europe/Saratov&#39;, &#39;Europe/Simferopol&#39;, &#39;Europe/Sofia&#39;, &#39;Europe/Stockholm&#39;, &#39;Europe/Tallinn&#39;, &#39;Europe/Tirane&#39;, &#39;Europe/Ulyanovsk&#39;, &#39;Europe/Uzhgorod&#39;, &#39;Europe/Vienna&#39;, &#39;Europe/Vilnius&#39;, &#39;Europe/Volgograd&#39;, &#39;Europe/Warsaw&#39;, &#39;Europe/Zaporozhye&#39;, &#39;Europe/Zurich&#39;, &#39;HST&#39;, &#39;Indian/Chagos&#39;, &#39;Indian/Christmas&#39;, &#39;Indian/Cocos&#39;, &#39;Indian/Kerguelen&#39;, &#39;Indian/Mahe&#39;, &#39;Indian/Maldives&#39;, &#39;Indian/Mauritius&#39;, &#39;Indian/Reunion&#39;, &#39;MET&#39;, &#39;MST&#39;, &#39;MST7MDT&#39;, &#39;PST8PDT&#39;, &#39;Pacific/Apia&#39;, &#39;Pacific/Auckland&#39;, &#39;Pacific/Bougainville&#39;, &#39;Pacific/Chatham&#39;, &#39;Pacific/Chuuk&#39;, &#39;Pacific/Easter&#39;, &#39;Pacific/Efate&#39;, &#39;Pacific/Enderbury&#39;, &#39;Pacific/Fakaofo&#39;, &#39;Pacific/Fiji&#39;, &#39;Pacific/Funafuti&#39;, &#39;Pacific/Galapagos&#39;, &#39;Pacific/Gambier&#39;, &#39;Pacific/Guadalcanal&#39;, &#39;Pacific/Guam&#39;, &#39;Pacific/Honolulu&#39;, &#39;Pacific/Kiritimati&#39;, &#39;Pacific/Kosrae&#39;, &#39;Pacific/Kwajalein&#39;, &#39;Pacific/Majuro&#39;, &#39;Pacific/Marquesas&#39;, &#39;Pacific/Nauru&#39;, &#39;Pacific/Niue&#39;, &#39;Pacific/Norfolk&#39;, &#39;Pacific/Noumea&#39;, &#39;Pacific/Pago_Pago&#39;, &#39;Pacific/Palau&#39;, &#39;Pacific/Pitcairn&#39;, &#39;Pacific/Pohnpei&#39;, &#39;Pacific/Port_Moresby&#39;, &#39;Pacific/Rarotonga&#39;, &#39;Pacific/Tahiti&#39;, &#39;Pacific/Tarawa&#39;, &#39;Pacific/Tongatapu&#39;, &#39;Pacific/Wake&#39;, &#39;Pacific/Wallis&#39;, &#39;WET&#39;] .",
            "url": "https://orlando-c.github.io/que-pro/2022/11/17/API.html",
            "relUrl": "/2022/11/17/API.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Week 12 Blog Review",
            "content": "Wrong Section Skill Reason Mistake . Q1 | 1.2 | 4.A | System of equations wrong, Result is multiplied by 3, 3 different intervals | Math conducted is wrong | . Q7 | 1.3 | 4.A | Unnecessary requirements in answer | Misinterpretation | . Q14 | 1.4 | 4.C | 7 provides correct answer, 6 and 8 both fall into incorrect categories | Math conducted is wrong | . Q16 | 4.1 | 5.A | Message doesn&#39;t have to be sent in order of packets | Unknown info | . Q20 | 2.1 | 1.D | There are enough 4bit combinations to store 8 directional data | Unknown info | . Q23 | 2.1 | 3.C | Samples are taken throughout his race and stored as data rather than selected | Thought process wrong | . Q24 | 2.1 | 2.B | Didn&#39;t know binary systems | Unknown info | . Q29 | 3.2 | 3.C | Lists can be updates easily (similar to being able to add user data and input easily) | Misinterpretation | . Q30 | 3.2 | 3.C | Keeping numbers in a list allow for code to just go through the line and determine | . Q31 | 3.2 | 3.A | myWord determines which part of the list, myChar determines character | Thought process wrong | . Q32 | 3.2 | 3.B | yourlist now prints mylist | Thought process wrong | . Q35 | 3.6 | 2.B | Forgot one answer | Missed input | . Q36 | 3.10 | 2.B | Multiply i by 2 to always get an even number | Math conducted is wrong | . Q41 | 3.1 | 4.B | R is 20, P &lt;- R | Thought process wrong | . Q43 | 3.8 | 4.B | Incorrect system of operations | Math conducted is wrong | . Q46 | 3.1 | 4.B | In the end, both outputs are set to true | Misinterpretation | . Q49 | 3.4 | 4.B | (reverse(word), word)(reverse(on), on)(noon) | Misinterpretation | . Overview (Score 33/50) . I definitely need to review section 4 and take some notes on some sections that I missed and I will make sure to continue those skills towards trimester 2. | . print (&quot;code code code&quot;) . code code code .",
            "url": "https://orlando-c.github.io/que-pro/2022/11/04/Week-12-Final.html",
            "relUrl": "/2022/11/04/Week-12-Final.html",
            "date": " • Nov 4, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Week 12 Blog Review",
            "content": "My experience . Personally, I liked the idea of being able to go around and see what other students are working on as well as presenting our projects to other students in the school. Presenting what our group worked on is really fun as well as seeing what we can do to improve! | . What to do next . Im hoping to learn more next trimester and working on a more ambitious project. Specifically subjects like backend and server development interest me so I&#39;m excited to look at that. | . N@TM . Here are some pictures that we took at N@TM | . Jaden taking inspo . Colin interviewing others . More interviewing . Jaden taking more inspo . Jaden taking even more inspo . The Scrum Daddys . Ethan likes ceramics?? . Big Eth just looking at some 3d ani . Here are some notes we took on other groups . Code Hoots . Questions are timed | Kahoot coding styled game | Randomized questions | . | MBAD . NBA player API | Search any team | Statistics provided for best player, etc | . | . print (&quot;No me gusta la clase de historia&quot;) . No me gusta la clase de historia .",
            "url": "https://orlando-c.github.io/que-pro/2022/11/04/Week-12-Blog.html",
            "relUrl": "/2022/11/04/Week-12-Blog.html",
            "date": " • Nov 4, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i+1) + &quot; letter in the alphabet&quot;) i += 1 . The letter a is the 1 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count+1) + &quot; letter in the alphabet&quot;) count += 1 . The letter a is the 1 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt; 101: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [0, 2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98, 100] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . Menu = {&quot;soda&quot;: 1.99, &quot;fries&quot;: 3.99, &quot;burger&quot;: 4.99, &quot;shake&quot;: 2.99, &quot;cookie&quot;: .99, &quot;chicken strips&quot;: 4.99} Total = 0 def get_order(): current_order = [] while True: Order = input(&quot;Welcome to Yung Sean, what can I get for you?&quot;) if Order in Menu: current_order.append(Order) else: print(&quot;I&#39;m sorry, we don&#39;t have that available.&quot;) continue if is_order_complete(): return current_order Total += Menu[Order] def is_order_complete(): Choice = input(&quot;Anything else? yes/no&quot;) if Choice == &quot;no&quot;: return True elif Choice == &quot;yes&quot;: return False else: raise Exception(&quot;Not available&quot;) def output_order(order_list): print(&quot;You ordered&quot;) for Order in order_list: print(Order) print(&quot;That will be &quot; + str(Total) + &quot;$&quot;) def main(): Order = get_order() output_order(Order) print(&quot;Please drive through to the second window.&quot;) if __name__ == &quot;__main__&quot;: main() . You ordered soda That will be 0$ burger That will be 0$ fries That will be 0$ Please drive through to the second window. . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://orlando-c.github.io/que-pro/2022/10/03/AP-error_testing.html",
            "relUrl": "/2022/10/03/AP-error_testing.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Dbq Overview",
            "content": "AP World History How to Write a DBQ . Paragraph #1: Introduction . Contextualization- 4 sentences with last sentence connecting to topic of essay. Must be within approx. 50 years of essay time period. . | Thesis- explicit, makes an argument, answers all parts of prompt . | . Paragraphs #2-3 (&amp; possibly 4): Body Paragraphs – Each paragraph must have . Topic sentence with a clear argument (x, y, or z of thesis) . | Summary, explanation, and HIPA sentences (ALL 7 documents must be used in your essay) . Summary sentences must begin with the name of the author or title of the document and end with the number of the document in parentheses. Example: According to Alessandra Strozzi, Francesco di Messer Tanagli is willing to marry off his daughter to her exiled son, because she has a small dowry and he has a lot of children (Doc. 1). . | HIPA sentences must start with the type of HIPA underlined (see examples below). . Historical Context - How is the document’s historical context relevant to an argument that addresses the prompt? Must include a specific event before the document was created and an explanation about how the event supports your argument. Example: The historical context of the letter is during the Renaissance parents often arranged marriages for their children to increase the power and wealth of their family, which is exactly what Strozzi is trying to do by arranging a marriage between her son and the daughter of Francesco di Messer Tanagli. . | Intended Audience/Purpose (MUST BE COMPLETED TOGETHER) - How are the document’s purpose and audience relevant to an argument that addresses the prompt? Must include an action that the author wants a specific group of people to do. Caution! Just using the verbs “tell”, “show, or “inform” is not enough to capture the action the author wants the audience to take. Example: The intended audience of the letter is Strozzi’s son with the purpose of encouraging him to accept the marriage she has arranged with Tanagli. . | Author’s Point of View - How is the document’s author’s pov relevant to an argument that addresses the prompt? Must include an aspect of the author’s identity (gender, race/ethnicity, class, profession, nationality, religion and an explanation about how that characteristic supports your argument. Example: The author’s point of view is Strozzi is a mother who wants her son to marry a wife who will advance his position in society and therefore increase the position of the whole family. . | . | . | Outside evidence (2 pieces of outside evidence per essay) . Outside evidence must be at least 2 sentences and the last sentence must end with “outside evidence” in parentheses. . | Example: Royal women were expected to marry whomever their families chose in order to form alliances and increase their country’s power. Isabelle and Ferdinand of Spain married their daughter Catherine of Aragon to Henry VIII, king of England, in order to form an alliance between their two countries and therefore increase the power of Spain (Outside Evidence). . | . | . Last Paragraph: Conclusion . Rewrite thesis to reflect the arguments of your essay* (if you have time) . | Additional Contextualization* (if you have time) . | . College Board DBQ Rubric (7 pts) . Thesis/Claim (1 pt) - Responds to the prompt with a historically defensible thesis/claim that establishes a line of reasoning. CANNOT merely restate or rephrase the prompt. May be multiple sentences. . | Contextualization (1 pt) - Describes broader historical events, developments, or processes that occur before, during, or continue after the time frame of the question. Must be more than a mere phrase or reference. . | Evidence (2 pts) - . | 1 pt. Uses the content of at least three documents to address the topic of the prompt. Simple quotes of the documents will NOT earn credit. . 2 pts. Supports an argument in response to the prompt using at least six documents. Simple quotes of the documents will NOT earn credit. . Reasoning &amp; Analysis (2 pts) - . | 1 pt. For at least three documents, explains how or why the document’s historical context, intended audience, purpose, or author’s point of view is relevant to an argument. . 2 pts. Demonstrates a complex understanding of the historical development that is the focus of the prompt, using evidence to corroborate, qualify or modify an argument that addresses the question. This understanding must be part of the argument, not merely a phrase or reference. . Below is the scoring sheet AP graders use to grade your DBQ. . A. Thesis 0 1 . B. Contextualization | | 0 1 | | | | | | | | . C. Evidence . Content Use (at least 3) . | Support Argument (at least 6) . | Evidence Beyond the Documents . | . | Doc 1 | Doc 2 | Doc 3 | Doc 4 | Doc 5 | Doc 6 | Doc 7 | 0 1 . 0 1 . 0 1 . | | . | | | | | | | | | | . | | | | | | | | | | . | | | | | | | | | | . D. Analysis &amp; Reasoning . Sourcing (at least 3) . | Complexity . | . | Doc 1 | Doc 2 | Doc 3 | Doc 4 | Doc 5 | Doc 6 | Doc 7 | 0 1 . 0 1 . | | . | | | | | | | | | | . | | | | | | | | | | .",
            "url": "https://orlando-c.github.io/que-pro/2022/09/29/DBQ-Overview.html",
            "relUrl": "/2022/09/29/DBQ-Overview.html",
            "date": " • Sep 29, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "The Magic 8-Ball",
            "content": "$(document).ready(function() { var magic8ball = {}; magic8ball.listOfAnswers = [&quot;No&quot;, &quot;Yes&quot;, &quot;I don&#39;t think so...&quot;, &quot;Theres a chance&quot;, &quot;Maybe &quot;, &quot;Of course!&quot;, &quot;Indubitably&quot;, &quot;In your dreams.&quot;]; var question = window.prompt(&quot;What is your question?&quot;); document.write(&quot;You wrote&quot; + question); var randomNumber = Math.random(); var randomNumberForListOfAnswers = randomNumber * this.listOfAnswers.length; var randomIndex = Math.floor(randomNumberForListOfAnswers); var answer = this.listOfAnswers[randomIndex]; $(&quot;#answer&quot;).text(answer); }); .",
            "url": "https://orlando-c.github.io/que-pro/2022/09/26/The-Magic-8ball.html",
            "relUrl": "/2022/09/26/The-Magic-8ball.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Week 5 Assignment Scrum Board",
            "content": "To Do Work In Progress Completed Deployed Reviewed . - | Adding page to flask portfolio | - | - | Agile Methodology Poster | . !pwd from IPython.display import Image Image(url=&quot;images/af.jpg&quot;, width=864, height=1152) . /home/theca/vscode/que-pro/_notebooks .",
            "url": "https://orlando-c.github.io/que-pro/python/markdown/week-5/apcsp/2022/09/24/Agile-Methodology.html",
            "relUrl": "/python/markdown/week-5/apcsp/2022/09/24/Agile-Methodology.html",
            "date": " • Sep 24, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Javascript Moment",
            "content": "Weekly | Games | Java Demo | Timezone API | . . function game(name, genre, year, players) { this.name = name; this.genre = genre; this.year = year; this.players = players; this.role = &quot;&quot;; } game.prototype.setRole = function(role) { this.role = role; } game.prototype.toJSON = function() { const obj = {name: this.name, genre: this.genre, year: this.year, players: this.players, role: this.role}; const json = JSON.stringify(obj); return json; } var movies = new game(&quot;Uncharted&quot;, &quot;Action&quot;, &quot;2022&quot;, &quot;n/a&quot;); logItType(movies); logItType(movies.toJSON()); movies.setRole(&quot;Movie&quot;); logItType(movies); logItType(movies.toJSON()); . evalmachine.&lt;anonymous&gt;:20 logItType(movies); ^ ReferenceError: logItType is not defined at evalmachine.&lt;anonymous&gt;:20:1 at ContextifyScript.Script.runInThisContext (vm.js:25:33) at Object.runInThisContext (vm.js:97:38) at run ([eval]:1020:15) at onRunRequest ([eval]:864:18) at onMessage ([eval]:828:13) at emitTwo (events.js:106:13) at process.emit (events.js:191:7) at process.nextTick (internal/child_process.js:758:12) at _combinedTickCallback (internal/process/next_tick.js:73:7) . var games = [ new game(&quot;Minecraft&quot;, &quot;Sandbox&quot;, &quot;2011&quot;, &quot;141 Million&quot;), new game(&quot;R6S&quot;, &quot;FPS&quot;, &quot;2015&quot;, &quot;70 Million&quot;), new game(&quot;Fortnite&quot;, &quot;3rd Person BR&quot;, &quot;2017&quot;, &quot;270 Million&quot;), new game(&quot;Apex&quot;, &quot;1st Person BR&quot;, &quot;2019&quot;, &quot;~100 Million&quot;), new game(&quot;Roblox&quot;, &quot;Sandbox&quot;, &quot;2006&quot;, &quot;230 Million&quot;), new game(&quot;Pokemon Go&quot;, &quot;Augmented Reality&quot;, &quot;2016&quot;, &quot;632 Million&quot;), new game(&quot;Halo Infinite&quot;, &quot;FPS&quot;, &quot;2021&quot;, &quot;20 Million&quot;), new game(&quot;Terraria&quot;, &quot;Sandbox&quot;, &quot;2011&quot;, &quot;~66 Million&quot;), ] function Theatre(movies, games){ movies.setRole(&quot;Movie&quot;); this.movies = movies; this.theatre = [movies]; this.games = games; this.games.forEach(game =&gt; { game.setRole(&quot;Game&quot;); this.theatre.push(game); }); this.json = []; this.theatre.forEach(game =&gt; this.json.push(game.toJSON())); } compsci = new Theatre(movies, games); logItType(compsci.theatre); logItType(compsci.theatre[0].name); logItType(compsci.json[0]); logItType(JSON.parse(compsci.json[0])); . Classroom.prototype._toHtml = function() { var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; ); var body = &quot;&quot;; body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Genre&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Year&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Players&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; for (var row of compsci.classroom) { body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.genre + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.year + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.players + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; } return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; $$.html(compsci._toHtml()); .",
            "url": "https://orlando-c.github.io/que-pro/2022/09/22/Javascript-Test.html",
            "relUrl": "/2022/09/22/Javascript-Test.html",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "Agile Methodology",
            "content": "Main Ideas Purpose Implementation . Program Purpose | So I can preview changes to my fastpages and flask portfolio without having to commit | Follow instructions to create local host and also be able to sync fastpages and flask portfolio | . Procedural Abstraction | When you make changes in your repositories in VsCode or Github, the changes are near instantaneous | Followed the instructions to achieve maximum available opportunity | . Testing | Make sure both operations are fully functional | Run through all tests and prepare the operations for week 4 recording and are ready to go for next week! | . Extra | This week was also focused on mental health and taking breaks to better help ourselves | This week I tried multiple ways to relax and also do extra homework on the weekend to relieve myself | . print(&quot;I do this because i dont like .md formatting&quot;) .",
            "url": "https://orlando-c.github.io/que-pro/2022/09/20/Week-4-Reflection.html",
            "relUrl": "/2022/09/20/Week-4-Reflection.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "Ap World Visiting Cities On The Silk Roads",
            "content": "AP World History . Visiting Cities Along the Silk Roads . Instructions: You will travel the Silk Road by visiting cities on the trading routes. Look at the objects and pictures at the locations you chose to visit, read the description in the speaker notes, and answer the questions below. . ALEPPO . Bazar . 1) What is a bazar? . Large covered area with hundreds of stalls for marketers and traders to trade or sell their items. . 2) Why is Aleppo’s bazar prominent? How did it contribute to cultural exchange along the Silk Roads? . Aleppo’s bazar was massive and was able to hold more than 1000 stalls for marketers and traders. It was within the crossroads of multiple paths and trails where traders would come in and out through. . | Citadel . 1) Describe the significance of the location of Aleppo’s citadel. . Aleppo’s ancient city home was the citadel which was their representation of religion and also served as a place of religious trade for others. . 2) How has Aleppo’s citadel contributed to the economic development of the city? . The city grew massively due to the economic growth that occurred because of all the trade incoming. . | . MECCA &amp; JEDDAH . Drawing of Jeddah . 1) List two factors that made Jeddah an important city along the Silk Roads. . Jeddah was a port city and grew massively because of the amount of trade increasing wealth in the city. . 2) How did Jeddah’s proximity to Mecca impact trade in the city? . Many religious aspects affected the city and may have limited or extended trade to others . | Zamzam Water Flasks . 1) What does the difference in the style of these two flasks represent? . The flasks were used to bring holy water. The flasks were sometimes a softer material (more likely leather) or sometimes made of porcelain. . | . MOSUL . Coin . 1) Describe the two sides of the coin – what do you see on both sides? . One side has the face of Mosul, the leader at the time and the other, writing that could possibly be religious. . 2) Do you think that encountering different currencies posed a challenge for people trading along the Silk Road? Why or why not? . Possibly yes because there weren’t exact exchange rates and also the coins had different values themselves leading to more disorganization and division . | The Blacas Ewer . 1) What products was Mosul famous for producing? . Crude oil, fine metalwork, and textile production. . 2) What was the effect on rising and declining empires and dynasties on various cities along the Silk Roads? . The rise of states lead to more trade between states and more ideas to states as well. . | . KHOTAN . Khotanese Princess . 1) What was the influence of Khotanese jade? . Made Khotan an important stop on the silk roads because of the fine Jade and large trade. . 2) What is one cultural expression of Khotanese jade seen in this picture? . Scholarship and education of China. . | Sutra of the Wise and the Foolish . 1) How did the movement of Buddhism impact Khotan? . Buddhism was first introduced to China in Khotan and spread from there with new ideologies and teachings. . 2) Name one way that Buddhism spread. . Buddhism spread through trade or trade/religious hubs where teachings or sayings were spread. . | . QUANZHOU . Ancient Map of Maritime Silk Roads . 1) Name two things this ancient map tells us about the Silk Road. . The map tells us where the Silk Roads transitioned into ports and into the Sea Roads further expanding the map of trade. . 2) Why was Quanzhou important to the Silk Road? . Quanzhou had multiple ports and paths leading into the city and served as a central hub for trade. . | Religious . 1) With the continuous flow of travelers, how did the Silk Road influence Quanzhou? . Quanzhou was heavily influenced by the roads because they received a lot of trade and gradually became more diverse and wealthier. . | .",
            "url": "https://orlando-c.github.io/que-pro/2022/09/20/AP-World-Visiting-Cities-on-the-Silk-Roads.html",
            "relUrl": "/2022/09/20/AP-World-Visiting-Cities-on-the-Silk-Roads.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "Cinderella Comparison Chart",
            "content": "  . First &amp; Last Name: Period: | . Cinderella Story Comparison Graphic Organizer . What lessons or morals are demonstrated in this version of Cinderella? Share at least two. What does this culture value? (What are the beliefs of this culture?) . Share at least two. . What might be some symbols in this story? AND What could they represent? Share at least two. Taking a deeper dive: Research credible sources and find out if the culture in this region/area THEN AND/OR NOW has the same lessons/morals, values/beliefs, and/or symbols/representations. Share if they are the same or how they are now different. Site source (can paste the URL) - Take your time and look at multiple sources. Look at .edu sites, .gov sites - tourism sites or historical sites. Use Google Advanced Search to help you. . Version #1 . “Yeh Shen” . Chinese Cinderella Story . | Whatever comes around goes around . | Don’t judge a book by its cover . | Inner beauty matches outer beauty . | . | Multiple wives . | Animals or animals with spirits . | Values old people and their wisdom . | . | Fish bones : Fairy godmother . | Dagger : Death . | Tears in the pond : Love . | Golden shoe . | Old Man : Wisdom . | . | During the tang dynasty . | Patriarchy . | Women beauty standards . | Men were above women . | China respects others for thousands of years . | . https://carnegieendowment.org/2013/11/21/china-s-traditional-cultural-values-and-national-identity-pub-53613 . | . Version #2 . “The Golden Sandal” . A Middle Eastern Cinderella Story . | Don’t judge a book by . | . its cover . Treat others how you want to be treated . | Karma . | Kindness goes a long way . | . | King marries one woman . | . Weddings/Henna . | Woman stays home . | Belief in a god . | Mother is valued and gives blessing . | Fine clothing . | . | Red Fish : Fairy godmother . | . Perfume : Karma . | . Fine Clothing : Her dress . | . Rooster : Maha’s savior . | . Golden Sandals : Purity . | . | Men worked/ruled kingdoms - Patriarchy . | Middle East - Arab / Muslim Culture . | Massive culture (land and philosophical wise) . | Woman are valued more than other cultures and civilizations . | Represent family and culture . | . https://www.osti.gov/biblio/5537055 . | . Version #3: . “Mufaro’s Beautiful Daughters” . African Cinderella Story . | Treat others how you want to be treated . | Stay close to earth/be humble . | Don’t envy others . | Don’t be selfish . | What comes around goes around . | . | Wedding party . | Wedding Feast . | Family and relationships . | . | Sunflower seeds/Yams : Kindness . | Mysterious Woman/Spirit : Karma . | . King/Crossing river : Test of purity . | . Fine clothing : Dress . | . First light of dawn : New day/Change . | . | African Folktale . | 5 points -&gt; crown . | Textiles can be forms of communication . | Belief in spirits and traditions . | Different art, traditions, and religions . | No person is more beautiful or ugly . | . https://journals.co.za/doi/epdf/10.10520/EJC189182 . | . Version #4 . “Rough Faced Girl” . American Indigenous Story . | Be truthful to yourself . | Don&#39;t be selfish or envious of others. . | . Don&#39;t judge a book by its cover . | . Lying gets you nowhere . | . | Marriage . | Truthfulness . | . Nature . | . Clothing of animal skins . | . People of truth/kind heart . | . Beauty and appreciation of nature . | . | Wigwam : Divinity or knowledge . | . Fire and scars : . | . Invisible man’s bow : Truth . | . Moccasins, broken shells, buckskin: Family . | . Stars : Truth or Wisdom . | . Invisible man : Purity . | . | Worship and value nature and purity . | Theres a lot of diversity between tribes including traditions and stories . | Many different stories between tribes . | Trying to keep beliefs and traditions alive today due to cultural decline . | . https://www.proquest.com/docview/2589646780/868CEEA2DE404EE6PQ/3?accountid=134741 . | . Version #5 . Story Name Here . | Love and respect everyone . | Don’t judge a book by its cover . | Don&#39;t be jealous or envious of others success . | . | Hardships of families and work . | Love for family . | Respect for others . | . | Nopales : Love . | Malvina : Deception or lies . | Manton : Family heritage or caring . | Mama : Purity or respect for others. . | Mud Bricks : Hardships of life . | . | Food is integral to Mexican culture . | Family is important and you should love and care for them . | Mexican culture really focuses on tradition and love especially for each other and taking care of others. Doing things out of the goodwill of your heart. . | . https://www.donquijote.org/mexican-culture/ . | .",
            "url": "https://orlando-c.github.io/que-pro/2022/09/19/Cinderella-Comparison-Chart.html",
            "relUrl": "/2022/09/19/Cinderella-Comparison-Chart.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "Apcsp Plan For Flask Portfolio Group Project",
            "content": "APCSP Plan for Flask Portfolio Group Project . Ideas Planning Execution . Show demonstration of how local server can be used . | . Show changes to both github repository and flask repository . | . | Keep video longer than 59 seconds . | . Use ideas in a formative way of sampling . | . Show changes that you made to fastpages . | . Show work done to complete flask . | . | Edit video to ensure minimum is reached . | . - Make sure to include ideas . Follow planning instructions to ensure maximum points are achieved . | . | .",
            "url": "https://orlando-c.github.io/que-pro/2022/09/19/APCSP-Plan-for-Flask-Portfolio-Group-Project.html",
            "relUrl": "/2022/09/19/APCSP-Plan-for-Flask-Portfolio-Group-Project.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "Back To School Night Schedule",
            "content": "Period Classroom Teacher . 1 | L114 | Volger | . 2 | B123 | Cole | . 3 | R303 | Friedemann | . 4 | G113 | James | . 5 | A101 | Yeung | . print(&quot;hola&quot;) .",
            "url": "https://orlando-c.github.io/que-pro/backtoschoolnight/2022/09/12/back-to-skool-nite.html",
            "relUrl": "/backtoschoolnight/2022/09/12/back-to-skool-nite.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "Clash Royale in App Lab!",
            "content": "Before . Gather ideas for what I&#39;m going to make and how | Get all resources needed (images, references, etc) | Mess around and watch tutorials to get used to java | . During . Using limited knowledge, I used simple terms to get the job done efficiently and with the least amount of confusion | Use varying aspects of Code.Org and try to implement interesting ways to change up my clash quiz | Added a timer like the real game where you have to finish the quiz before the timer ends or you choose the wrong option | . Reflection . Main Ideas Purpose Implementation . Program Purpose | For the user to enjoy my fun and easy quiz | The quiz is heavily relied on user interaction and how their choices affect them | . Data Abstraction | Count points (crowns) for player and timer | Resemblance of game | . Complexity | Objective is to keep it simple | Just mainly code reliant on buttons and repeated code to keep it simple and reduce complex load | . Procedural Abstraction | Once you finish the match, you are taken to a reward screen | Reward screen reveals a new card that you can use in game | . Algorithm Implementation | Using a timer | The timer goes through a loop function to count down from 3 minuites when &quot;Battle!&quot; is clicked | . Testing | Make sure quiz is fully functional | Run through all variables and options within the quiz to verify everything is operational and ready to go! | . The link to my quiz! | . Clash Royale App Lab Quiz . Code is below | . var startTime; var isRunning = false; onEvent (&quot;startquiz&quot;, &quot;click&quot;, function() { if (!isRunning) { isRunning = true; startTime = getTime(); timedLoop(1000, function() { var currentTime = getTime(); var elapsedTime = currentTime - startTime; elapsedTime = Math.round(elapsedTime/1000); setText(&quot;timer&quot;, &quot;Time: &quot; - elapsedTime + 180); }); } }); onEvent(&quot;returnhomeend&quot;, &quot;click&quot;, function() { isRunning = false; stopTimedLoop(); }); var crowns; onEvent(&quot;startquiz&quot;, &quot;click&quot;, function( ) { crowns = 0; setScreen(&quot;giantquestion&quot;); }); onEvent(&quot;radio_buttonG!&quot;, &quot;click&quot;, function( ) { showElement(&quot;nextS&quot;); }); onEvent(&quot;radio_buttonG2&quot;, &quot;click&quot;, function( ) { setScreen(&quot;theend&quot;); }); onEvent(&quot;returnhomeend&quot;, &quot;click&quot;, function( ) { setScreen(&quot;homescreen&quot;); }); onEvent(&quot;claimreward1&quot;, &quot;click&quot;, function( ) { setScreen(&quot;noreward&quot;); }); onEvent(&quot;returnhome&quot;, &quot;click&quot;, function( ) { setScreen(&quot;homescreen&quot;); }); onEvent(&quot;nextS&quot;, &quot;click&quot;, function( ) { setScreen(&quot;successgiantattack&quot;); hideElement(&quot;nextS&quot;); showElement(&quot;nextskarmy&quot;); }); onEvent(&quot;nextskarmy&quot;, &quot;click&quot;, function( ) { setScreen(&quot;skarmyquestion&quot;); hideElement(&quot;nextskarmy&quot;); }); onEvent(&quot;radio_buttonS1&quot;, &quot;click&quot;, function( ) { setScreen(&quot;theend&quot;); }); onEvent(&quot;radio_buttonS2&quot;, &quot;click&quot;, function( ) { showElement(&quot;NextAttack&quot;); }); onEvent(&quot;returnhomeend&quot;, &quot;click&quot;, function( ) { setScreen(&quot;homescreen&quot;); }); onEvent(&quot;NextAttack&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackquestion&quot;); }); onEvent(&quot;Left&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleft&quot;); }); onEvent(&quot;RIGHT&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackright&quot;); }); onEvent(&quot;attackgiantleft&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftgiant&quot;); }); onEvent(&quot;attackgoblinleft&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftgoblin&quot;); }); onEvent(&quot;attackmusketeerleft&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftmusketeer&quot;); }); onEvent(&quot;attackskarmyleft&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftskarmy&quot;); }); onEvent(&quot;attacksparkyleft&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftsparky&quot;); }); onEvent(&quot;giantright&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightgiant&quot;); }); onEvent(&quot;wizardright&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightwizard&quot;); }); onEvent(&quot;musketeerright&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightmusketeer&quot;); }); onEvent(&quot;righthogrider&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrighthogrider&quot;); }); onEvent(&quot;goblinright&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightgoblin&quot;); }); onEvent(&quot;nextleftgiant&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attacksucessboth&quot;); crowns = 3; }); onEvent(&quot;nextleftgoblin&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftdefeat&quot;); crowns = 0; }); onEvent(&quot;nextleftmusketeer&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftdefeat&quot;); crowns = 0; }); onEvent(&quot;nextleftskarmy&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackleftsuccess&quot;); crowns = 1; }); onEvent(&quot;nextleftsparky&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attacksucessboth&quot;); crowns = 3; }); onEvent(&quot;attackrightgiant&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attacksucessboth&quot;); crowns = 3; }); onEvent(&quot;attackrightgoblin&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightdefeat&quot;); crowns = 0; }); onEvent(&quot;attackrighthogrider&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightsuccess&quot;); crowns = 1; }); onEvent(&quot;attackrightmusketeer&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightdefeat&quot;); crowns = 0; }); onEvent(&quot;attackrightwizard&quot;, &quot;click&quot;, function( ) { setScreen(&quot;attackrightsuccess&quot;); crowns = 1; }); onEvent(&quot;returnhomeleft&quot;, &quot;click&quot;, function( ) { setScreen(&quot;homescreen&quot;); }); onEvent(&quot;returnhomeright&quot;, &quot;click&quot;, function( ) { setScreen(&quot;homescreen&quot;); }); onEvent(&quot;nextleftgiant&quot;, &quot;click&quot;, function( ) { setScreen(&quot;homescreen&quot;); }); onEvent(&quot;nextwinscreen&quot;, &quot;click&quot;, function( ) { setScreen(&quot;winscreen&quot;); }); onEvent(&quot;nextwinscreenright&quot;, &quot;click&quot;, function( ) { setScreen(&quot;winscreen&quot;); }); onEvent(&quot;nextwinscreenleft&quot;, &quot;click&quot;, function( ) { setScreen(&quot;winscreen&quot;); }); onEvent(&quot;nextwinscreen&quot;, &quot;click&quot;, function( ) { setText(&quot;crownlabel&quot;, crowns + &quot;crowns&quot;); }); onEvent(&quot;nextwinscreenright&quot;, &quot;click&quot;, function( ) { setText(&quot;crownlabel&quot;, crowns + &quot;crowns&quot;); }); onEvent(&quot;nextwinscreenleft&quot;, &quot;click&quot;, function( ) { setText(&quot;crownlabel&quot;, crowns + &quot;crowns&quot;); }); onEvent(&quot;returnhomewin&quot;, &quot;click&quot;, function( ) { setScreen(&quot;fakehome&quot;); }); onEvent(&quot;claimrealreward&quot;, &quot;click&quot;, function( ) { setScreen(&quot;golem&quot;); }); .",
            "url": "https://orlando-c.github.io/que-pro/java/week-3/apcsp/2022/09/12/applab.html",
            "relUrl": "/java/week-3/apcsp/2022/09/12/applab.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "Week 3 Assignment Scrum Board",
            "content": "Waitlist Ideas In Progress Complete . void | Finance (idea description below) | Brainstorming and Ideas | void | . Idea (inspired by my dad) . Goal: Use data from up to 10 years of history to predict 1-12 months worth of data | . Design . Input data for 3-10 years | Find trends and evaluate depending on month and event | Use data to predict finances for that month or year | . print(&quot;What is my purpose? - To find trends in finances&quot;) . What is my purpose - To find trends in finances .",
            "url": "https://orlando-c.github.io/que-pro/python/markdown/week-3/apcsp/2022/09/12/Scrum-Board.html",
            "relUrl": "/python/markdown/week-3/apcsp/2022/09/12/Scrum-Board.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "Question to Database",
            "content": "from tokenize import Ignore questions = [ &quot;What is your favorite type of dog? (Please use capitals and accurate spelling - ex. Huskey) &quot;] answer = input print (questions) guess = (input()) print (guess) print(&quot;Thank you for answering the question! Your response will be saved in a database for me to look over!&quot;) . [&#39;What is your favorite type of dog? (Please use capitals and accurate spelling - ex. Huskey) &#39;] German Shepard Thank you for answering the question! Your response will be saved in a database for me to look over! . name = (guess) print(&quot;dog&quot;, name, type(name)) print() . NameError Traceback (most recent call last) /root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb Cell 3 in &lt;cell line: 1&gt;() -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W2sdnNjb2RlLXJlbW90ZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; name = (guess) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W2sdnNjb2RlLXJlbW90ZQ%3D%3D?line=1&#39;&gt;2&lt;/a&gt; print(&#34;dog&#34;, name, type(name)) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W2sdnNjb2RlLXJlbW90ZQ%3D%3D?line=3&#39;&gt;4&lt;/a&gt; print() NameError: name &#39;guess&#39; is not defined . InfoDb = [] InfoDb.append({ &quot;Favorite Dog&quot;: (guess)}) print (InfoDb) . [{&#39;Favorite Dog&#39;: &#39;German Shepard&#39;}] . def print_data(d_rec): print(d_rec[&quot;Favorite Dog&quot;]) def for_loop(): #only if there are more than one answer print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output . NameError Traceback (most recent call last) /root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb Cell 5 in &lt;cell line: 9&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W4sdnNjb2RlLXJlbW90ZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; for record in InfoDb: &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W4sdnNjb2RlLXJlbW90ZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; print_data(record) -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W4sdnNjb2RlLXJlbW90ZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; for_loop() /root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb Cell 5 in for_loop() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W4sdnNjb2RlLXJlbW90ZQ%3D%3D?line=3&#39;&gt;4&lt;/a&gt; def for_loop(): #only if there are more than one answer &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W4sdnNjb2RlLXJlbW90ZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; print(&#34;For loop output n&#34;) -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W4sdnNjb2RlLXJlbW90ZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; for record in InfoDb: &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/root/vscode/que-pro/_notebooks/2022-08-30-Please-Give-Me-Your-Info.ipynb#W4sdnNjb2RlLXJlbW90ZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; print_data(record) NameError: name &#39;InfoDb&#39; is not defined .",
            "url": "https://orlando-c.github.io/que-pro/2022/08/30/Please-Give-Me-Your-Info.html",
            "relUrl": "/2022/08/30/Please-Give-Me-Your-Info.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "World History Religions Key",
            "content": "Fill in something for each box. If the religion does not have that category, write NONE. . Christianity Islam Hinduism Buddhism . Basic Info./ Stats | 2.38 billion people . 31% of the world population . Found mainly in Europe, Russia, North America, South America, Central America, parts of Africa, the Philippines, and much of Oceania . | 1.8 billion followers . 25% of the world . Found mainly in the middle East, central Asia, and Northern Africa . | Around 1 billion followers . | Mainly in India . | About 15% of the world population . | 95% of Hindus in India . | . | ~506 million followers . ~6.6% of the population . South/Southeast Asia . | . A. . Rituals and Sacred Objects . | Cross, Baptism, Praying, Angels | Prayer rugs, praying 5 times a day, sacred Kaaba (house of Allah) | Life cycle rituals . death and ancestor rituals . | initiation . | . Sacred Objects - banana tree, mango leaves, gold . | sacred objects: white parasol, conch shell, treasure vase, victory banner, dharma wheel, pair of golden fish, endless knot, lotus flowers . rituals: mantras, chanting, meditation, gift-giving . | . B. Divinity (God/ Gods) | Holy Trinity - . One God, Holy Spirit, and Jesus . | The one and only god AllahAllah, a forgiving god. | worship single deity, “Brahman”, still recognize other gods/goddesses | Buddha is a wise teacher and model, but not divine | . C. Scrip- . tures . | The Holy Bible, the old testament and the new testament . | . | The Quran is the holy book of Islam. | The Vedas . Rigveda, Yajurveda, Samaveda, and the Atharvaveda . The Upanishads . | Sutras: sayings of the Buddha compiled . Tripitaka: . Sutta Pitaka: words and speech of the Buddha . Vinaya Pitaka: rules for monks . Abhidhamma Pitaka: analytical writings . | . D. . Salva- . tion . | Repenting of sins and keeping faith to God to get to Heaven in the afterlife . Jesus provides salvation for those who follow the Bible’s teaching and a Christian lifestyle. . | The Mercy of god Merits salvation is you ask for forgiveness | strive to reach “‘moksha”, salvation-ends cycle of rebirth-absolute goal | Achieve enlightenment (Nirvana) to remove malice/evil after death. | . E. . Good and Evil . | Good; going to church/reading the bible/not commiting sins . Bad; Commiting sin, not reading the bible, not going to church. Good things include being holy, kind to all, and praying. (Things The Bible tell you to do) . Bad things include commiting sins, not having faith, and doing things against The Bible will lead you to hell in the afterlife. . | People themselves should know the difference between good and evil. | Abide by dharma (a moral code) strive to achieve dharma, a code of living with good conduct . | . | Treat others with compassion . Follow the Eightfold Path and the 5 moral precepts . | . Confucianism Taoism Sikhism Judaism Animism . Basic Info./ Stats | 6.1 million . 0.09% World Population . Found in Korea, Japan, Vietnam . | ~8.7 million followers . ~0.11% world population . ~Mainly in China and Taiwan . | ~25 million followers worldwide . ~0.3% of the world&#39;s population . ~ Punjab Region . | ~14.8 million worldwide followers . ~0.2% of the population . Two most major countries are the United States and Israel . Found primarily in Israel and U.S. . | ~9-240 million followers . ~0.1-3% of world population . | . Founded in Central Africa and Southeast Asia . ~Located in Central Africa, Southeast Asia, and tribal societies around the world . | . A. . Rituals and Sacred Objects . | Ancestor worship through sacrifices, ceremonies, and celebrations. Pots filled with sacred wine used in rituals. | | . sacred site: Mount Laojun . symbol: yin and yang . rituals: chanting, playing instruments, and dancing . | ~Kara (steel bracelet) . ~ Kirpan (small sword) . ~ Khanda (Sikh symbol) . ~ . | The Torah . The Ark . The Eternal Light . Bar and Bat MItzvahs . Yom Kippur . Rosh Hashanah . Sukkot . | Ceremonies were performed by shamans to please good spirits to protect people and provide them with food, shelter, and fertility as well as ward off evil spirits. . Sacred objects included various spiritual places and spirits. . | . B. Divinity (God/ Gods) | No Confucian gods but Confucius doesn’t deny the existance of Gods.. Ancestors worshiped as spirits/deities. | Tao: universe, creation, aka “the nameless” . Many deities representing all human activities, spirits, etc. . | Wakeguru - god that creates all | Yahweh (God) . Monotheistic, they believe in one God, who is Yahweh. . | Animism is not monotheistic or polytheistic because animists find power in sacred objects.No god/gods but followers believed in the existence of spirits that lived in non-human entities (trees, rocks, animals, forces of nature, bodies of water). . | . | . C. Scrip- . tures . | There are 4 books . the Doctrine of the Mean, the Great Learning Mencius, and the Analects. These contain the written knowledge of Confucius. . | Tao Te Ching: “The Way and Its Power” by Laozi | Guru Granth Sahib - Contains hymns, poems, Shabads, etc. | -The Torah . | The Tanakh . | The Talmud . | The Haggadah . | Haftara . | Old testament . | 5 books of Moses . | . | Although people have written about Animism, there are no texts that followers consider sacred. | . D. . Salva- . tion . | They didn’t deny an afterlife but they also didn’t focus on one. Rather, Confucius wanted to prioritize current life and relationships. | Become aligned w/ the natural world, strive for immortality | Salvation is achieved when a devotee develops an intimate faith and relationship with God. | Salvation comes from the Lord and is given to the Jewish nation. God delivered Abraham and his descendants from sin. In order to achieve salvation from Yahweh, one must live a dedicated life to HIm, fast, worship, and celebrate appropriate holidays. | Animism doesn’t lead their followers to salvation . | This makes it harder for animism to compete with other world religions . | No notions of salvation in Animism. . | . | . E. . Good and Evil . | Believed that suffering and evil is inevitable, but should be viewed as mistakes to learn from. Confucius also believed that people should treat others with respect and kindness to avoid discord and dishonor. | values: kindness, moderation, humility . anything that flows with way of the Tao . | . No . killing . | stealing . | sexual misconduct . | false speech . | taking of intoxicants . | . | ~ 5 vices . pride . | lust . | greed . | ego . | anger . | . ~ 3 duties . Nam Japna (pray) . | Kirt Karna (work) . | Vand Chhakna (give) . | . Suffering is a test . test of courage . Evil cannot be removed by God or else humans wouldn’t have free will. . | Everyone is born with a good and evil inclination. . | Human struggle against evil is mandatory . | Rejects violence . | Must be compassionate, kind and humble . | No Hatred . | . | Since humans are equal with other animals, plants, and natural forces, followers of Animism treat these agents with respect. Not respecting the spirits results in punishment that may have to be atoned for. . | . | .",
            "url": "https://orlando-c.github.io/que-pro/2022/08/29/World-History-Religions-Key.html",
            "relUrl": "/2022/08/29/World-History-Religions-Key.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "Apcsp Alumni Panel Recap",
            "content": "APCSP Alumni Panel Recap . Names of panel: Colin, Anthony, Andrew, Mable, Allison, Ditya (Sorry if any names are butchered) . | . Colin likes to 3D model, is going to UCSD for mechanical engineering, took APCSP twice. . | Suggests you keep motivation, google your problems . | . Anthony majors in CS at UCI, took APCSP and APCSA, works at code ninjas. . | Suggests Google doc -&gt; DocX, refrain form clashing egos, focus on your path. . | . Andrew liked the complexity upon entering CS, He took CSA and Intro to CS. Going to UCSD or UCLA . | Suggests focusing on your work, the theory behind CS in high school is not the same entering college. . | . Mable found it hard to find motivation in CS but knew all the job opportunities it unlocked. She ended up in aerospace engineering and cognitive science . | . Allison was more artsy and business rather than geeky, she likes web building and is majoring cognitive science at UCLA . | Suggests that starting is the hardest part, there is the temptation to bs, dont cut corners . | . Ditya is a computer science major at UCLA, she likes to make games and applies APCSA for her real life problems . | . PBL Scenarios (Problem Based Learning) . | . Colin: There are a few hands on problems where you have to use your knowledge to solve the problem . Andrew: PBL’s and Tests will be similar. PBL is involved in CS . Mable: Might be doing a lot of studying with groups. Large class sizes. Lot of time managing groups. . Takeaway: Computer Science does have some hands on learning and real life solving but more likely depends on which division you choose to take which will decide the amount of work you will be doing. . How have you applied CS in your major if you are not majoring CS . | . Colin: Write scripts, make complex calculations . Mable: Trying to program analysis and stress test. You can use many different applications. Jupyter notebooks are used for technical math . Andrew: Math courses use a lot of code for applications like graphs, vertices, etc . Allison: Good for stats, phycology, etc . Takeaway: Computer Science is expanding the world around us and makes life a whole lot easier. . For existing college students, have you had a job with a school or professor? . | . Colin: Stand out to your teachers - Internship with Northrop Grumman, wiring diagrams, visualizing flight data, cybersecurity . Anthony: Working at Code Ninjas . Mable: Internship at Northrop Grumman, Scripting for staff, flight data Andrew: Internship at LG (Javascript, html, python) . Takeaway: There are many professions and paths you can take towards building your career at a young age. . Did you ever focus on personal projects? . | . Andrew: Focus on some personal projects. Very useful for applications . Anthony: Doesnt have to be much . Takeaway: Personal projects are good on resumes and show your knowledge. . Tips to get internships . | . Have a resume . Knowing when to apply (Start looking Sept-Nov) . Referals are helpful . Join Clubs .",
            "url": "https://orlando-c.github.io/que-pro/2022/08/29/APCSP-Alumni-Panel-Recap.html",
            "relUrl": "/2022/08/29/APCSP-Alumni-Panel-Recap.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "Ap World Notes",
            "content": "Confucianism (East Asia) . 6th-5th century bce: Life of Confucious 6th-3rd century bce: Lives of Laozi &amp; Zhuangzi 206 bce - 220 ce: Han dynasty establishes Confucianism as official ideaology 111 bce - 939 ce: Confucianism is introduced and established in Vietnam under Chinese rule 4th-11th century: Confucianism roots in India 7th century: Shotoku establishes Confucianism in Japan 960 - 1279: Neo-Confucianism flourishes in Song Dynasty China . Buddhism (South Asia) 8th-4th century bce: Hindu Vpanishads comply 560 - 486 bce: Life of the Buddha 1st-3rd century: Mahayana Buddhism emerges 1st-8th century: Buddhism established in China 3rd century: Bhagavad Gita compiled in final form 6th-12th century: Bhakti Movement takes place in India 10th century: Buddhism dissapears in India 1200 - 1299: Zen Buddhism in Japan . Christianity, Islam, Judaism (Middle East, West/East Europe) 9th-6th century bce: Jewish prophets (Isaiah, Jerimiah, Amos) 400 bce - 29 ce: Life of Jesus 6 - 67: Life of Saint Paul 4th century: Christianity established in Roman empire 576 - 632: Life of Muhammamad 7th century: Sunni/Shem split in Islam 750 - 900: Islam established in Persia 8th-10th century: Sufi Islam 1054: Division between Orthodox and Catholic churches .",
            "url": "https://orlando-c.github.io/que-pro/2022/08/29/AP-World-Notes.html",
            "relUrl": "/2022/08/29/AP-World-Notes.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "Different Civilizations And Their Attributes (APWH)",
            "content": "questions = [ &quot;What was the name of the civilization type that primarily used animals as a food source, were stationary, and egalitarian?&quot;, &quot;What was the name of the civilization type that was focused on growing food, stationary, and also egalitarian?&quot;, &quot;What was the name of the civilization type that was found primarily in the western hemisphere, used more primative ways to get food, and does not fall into any category of social status?&quot;] answers = [ &quot;pastoral&quot;, &quot;agricultural&quot;, &quot;chief-dom&quot;] pointValues = [ 1, 1, 1] level = 0 points = 0 for question in questions: print(&quot;For &quot;, pointValues[level], &quot; points(s): &quot; + question) guess = str(input()) if(guess == answers[level]): points+=pointValues[level] print(&quot;You got it! You answered &quot; + guess +&quot; for &quot;+ str(pointValues[level]) + &quot; point(s), Your point total is &quot; +str(points) + &quot; point(s)&quot;) else: print(&quot;Wrong! You answered &quot; + guess +&quot; for &quot;+ str(pointValues[level]) + &quot; point(s), The correct response was &quot; + answers[level]+ &quot; You currently have &quot; + str(points) + &quot; point(s)&quot;) level+=1 print(&quot;These were the early types of societies and were the dawn of todays civilizations&quot;) . For 1 points(s): What was the name of the civilization type that primarily used animals as a food source, were stationary, and egalitarian? You got it! You answered pastoral for 1 point(s), Your point total is 1 point(s) For 1 points(s): What was the name of the civilization type that was focused on growing food, stationary, and also egalitarian? You got it! You answered agricultural for 1 point(s), Your point total is 2 point(s) For 1 points(s): What was the name of the civilization type that was found primarily in the western hemisphere, used more primative ways to get food, and does not fall into any category of social status? You got it! You answered chief-dom for 1 point(s), Your point total is 3 point(s) These were the early types of societies and were the dawn of todays civilizations .",
            "url": "https://orlando-c.github.io/que-pro/apwh/2022/08/29/AP-World-History-Civilizations.html",
            "relUrl": "/apwh/2022/08/29/AP-World-History-Civilizations.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "Bash",
            "content": "%%bash cal date echo &quot;this is what bash can do and so much more&quot; . August 2022 Su Mo Tu We Th Fr Sa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 Sun Aug 28 22:47:14 PDT 2022 this is what bash can do and so much more . Now try to use it for classes outside of APCSP! . By taking files from my computer and exporting it to my github! . %%bash export school_dir=HOME/que-pro export project=$school_dir/que-pro export school_repo=&quot;https://gitthub.com/Orlando-C/que-pro&quot; cd ~ if [ ! -d $school_dir ] then echo &quot;Directory $school_dir does not exist loser, common L. Lemme make it $school_dir&quot; mkdir -p school fi echo &quot;Directory $school_dir exists.&quot; if [ ! -d $school ] then echo &quot;Directory $school_dir does not exists... cloning $school_repo&quot; cd $school_dir git clone $school_repo cd ~ fi echo &quot;Directory $school exists.&quot; APCSP=HOME/school/AP_Computer_Science_Principles APWH=HOME/school/AP_World_History MathInt2B=HOME/school/Integrated_2_B cd ~ if [ ! -d $APCSP ] then echo &quot;Directory $APCSP has somehow dissapeared... weird&quot; mkdir -p $APCSP fi echo &quot;Directory $APCSP has been prepared&quot; if [ ! -d $APWH ] then echo &quot;Directory $APWH has somehow dissapeared... weird&quot; fi echo &quot;Directory $APWH has been prepared&quot; if [ ! -d $MathInt2B ] then echo &quot;Directory $MathInt2B has somehow dissapeared... weird&quot; fi echo &quot;Directory $MathInt2B has been prepared&quot; . Directory HOME/que-pro does not exist loser, common L. Lemme make it HOME/que-pro Directory HOME/que-pro exists. Directory exists. Directory HOME/school/AP_Computer_Science_Principles has somehow dissapeared... weird Directory HOME/school/AP_Computer_Science_Principles has been prepared Directory HOME/school/AP_World_History has somehow dissapeared... weird Directory HOME/school/AP_World_History has been prepared Directory HOME/school/Integrated_2_B has somehow dissapeared... weird Directory HOME/school/Integrated_2_B has been prepared .",
            "url": "https://orlando-c.github.io/que-pro/bash/week-2/apcsp/2022/08/28/blog-dos.html",
            "relUrl": "/bash/week-2/apcsp/2022/08/28/blog-dos.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "A quiz (using python) on Star Wars!",
            "content": "from tokenize import Ignore print(&quot;Welcome to my quiz on Star Wars! Test your knowledge to see if you are a true Star Wars nerd! So everything runs smoothly, please answer in all lowercase. Thanks and have fun!&quot;) questions = [ &quot;Level 0: Who is Luke Skywalker&#39;s father?&quot;, &quot;Level 1: What trilogy is the Death Star primarily in?&quot;, &quot;Level 2: What is Finn&#39;s stormtrooper code name?&quot;, &quot;Level 3: Where did Anakin and Obiwan duel Darth Maul?&quot;, &quot;Level 4: What is Anakin&#39;s midi-chlorian count (aproximately)?&quot;, &quot;Level 5: Of what species is Yoda?&quot;] answers = [ &quot;anakin skywalker&quot;, &quot;original trilogy&quot;, &quot;fn-2187&quot;, &quot;naboo&quot;, &quot;27000&quot;, &quot;unknown&quot;] MidichlorianValues = [ 250, 750, 2000, 4000, 8000, 12000] #Variables level = 0 Midichlorian = 0 for question in questions: print(&quot;For &quot;, MidichlorianValues[level], &quot; Midi-Chlorian: &quot; + question) guess = str(input()) if(guess == answers[level]): Midichlorian+=MidichlorianValues[level] print(&quot;You got it! You answered &quot; + guess +&quot; for &quot;+ str(MidichlorianValues[level]) + &quot; Midi-Chlorian, Your Midi-Chlorian total is &quot; +str(Midichlorian) + &quot; Midi-Chlorian &quot;) else: print(&quot;Wrong! I find your lack of faith disturbing. You answered &quot; + guess +&quot; for &quot;+ str(MidichlorianValues[level]) + &quot; Midi-Chlorian, The correct response was &quot; + answers[level]+ &quot; You currently have &quot; + str(Midichlorian) + &quot; Midi-Chlorian&quot;) level+=1 if(level&gt;5): if(Midichlorian&gt;17000): print(&quot;The Empire wants YOU to join! You recieved a total of &quot;+str(Midichlorian) + &quot; Midi-Chlorian out of 27000 possible Midi-Chlorian&quot;) else: print(&quot;You&#39;ve been Jedi mind-tricked! You recieved a total of &quot;+str(Midichlorian) + &quot; Midi-chlorian out of 27000 possible Midi-Chlorian&quot;) else: Ignore . Welcome to my quiz on Star Wars! Test your knowledge to see if you are a true Star Wars nerd! So everything runs smoothly, please answer in all lowercase. Thanks and have fun! For 250 Midi-Chlorian: Level 0: Who is Luke Skywalker&#39;s father? You got it! You answered anakin skywalker for 250 Midi-Chlorian, Your Midi-Chlorian total is 250 Midi-Chlorian For 750 Midi-Chlorian: Level 1: What trilogy is the Death Star primarily in? You got it! You answered original trilogy for 750 Midi-Chlorian, Your Midi-Chlorian total is 1000 Midi-Chlorian For 2000 Midi-Chlorian: Level 2: What is Finn&#39;s stormtrooper code name? You got it! You answered fn-2187 for 2000 Midi-Chlorian, Your Midi-Chlorian total is 3000 Midi-Chlorian For 4000 Midi-Chlorian: Level 3: Where did Anakin and Obiwan duel Darth Maul? You got it! You answered naboo for 4000 Midi-Chlorian, Your Midi-Chlorian total is 7000 Midi-Chlorian For 8000 Midi-Chlorian: Level 4: What is Anakin&#39;s midi-chlorian count (aproximately)? You got it! You answered 27000 for 8000 Midi-Chlorian, Your Midi-Chlorian total is 15000 Midi-Chlorian For 12000 Midi-Chlorian: Level 5: Of what species is Yoda? You got it! You answered unknown for 12000 Midi-Chlorian, Your Midi-Chlorian total is 27000 Midi-Chlorian The Empire wants YOU to join! You recieved a total of 27000 Midi-Chlorian out of 27000 possible Midi-Chlorian . !pwd from IPython.display import Image Image(url=&quot;images/ineedyoustarwars.jpg&quot;, width=183, height=275) . /root/vscode/que-pro/_notebooks .",
            "url": "https://orlando-c.github.io/que-pro/python/week-2/apcsp/2022/08/28/The-Quiz.html",
            "relUrl": "/python/week-2/apcsp/2022/08/28/The-Quiz.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "How To Add Images To Markdown Posts",
            "content": "How to add an image to your posts! . Below is a simple explanation of how to add an image to your post (only md) . toc: true | badges: true | comments: true | categories: [jupyter,week-2,APCSP] | image: images/adding-an-image.png | . Markdown Preview Image (the image is the preview image lol) . First get your image, name it, put it into your “images” file, replace “adding-an-image.png” with whatever your image is called, and finally commit! . Markdown . Similar instructions as before except you will need to add this into a new markdown cell like below . .",
            "url": "https://orlando-c.github.io/que-pro/2022/08/28/How-to-add-images-to-markdown-posts.html",
            "relUrl": "/2022/08/28/How-to-add-images-to-markdown-posts.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "Markdown",
            "content": "This is a test for using markdown! . Hopefully it works today. .",
            "url": "https://orlando-c.github.io/que-pro/2022/08/22/markdown.html",
            "relUrl": "/2022/08/22/markdown.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "Jupyter Notebook Example",
            "content": "msg = &quot;how much wood can a woodchuck chuck if a woodchuck could chuck wood&quot; print (msg) . how much wood can a woodchuck chuck if a woodchuck could chuck wood .",
            "url": "https://orlando-c.github.io/que-pro/jupyter/week-0/apcsp/2022/08/22/jupyterv3.html",
            "relUrl": "/jupyter/week-0/apcsp/2022/08/22/jupyterv3.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post44": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | .",
            "url": "https://orlando-c.github.io/que-pro/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Jul 7, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "/bio/",
          "content": "About Me! . My name is Orlando J. Carcamo, I am currently a sophomore attending Del Norte High School. I prefer mornings and nights over noon and evenings, certified tech repair-guy, videogame connoissuer, and pro lego set builder. | . Where to find me . You can contact me at my email (lando.j.carcamo@gmail.com) . Or you can message me on Instagram orlandoo.c .",
          "url": "https://orlando-c.github.io/que-pro/bio/",
          "relUrl": "/bio/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  
      ,"page6": {
          "title": "/shop/",
          "content": "&lt;!DOCTYPE html&gt; . Shopping Cart . Shopping Cart . Tonka Yellow Mellow T-Shirt: Add to Cart Get Tonka&#39;d T-Shirt: Add to Cart Tonka Soccer Sport Longsleve: Add to Cart Save Cart View Cart .",
          "url": "https://orlando-c.github.io/que-pro/shop/",
          "relUrl": "/shop/",
          "date": ""
      }
      
  

  
      ,"page7": {
          "title": "/social/",
          "content": "Find someone . &lt;!DOCTYPE html&gt; . Github Profile Fetch Api . Get Details . . | | . . Create User . Name: . User ID: &lt;/label&gt;&lt;/p&gt; Password: . Verify Password: . Phone: . Birthday: . Create . &lt;/form&gt; Login . Name Email Password Phone . | | | | Create | . .",
          "url": "https://orlando-c.github.io/que-pro/social/",
          "relUrl": "/social/",
          "date": ""
      }
      
  

  

  
  

  
  

  
  

  

  

  
  

  
      ,"page15": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://orlando-c.github.io/que-pro/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}